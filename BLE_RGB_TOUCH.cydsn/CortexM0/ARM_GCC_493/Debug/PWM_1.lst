ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_1_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_1_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_1_Enable, %function
  23              	PWM_1_Enable:
  24              	.LFB4:
  25              		.file 1 "Generated_Source\\PSoC4\\PWM_1.c"
   1:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:Generated_Source\PSoC4/PWM_1.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM_1.c **** *
   5:Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:Generated_Source\PSoC4/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM_1.c **** *
  15:Generated_Source\PSoC4/PWM_1.c **** * Note:
  16:Generated_Source\PSoC4/PWM_1.c **** *
  17:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM_1.c **** 
  24:Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  25:Generated_Source\PSoC4/PWM_1.c **** 
  26:Generated_Source\PSoC4/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC4/PWM_1.c **** 
  32:Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 2


  33:Generated_Source\PSoC4/PWM_1.c **** 
  34:Generated_Source\PSoC4/PWM_1.c **** 
  35:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
  37:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM_1.c **** *
  39:Generated_Source\PSoC4/PWM_1.c **** * Summary:
  40:Generated_Source\PSoC4/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM_1.c **** *
  44:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM_1.c **** *  None
  46:Generated_Source\PSoC4/PWM_1.c **** *
  47:Generated_Source\PSoC4/PWM_1.c **** * Return:
  48:Generated_Source\PSoC4/PWM_1.c **** *  None
  49:Generated_Source\PSoC4/PWM_1.c **** *
  50:Generated_Source\PSoC4/PWM_1.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM_1.c **** *
  54:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void) 
  56:Generated_Source\PSoC4/PWM_1.c **** {
  57:Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM_1.c ****     if(PWM_1_initVar == 0u)
  59:Generated_Source\PSoC4/PWM_1.c ****     {
  60:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
  61:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
  62:Generated_Source\PSoC4/PWM_1.c ****     }
  63:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
  64:Generated_Source\PSoC4/PWM_1.c **** 
  65:Generated_Source\PSoC4/PWM_1.c **** }
  66:Generated_Source\PSoC4/PWM_1.c **** 
  67:Generated_Source\PSoC4/PWM_1.c **** 
  68:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  70:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM_1.c **** *
  72:Generated_Source\PSoC4/PWM_1.c **** * Summary:
  73:Generated_Source\PSoC4/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_Start().
  76:Generated_Source\PSoC4/PWM_1.c **** *
  77:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM_1.c **** *  None
  79:Generated_Source\PSoC4/PWM_1.c **** *
  80:Generated_Source\PSoC4/PWM_1.c **** * Return:
  81:Generated_Source\PSoC4/PWM_1.c **** *  None
  82:Generated_Source\PSoC4/PWM_1.c **** *
  83:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void) 
  85:Generated_Source\PSoC4/PWM_1.c **** {
  86:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:Generated_Source\PSoC4/PWM_1.c ****         uint8 ctrl;
  88:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
  89:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 3


  90:Generated_Source\PSoC4/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:Generated_Source\PSoC4/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM_1.c **** 
  97:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM_1.c **** 
 104:Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM_1.c **** 
 107:Generated_Source\PSoC4/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:Generated_Source\PSoC4/PWM_1.c **** 
 111:Generated_Source\PSoC4/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM_1.c **** 
 115:Generated_Source\PSoC4/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:Generated_Source\PSoC4/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM_1.c **** 
 123:Generated_Source\PSoC4/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM_1.c **** 
 133:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM_1.c **** 
 136:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC4/PWM_1.c **** 
 138:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/PWM_1.c ****         #else
 141:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM_1.c **** 
 145:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 4


 147:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM_1.c **** 
 149:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM_1.c **** 
 153:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:Generated_Source\PSoC4/PWM_1.c **** 
 157:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM_1.c ****     #else
 163:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:Generated_Source\PSoC4/PWM_1.c **** 
 165:Generated_Source\PSoC4/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM_1.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/PWM_1.c **** 
 171:Generated_Source\PSoC4/PWM_1.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:Generated_Source\PSoC4/PWM_1.c **** 
 174:Generated_Source\PSoC4/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM_1.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_ClearFIFO();
 177:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM_1.c **** }
 180:Generated_Source\PSoC4/PWM_1.c **** 
 181:Generated_Source\PSoC4/PWM_1.c **** 
 182:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 184:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM_1.c **** *
 186:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 187:Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM_1.c **** *
 189:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM_1.c **** *  None
 191:Generated_Source\PSoC4/PWM_1.c **** *
 192:Generated_Source\PSoC4/PWM_1.c **** * Return:
 193:Generated_Source\PSoC4/PWM_1.c **** *  None
 194:Generated_Source\PSoC4/PWM_1.c **** *
 195:Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM_1.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM_1.c **** *
 198:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void) 
 200:Generated_Source\PSoC4/PWM_1.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:Generated_Source\PSoC4/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 5


 202:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM_1.c **** 
 207:Generated_Source\PSoC4/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024A     		ldr	r2, .L2
  30 0002 1178     		ldrb	r1, [r2]
  31 0004 8023     		mov	r3, #128
  32 0006 0B43     		orr	r3, r1
  33 0008 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM_1.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 71000F40 		.word	1074724977
  41              		.cfi_endproc
  42              	.LFE4:
  43              		.size	PWM_1_Enable, .-PWM_1_Enable
  44              		.section	.text.PWM_1_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	PWM_1_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	PWM_1_Stop, %function
  50              	PWM_1_Stop:
  51              	.LFB5:
 212:Generated_Source\PSoC4/PWM_1.c **** 
 213:Generated_Source\PSoC4/PWM_1.c **** 
 214:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 216:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM_1.c **** *
 218:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 219:Generated_Source\PSoC4/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM_1.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM_1.c **** *
 222:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM_1.c **** *  None
 224:Generated_Source\PSoC4/PWM_1.c **** *
 225:Generated_Source\PSoC4/PWM_1.c **** * Return:
 226:Generated_Source\PSoC4/PWM_1.c **** *  None
 227:Generated_Source\PSoC4/PWM_1.c **** *
 228:Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM_1.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM_1.c **** *
 232:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void) 
 234:Generated_Source\PSoC4/PWM_1.c **** {
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024A     		ldr	r2, .L5
  56 0002 1178     		ldrb	r1, [r2]
  57 0004 7F23     		mov	r3, #127
  58 0006 0B40     		and	r3, r1
  59 0008 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:Generated_Source\PSoC4/PWM_1.c **** 
 239:Generated_Source\PSoC4/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM_1.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 71000F40 		.word	1074724977
  67              		.cfi_endproc
  68              	.LFE5:
  69              		.size	PWM_1_Stop, .-PWM_1_Stop
  70              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_1_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_1_WriteCounter, %function
  76              	PWM_1_WriteCounter:
  77              	.LFB6:
 245:Generated_Source\PSoC4/PWM_1.c **** 
 246:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM_1.c **** 
 249:Generated_Source\PSoC4/PWM_1.c **** 
 250:Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM_1.c ****         *
 254:Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 255:Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC4/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM_1.c ****         *
 258:Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM_1.c ****         *
 262:Generated_Source\PSoC4/PWM_1.c ****         * Return:
 263:Generated_Source\PSoC4/PWM_1.c ****         *  None
 264:Generated_Source\PSoC4/PWM_1.c ****         *
 265:Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 7


 266:Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM_1.c ****         {
 268:Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM_1.c **** 
 270:Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC4/PWM_1.c ****                 #else
 273:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM_1.c **** 
 276:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM_1.c **** 
 279:Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:Generated_Source\PSoC4/PWM_1.c **** 
 281:Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC4/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM_1.c ****                 #else
 285:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM_1.c **** 
 288:Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM_1.c ****                 #else
 292:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM_1.c **** 
 295:Generated_Source\PSoC4/PWM_1.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/PWM_1.c **** 
 300:Generated_Source\PSoC4/PWM_1.c ****             #else
 301:Generated_Source\PSoC4/PWM_1.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM_1.c ****         }
 304:Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM_1.c **** 
 306:Generated_Source\PSoC4/PWM_1.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM_1.c **** 
 308:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM_1.c **** 
 310:Generated_Source\PSoC4/PWM_1.c **** 
 311:Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM_1.c ****         *
 315:Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM_1.c ****         *
 318:Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 319:Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM_1.c ****         *
 322:Generated_Source\PSoC4/PWM_1.c ****         * Return:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 8


 323:Generated_Source\PSoC4/PWM_1.c ****         *  None
 324:Generated_Source\PSoC4/PWM_1.c ****         *
 325:Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM_1.c ****         {
 328:Generated_Source\PSoC4/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC4/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM_1.c ****             #else
 332:Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM_1.c **** 
 335:Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_UseControl)
 336:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:Generated_Source\PSoC4/PWM_1.c ****         }
 340:Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM_1.c **** 
 342:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM_1.c **** 
 344:Generated_Source\PSoC4/PWM_1.c **** 
 345:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM_1.c ****     *
 349:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM_1.c ****     *
 352:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM_1.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM_1.c ****     *
 356:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 357:Generated_Source\PSoC4/PWM_1.c ****     *  None
 358:Generated_Source\PSoC4/PWM_1.c ****     *
 359:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM_1.c ****     {
 362:Generated_Source\PSoC4/PWM_1.c **** 
 363:Generated_Source\PSoC4/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM_1.c ****         #else
 367:Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/PWM_1.c **** 
 370:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseControl)
 371:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:Generated_Source\PSoC4/PWM_1.c ****     }
 375:Generated_Source\PSoC4/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:Generated_Source\PSoC4/PWM_1.c **** 
 377:Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM_1.c **** 
 379:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 9


 380:Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM_1.c **** 
 382:Generated_Source\PSoC4/PWM_1.c **** 
 383:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM_1.c ****     *
 387:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM_1.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM_1.c ****     *
 393:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM_1.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM_1.c ****     *
 396:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 397:Generated_Source\PSoC4/PWM_1.c ****     *  None
 398:Generated_Source\PSoC4/PWM_1.c ****     *
 399:Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM_1.c ****     *
 402:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC4/PWM_1.c ****                                        
 405:Generated_Source\PSoC4/PWM_1.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1880     		strh	r0, [r3]
 407:Generated_Source\PSoC4/PWM_1.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 00100F40 		.word	1074728960
  91              		.cfi_endproc
  92              	.LFE6:
  93              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
  94              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	PWM_1_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	PWM_1_ReadCounter, %function
 100              	PWM_1_ReadCounter:
 101              	.LFB7:
 408:Generated_Source\PSoC4/PWM_1.c **** 
 409:Generated_Source\PSoC4/PWM_1.c **** 
 410:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 10


 413:Generated_Source\PSoC4/PWM_1.c ****     *
 414:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM_1.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM_1.c ****     *
 418:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM_1.c ****     *  None
 420:Generated_Source\PSoC4/PWM_1.c ****     *
 421:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 422:Generated_Source\PSoC4/PWM_1.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM_1.c ****     *
 424:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM_1.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:Generated_Source\PSoC4/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM_1.c **** 
 432:Generated_Source\PSoC4/PWM_1.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1888     		ldrh	r0, [r3]
 110 0008 80B2     		uxth	r0, r0
 434:Generated_Source\PSoC4/PWM_1.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 10000F40 		.word	1074724880
 118 0010 A0100F40 		.word	1074729120
 119              		.cfi_endproc
 120              	.LFE7:
 121              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 122              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	PWM_1_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	PWM_1_WritePeriod, %function
 128              	PWM_1_WritePeriod:
 129              	.LFB9:
 435:Generated_Source\PSoC4/PWM_1.c **** 
 436:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:Generated_Source\PSoC4/PWM_1.c **** 
 438:Generated_Source\PSoC4/PWM_1.c **** 
 439:Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 11


 442:Generated_Source\PSoC4/PWM_1.c ****         *
 443:Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM_1.c ****         *
 446:Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM_1.c ****         *  None
 448:Generated_Source\PSoC4/PWM_1.c ****         *
 449:Generated_Source\PSoC4/PWM_1.c ****         * Return:
 450:Generated_Source\PSoC4/PWM_1.c ****         *  None
 451:Generated_Source\PSoC4/PWM_1.c ****         *
 452:Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM_1.c ****         {
 455:Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/PWM_1.c ****             {
 457:Generated_Source\PSoC4/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:Generated_Source\PSoC4/PWM_1.c ****             }
 459:Generated_Source\PSoC4/PWM_1.c ****         }
 460:Generated_Source\PSoC4/PWM_1.c **** 
 461:Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:Generated_Source\PSoC4/PWM_1.c **** 
 463:Generated_Source\PSoC4/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM_1.c **** 
 465:Generated_Source\PSoC4/PWM_1.c **** 
 466:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM_1.c **** *
 470:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 471:Generated_Source\PSoC4/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM_1.c **** *
 474:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM_1.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM_1.c **** *
 478:Generated_Source\PSoC4/PWM_1.c **** * Return:
 479:Generated_Source\PSoC4/PWM_1.c **** *  None
 480:Generated_Source\PSoC4/PWM_1.c **** *
 481:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC4/PWM_1.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM_1.c ****     #else
 487:Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1880     		strh	r0, [r3]
 488:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:Generated_Source\PSoC4/PWM_1.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 80100F40 		.word	1074729088
 143              		.cfi_endproc
 144              	.LFE9:
 145              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 146              		.section	.text.PWM_1_WriteCompare1,"ax",%progbits
 147              		.align	2
 148              		.global	PWM_1_WriteCompare1
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWM_1_WriteCompare1, %function
 152              	PWM_1_WriteCompare1:
 153              	.LFB10:
 490:Generated_Source\PSoC4/PWM_1.c **** 
 491:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM_1.c **** 
 493:Generated_Source\PSoC4/PWM_1.c **** 
 494:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM_1.c ****     *
 498:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/PWM_1.c ****     *
 505:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM_1.c ****     *
 508:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 509:Generated_Source\PSoC4/PWM_1.c ****     *  None
 510:Generated_Source\PSoC4/PWM_1.c ****     *
 511:Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM_1.c ****     *
 515:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC4/PWM_1.c ****                                        
 518:Generated_Source\PSoC4/PWM_1.c ****     {
 519:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM_1.c ****         #else
 522:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM_1.c **** 
 525:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM_1.c ****             #else
 529:Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 13


 532:Generated_Source\PSoC4/PWM_1.c ****     }
 533:Generated_Source\PSoC4/PWM_1.c **** 
 534:Generated_Source\PSoC4/PWM_1.c **** 
 535:Generated_Source\PSoC4/PWM_1.c **** #else
 536:Generated_Source\PSoC4/PWM_1.c **** 
 537:Generated_Source\PSoC4/PWM_1.c **** 
 538:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM_1.c ****     *
 542:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 543:Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM_1.c ****     *
 548:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/PWM_1.c ****     *
 551:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 552:Generated_Source\PSoC4/PWM_1.c ****     *  None
 553:Generated_Source\PSoC4/PWM_1.c ****     *
 554:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC4/PWM_1.c ****                                         
 557:Generated_Source\PSoC4/PWM_1.c ****     {
 154              		.loc 1 557 0
 155              		.cfi_startproc
 156              	.LVL2:
 558:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM_1.c ****         #else
 561:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 561 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1880     		strh	r0, [r3]
 562:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM_1.c ****     }
 160              		.loc 1 563 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 40100F40 		.word	1074729024
 167              		.cfi_endproc
 168              	.LFE10:
 169              		.size	PWM_1_WriteCompare1, .-PWM_1_WriteCompare1
 170              		.section	.text.PWM_1_WriteCompare2,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_1_WriteCompare2
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWM_1_WriteCompare2, %function
 176              	PWM_1_WriteCompare2:
 177              	.LFB11:
 564:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 14


 565:Generated_Source\PSoC4/PWM_1.c **** 
 566:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM_1.c ****     *
 570:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM_1.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM_1.c ****     *
 577:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM_1.c ****     *
 580:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 581:Generated_Source\PSoC4/PWM_1.c ****     *  None
 582:Generated_Source\PSoC4/PWM_1.c ****     *
 583:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC4/PWM_1.c ****                                         
 586:Generated_Source\PSoC4/PWM_1.c ****     {
 178              		.loc 1 586 0
 179              		.cfi_startproc
 180              	.LVL3:
 587:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/PWM_1.c ****         #else
 590:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 181              		.loc 1 590 0
 182 0000 014B     		ldr	r3, .L20
 183 0002 1880     		strh	r0, [r3]
 591:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM_1.c ****     }
 184              		.loc 1 592 0
 185              		@ sp needed
 186 0004 7047     		bx	lr
 187              	.L21:
 188 0006 C046     		.align	2
 189              	.L20:
 190 0008 60100F40 		.word	1074729056
 191              		.cfi_endproc
 192              	.LFE11:
 193              		.size	PWM_1_WriteCompare2, .-PWM_1_WriteCompare2
 194              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 195              		.align	2
 196              		.global	PWM_1_SetInterruptMode
 197              		.code	16
 198              		.thumb_func
 199              		.type	PWM_1_SetInterruptMode, %function
 200              	PWM_1_SetInterruptMode:
 201              	.LFB12:
 593:Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM_1.c **** 
 595:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM_1.c **** 
 597:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 15


 598:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM_1.c ****     *
 602:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM_1.c ****     *
 605:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/PWM_1.c ****     *
 608:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 609:Generated_Source\PSoC4/PWM_1.c ****     *  None
 610:Generated_Source\PSoC4/PWM_1.c ****     *
 611:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM_1.c ****     {
 614:Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM_1.c ****         #else
 618:Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM_1.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/PWM_1.c **** 
 622:Generated_Source\PSoC4/PWM_1.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM_1.c ****             #else
 627:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM_1.c **** 
 630:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM_1.c ****     }
 632:Generated_Source\PSoC4/PWM_1.c **** 
 633:Generated_Source\PSoC4/PWM_1.c **** 
 634:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM_1.c ****     *
 638:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM_1.c ****     *
 641:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM_1.c ****     *  None
 643:Generated_Source\PSoC4/PWM_1.c ****     *
 644:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 645:Generated_Source\PSoC4/PWM_1.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM_1.c ****     *
 647:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM_1.c ****     {
 650:Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM_1.c ****         #else
 654:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 16


 655:Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC4/PWM_1.c ****             #else
 660:Generated_Source\PSoC4/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM_1.c ****     }
 664:Generated_Source\PSoC4/PWM_1.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM_1.c **** 
 666:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM_1.c **** 
 668:Generated_Source\PSoC4/PWM_1.c **** 
 669:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM_1.c ****     *
 673:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM_1.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM_1.c ****     *
 677:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 678:Generated_Source\PSoC4/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM_1.c ****     *
 680:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 681:Generated_Source\PSoC4/PWM_1.c ****     *  None
 682:Generated_Source\PSoC4/PWM_1.c ****     *
 683:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM_1.c ****     {
 202              		.loc 1 685 0
 203              		.cfi_startproc
 204              	.LVL4:
 686:Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 205              		.loc 1 686 0
 206 0000 014B     		ldr	r3, .L23
 207 0002 1870     		strb	r0, [r3]
 687:Generated_Source\PSoC4/PWM_1.c ****     }
 208              		.loc 1 687 0
 209              		@ sp needed
 210 0004 7047     		bx	lr
 211              	.L24:
 212 0006 C046     		.align	2
 213              	.L23:
 214 0008 81000F40 		.word	1074724993
 215              		.cfi_endproc
 216              	.LFE12:
 217              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 218              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 219              		.align	2
 220              		.global	PWM_1_ReadStatusRegister
 221              		.code	16
 222              		.thumb_func
 223              		.type	PWM_1_ReadStatusRegister, %function
 224              	PWM_1_ReadStatusRegister:
 225              	.LFB13:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 17


 688:Generated_Source\PSoC4/PWM_1.c **** 
 689:Generated_Source\PSoC4/PWM_1.c **** 
 690:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM_1.c ****     *
 694:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM_1.c ****     *
 697:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM_1.c ****     *  None
 699:Generated_Source\PSoC4/PWM_1.c ****     *
 700:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 701:Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM_1.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM_1.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM_1.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM_1.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM_1.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/PWM_1.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM_1.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM_1.c ****     *
 710:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM_1.c ****     {
 226              		.loc 1 712 0
 227              		.cfi_startproc
 713:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 228              		.loc 1 713 0
 229 0000 014B     		ldr	r3, .L26
 230 0002 1878     		ldrb	r0, [r3]
 231 0004 C0B2     		uxtb	r0, r0
 714:Generated_Source\PSoC4/PWM_1.c ****     }
 232              		.loc 1 714 0
 233              		@ sp needed
 234 0006 7047     		bx	lr
 235              	.L27:
 236              		.align	2
 237              	.L26:
 238 0008 61000F40 		.word	1074724961
 239              		.cfi_endproc
 240              	.LFE13:
 241              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 242              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 243              		.align	2
 244              		.global	PWM_1_ReadControlRegister
 245              		.code	16
 246              		.thumb_func
 247              		.type	PWM_1_ReadControlRegister, %function
 248              	PWM_1_ReadControlRegister:
 249              	.LFB14:
 715:Generated_Source\PSoC4/PWM_1.c **** 
 716:Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:Generated_Source\PSoC4/PWM_1.c **** 
 718:Generated_Source\PSoC4/PWM_1.c **** 
 719:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseControl)
 720:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 18


 721:Generated_Source\PSoC4/PWM_1.c **** 
 722:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM_1.c ****     *
 726:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM_1.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM_1.c ****     *
 730:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM_1.c ****     *  None
 732:Generated_Source\PSoC4/PWM_1.c ****     *
 733:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 734:Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM_1.c ****     *
 736:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM_1.c ****     {
 250              		.loc 1 738 0
 251              		.cfi_startproc
 739:Generated_Source\PSoC4/PWM_1.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM_1.c **** 
 741:Generated_Source\PSoC4/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 252              		.loc 1 741 0
 253 0000 014B     		ldr	r3, .L29
 254 0002 1878     		ldrb	r0, [r3]
 255 0004 C0B2     		uxtb	r0, r0
 256              	.LVL5:
 742:Generated_Source\PSoC4/PWM_1.c ****         return (result);
 743:Generated_Source\PSoC4/PWM_1.c ****     }
 257              		.loc 1 743 0
 258              		@ sp needed
 259 0006 7047     		bx	lr
 260              	.L30:
 261              		.align	2
 262              	.L29:
 263 0008 71000F40 		.word	1074724977
 264              		.cfi_endproc
 265              	.LFE14:
 266              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 267              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_1_WriteControlRegister
 270              		.code	16
 271              		.thumb_func
 272              		.type	PWM_1_WriteControlRegister, %function
 273              	PWM_1_WriteControlRegister:
 274              	.LFB15:
 744:Generated_Source\PSoC4/PWM_1.c **** 
 745:Generated_Source\PSoC4/PWM_1.c **** 
 746:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM_1.c ****     *
 750:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM_1.c ****     *  the control register is not removed.
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 19


 753:Generated_Source\PSoC4/PWM_1.c ****     *
 754:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM_1.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM_1.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM_1.c ****     *
 761:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 762:Generated_Source\PSoC4/PWM_1.c ****     *  None
 763:Generated_Source\PSoC4/PWM_1.c ****     *
 764:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM_1.c ****     {
 275              		.loc 1 766 0
 276              		.cfi_startproc
 277              	.LVL6:
 767:Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 278              		.loc 1 767 0
 279 0000 014B     		ldr	r3, .L32
 280 0002 1870     		strb	r0, [r3]
 768:Generated_Source\PSoC4/PWM_1.c ****     }
 281              		.loc 1 768 0
 282              		@ sp needed
 283 0004 7047     		bx	lr
 284              	.L33:
 285 0006 C046     		.align	2
 286              	.L32:
 287 0008 71000F40 		.word	1074724977
 288              		.cfi_endproc
 289              	.LFE15:
 290              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 291              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_1_ReadCapture
 294              		.code	16
 295              		.thumb_func
 296              		.type	PWM_1_ReadCapture, %function
 297              	PWM_1_ReadCapture:
 298              	.LFB16:
 769:Generated_Source\PSoC4/PWM_1.c **** 
 770:Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:Generated_Source\PSoC4/PWM_1.c **** 
 772:Generated_Source\PSoC4/PWM_1.c **** 
 773:Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM_1.c **** 
 775:Generated_Source\PSoC4/PWM_1.c **** 
 776:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM_1.c ****     *
 780:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM_1.c ****     *
 783:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM_1.c ****     *  None
 785:Generated_Source\PSoC4/PWM_1.c ****     *
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 20


 786:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 787:Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM_1.c ****     *
 789:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM_1.c ****     {
 299              		.loc 1 791 0
 300              		.cfi_startproc
 792:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 301              		.loc 1 792 0
 302 0000 014B     		ldr	r3, .L35
 303 0002 1888     		ldrh	r0, [r3]
 304 0004 80B2     		uxth	r0, r0
 793:Generated_Source\PSoC4/PWM_1.c ****     }
 305              		.loc 1 793 0
 306              		@ sp needed
 307 0006 7047     		bx	lr
 308              	.L36:
 309              		.align	2
 310              	.L35:
 311 0008 A0100F40 		.word	1074729120
 312              		.cfi_endproc
 313              	.LFE16:
 314              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 315              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 316              		.align	2
 317              		.global	PWM_1_ClearFIFO
 318              		.code	16
 319              		.thumb_func
 320              		.type	PWM_1_ClearFIFO, %function
 321              	PWM_1_ClearFIFO:
 322              	.LFB8:
 454:Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 323              		.loc 1 454 0
 324              		.cfi_startproc
 325 0000 08B5     		push	{r3, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 455:Generated_Source\PSoC4/PWM_1.c ****             {
 329              		.loc 1 455 0
 330 0002 01E0     		b	.L38
 331              	.L39:
 457:Generated_Source\PSoC4/PWM_1.c ****             }
 332              		.loc 1 457 0
 333 0004 FFF7FEFF 		bl	PWM_1_ReadCapture
 334              	.LVL7:
 335              	.L38:
 455:Generated_Source\PSoC4/PWM_1.c ****             {
 336              		.loc 1 455 0
 337 0008 FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 338              	.LVL8:
 339 000c C306     		lsl	r3, r0, #27
 340 000e F9D4     		bmi	.L39
 459:Generated_Source\PSoC4/PWM_1.c **** 
 341              		.loc 1 459 0
 342              		@ sp needed
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 21


 343 0010 08BD     		pop	{r3, pc}
 344              		.cfi_endproc
 345              	.LFE8:
 346              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 347 0012 C046     		.section	.text.PWM_1_Init,"ax",%progbits
 348              		.align	2
 349              		.global	PWM_1_Init
 350              		.code	16
 351              		.thumb_func
 352              		.type	PWM_1_Init, %function
 353              	PWM_1_Init:
 354              	.LFB3:
  85:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
 355              		.loc 1 85 0
 356              		.cfi_startproc
 357 0000 38B5     		push	{r3, r4, r5, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 3, -16
 360              		.cfi_offset 4, -12
 361              		.cfi_offset 5, -8
 362              		.cfi_offset 14, -4
 117:Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 363              		.loc 1 117 0
 364 0002 1649     		ldr	r1, .L41
 365 0004 0B78     		ldrb	r3, [r1]
 366 0006 3F22     		mov	r2, #63
 367 0008 9343     		bic	r3, r2
 368              	.LVL9:
 119:Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 369              		.loc 1 119 0
 370 000a 243A     		sub	r2, r2, #36
 371 000c 1343     		orr	r3, r2
 372              	.LVL10:
 373 000e 0B70     		strb	r3, [r1]
 129:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 374              		.loc 1 129 0
 375 0010 1349     		ldr	r1, .L41+4
 376 0012 0A78     		ldrb	r2, [r1]
 377 0014 0123     		mov	r3, #1
 378 0016 1A43     		orr	r2, r3
 379 0018 D2B2     		uxtb	r2, r2
 380 001a 0A70     		strb	r2, [r1]
 130:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 381              		.loc 1 130 0
 382 001c 114C     		ldr	r4, .L41+8
 383 001e 2278     		ldrb	r2, [r4]
 384 0020 1343     		orr	r3, r2
 385 0022 DBB2     		uxtb	r3, r3
 386 0024 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 387              		.loc 1 133 0
 388 0026 104D     		ldr	r5, .L41+12
 389 0028 281C     		mov	r0, r5
 390 002a FFF7FEFF 		bl	PWM_1_WriteCounter
 391              	.LVL11:
 136:Generated_Source\PSoC4/PWM_1.c **** 
 392              		.loc 1 136 0
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 22


 393 002e 281C     		mov	r0, r5
 394 0030 FFF7FEFF 		bl	PWM_1_WritePeriod
 395              	.LVL12:
 141:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 396              		.loc 1 141 0
 397 0034 0020     		mov	r0, #0
 398 0036 FFF7FEFF 		bl	PWM_1_WriteCompare1
 399              	.LVL13:
 142:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 400              		.loc 1 142 0
 401 003a 0020     		mov	r0, #0
 402 003c FFF7FEFF 		bl	PWM_1_WriteCompare2
 403              	.LVL14:
 154:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 404              		.loc 1 154 0
 405 0040 0020     		mov	r0, #0
 406 0042 FFF7FEFF 		bl	PWM_1_SetInterruptMode
 407              	.LVL15:
 167:Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 408              		.loc 1 167 0
 409 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 410              	.LVL16:
 169:Generated_Source\PSoC4/PWM_1.c **** 
 411              		.loc 1 169 0
 412 004a 2278     		ldrb	r2, [r4]
 413 004c 1023     		mov	r3, #16
 414 004e 1343     		orr	r3, r2
 415 0050 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC4/PWM_1.c **** 
 416              		.loc 1 172 0
 417 0052 FFF7FEFF 		bl	CyExitCriticalSection
 418              	.LVL17:
 176:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 419              		.loc 1 176 0
 420 0056 FFF7FEFF 		bl	PWM_1_ClearFIFO
 421              	.LVL18:
 179:Generated_Source\PSoC4/PWM_1.c **** 
 422              		.loc 1 179 0
 423              		@ sp needed
 424 005a 38BD     		pop	{r3, r4, r5, pc}
 425              	.L42:
 426              		.align	2
 427              	.L41:
 428 005c 71000F40 		.word	1074724977
 429 0060 90000F40 		.word	1074725008
 430 0064 91000F40 		.word	1074725009
 431 0068 01FE0000 		.word	65025
 432              		.cfi_endproc
 433              	.LFE3:
 434              		.size	PWM_1_Init, .-PWM_1_Init
 435              		.section	.text.PWM_1_Start,"ax",%progbits
 436              		.align	2
 437              		.global	PWM_1_Start
 438              		.code	16
 439              		.thumb_func
 440              		.type	PWM_1_Start, %function
 441              	PWM_1_Start:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 23


 442              	.LFB2:
  56:Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
 443              		.loc 1 56 0
 444              		.cfi_startproc
 445 0000 08B5     		push	{r3, lr}
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 3, -8
 448              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/PWM_1.c ****     {
 449              		.loc 1 58 0
 450 0002 064B     		ldr	r3, .L45
 451 0004 1B78     		ldrb	r3, [r3]
 452 0006 002B     		cmp	r3, #0
 453 0008 04D1     		bne	.L44
  60:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 454              		.loc 1 60 0
 455 000a FFF7FEFF 		bl	PWM_1_Init
 456              	.LVL19:
  61:Generated_Source\PSoC4/PWM_1.c ****     }
 457              		.loc 1 61 0
 458 000e 0122     		mov	r2, #1
 459 0010 024B     		ldr	r3, .L45
 460 0012 1A70     		strb	r2, [r3]
 461              	.L44:
  63:Generated_Source\PSoC4/PWM_1.c **** 
 462              		.loc 1 63 0
 463 0014 FFF7FEFF 		bl	PWM_1_Enable
 464              	.LVL20:
  65:Generated_Source\PSoC4/PWM_1.c **** 
 465              		.loc 1 65 0
 466              		@ sp needed
 467 0018 08BD     		pop	{r3, pc}
 468              	.L46:
 469 001a C046     		.align	2
 470              	.L45:
 471 001c 00000000 		.word	.LANCHOR0
 472              		.cfi_endproc
 473              	.LFE2:
 474              		.size	PWM_1_Start, .-PWM_1_Start
 475              		.section	.text.PWM_1_ReadCompare1,"ax",%progbits
 476              		.align	2
 477              		.global	PWM_1_ReadCompare1
 478              		.code	16
 479              		.thumb_func
 480              		.type	PWM_1_ReadCompare1, %function
 481              	PWM_1_ReadCompare1:
 482              	.LFB17:
 794:Generated_Source\PSoC4/PWM_1.c **** 
 795:Generated_Source\PSoC4/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM_1.c **** 
 797:Generated_Source\PSoC4/PWM_1.c **** 
 798:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM_1.c **** 
 800:Generated_Source\PSoC4/PWM_1.c **** 
 801:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 24


 804:Generated_Source\PSoC4/PWM_1.c ****     *
 805:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM_1.c ****     *
 809:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM_1.c ****     *  None
 811:Generated_Source\PSoC4/PWM_1.c ****     *
 812:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 813:Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM_1.c ****     *
 815:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM_1.c ****     {
 818:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM_1.c ****             return ((uint16)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM_1.c ****         #else
 821:Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM_1.c ****     }
 824:Generated_Source\PSoC4/PWM_1.c **** 
 825:Generated_Source\PSoC4/PWM_1.c **** #else
 826:Generated_Source\PSoC4/PWM_1.c **** 
 827:Generated_Source\PSoC4/PWM_1.c **** 
 828:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM_1.c ****     *
 832:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 833:Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM_1.c ****     *
 835:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM_1.c ****     *  None
 837:Generated_Source\PSoC4/PWM_1.c ****     *
 838:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 839:Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM_1.c ****     *
 841:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM_1.c ****     {
 483              		.loc 1 843 0
 484              		.cfi_startproc
 844:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 485              		.loc 1 844 0
 486 0000 014B     		ldr	r3, .L48
 487 0002 1888     		ldrh	r0, [r3]
 488 0004 80B2     		uxth	r0, r0
 845:Generated_Source\PSoC4/PWM_1.c ****     }
 489              		.loc 1 845 0
 490              		@ sp needed
 491 0006 7047     		bx	lr
 492              	.L49:
 493              		.align	2
 494              	.L48:
 495 0008 40100F40 		.word	1074729024
 496              		.cfi_endproc
 497              	.LFE17:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 25


 498              		.size	PWM_1_ReadCompare1, .-PWM_1_ReadCompare1
 499              		.section	.text.PWM_1_ReadCompare2,"ax",%progbits
 500              		.align	2
 501              		.global	PWM_1_ReadCompare2
 502              		.code	16
 503              		.thumb_func
 504              		.type	PWM_1_ReadCompare2, %function
 505              	PWM_1_ReadCompare2:
 506              	.LFB18:
 846:Generated_Source\PSoC4/PWM_1.c **** 
 847:Generated_Source\PSoC4/PWM_1.c **** 
 848:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM_1.c ****     *
 852:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM_1.c ****     *
 855:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM_1.c ****     *  None
 857:Generated_Source\PSoC4/PWM_1.c ****     *
 858:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 859:Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM_1.c ****     *
 861:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM_1.c ****     {
 507              		.loc 1 863 0
 508              		.cfi_startproc
 864:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE2_LSB_PTR));
 509              		.loc 1 864 0
 510 0000 014B     		ldr	r3, .L51
 511 0002 1888     		ldrh	r0, [r3]
 512 0004 80B2     		uxth	r0, r0
 865:Generated_Source\PSoC4/PWM_1.c ****     }
 513              		.loc 1 865 0
 514              		@ sp needed
 515 0006 7047     		bx	lr
 516              	.L52:
 517              		.align	2
 518              	.L51:
 519 0008 60100F40 		.word	1074729056
 520              		.cfi_endproc
 521              	.LFE18:
 522              		.size	PWM_1_ReadCompare2, .-PWM_1_ReadCompare2
 523              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 524              		.align	2
 525              		.global	PWM_1_ReadPeriod
 526              		.code	16
 527              		.thumb_func
 528              		.type	PWM_1_ReadPeriod, %function
 529              	PWM_1_ReadPeriod:
 530              	.LFB19:
 866:Generated_Source\PSoC4/PWM_1.c **** 
 867:Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM_1.c **** 
 869:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 26


 870:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM_1.c **** *
 874:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 875:Generated_Source\PSoC4/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM_1.c **** *
 877:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM_1.c **** *  None
 879:Generated_Source\PSoC4/PWM_1.c **** *
 880:Generated_Source\PSoC4/PWM_1.c **** * Return:
 881:Generated_Source\PSoC4/PWM_1.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/PWM_1.c **** *
 883:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM_1.c **** uint16 PWM_1_ReadPeriod(void) 
 885:Generated_Source\PSoC4/PWM_1.c **** {
 531              		.loc 1 885 0
 532              		.cfi_startproc
 886:Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM_1.c ****         return ((uint16)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM_1.c ****     #else
 889:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 533              		.loc 1 889 0
 534 0000 014B     		ldr	r3, .L54
 535 0002 1888     		ldrh	r0, [r3]
 536 0004 80B2     		uxth	r0, r0
 890:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM_1.c **** }
 537              		.loc 1 891 0
 538              		@ sp needed
 539 0006 7047     		bx	lr
 540              	.L55:
 541              		.align	2
 542              	.L54:
 543 0008 80100F40 		.word	1074729088
 544              		.cfi_endproc
 545              	.LFE19:
 546              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 547              		.global	PWM_1_initVar
 548              		.bss
 549              		.set	.LANCHOR0,. + 0
 550              		.type	PWM_1_initVar, %object
 551              		.size	PWM_1_initVar, 1
 552              	PWM_1_initVar:
 553 0000 00       		.space	1
 554              		.text
 555              	.Letext0:
 556              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 557              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 558              		.section	.debug_info,"",%progbits
 559              	.Ldebug_info0:
 560 0000 95030000 		.4byte	0x395
 561 0004 0400     		.2byte	0x4
 562 0006 00000000 		.4byte	.Ldebug_abbrev0
 563 000a 04       		.byte	0x4
 564 000b 01       		.uleb128 0x1
 565 000c A8020000 		.4byte	.LASF42
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 27


 566 0010 01       		.byte	0x1
 567 0011 01010000 		.4byte	.LASF43
 568 0015 B9000000 		.4byte	.LASF44
 569 0019 00000000 		.4byte	.Ldebug_ranges0+0
 570 001d 00000000 		.4byte	0
 571 0021 00000000 		.4byte	.Ldebug_line0
 572 0025 02       		.uleb128 0x2
 573 0026 01       		.byte	0x1
 574 0027 06       		.byte	0x6
 575 0028 61030000 		.4byte	.LASF0
 576 002c 02       		.uleb128 0x2
 577 002d 01       		.byte	0x1
 578 002e 08       		.byte	0x8
 579 002f 45010000 		.4byte	.LASF1
 580 0033 02       		.uleb128 0x2
 581 0034 02       		.byte	0x2
 582 0035 05       		.byte	0x5
 583 0036 E3010000 		.4byte	.LASF2
 584 003a 02       		.uleb128 0x2
 585 003b 02       		.byte	0x2
 586 003c 07       		.byte	0x7
 587 003d 7E000000 		.4byte	.LASF3
 588 0041 02       		.uleb128 0x2
 589 0042 04       		.byte	0x4
 590 0043 05       		.byte	0x5
 591 0044 53030000 		.4byte	.LASF4
 592 0048 02       		.uleb128 0x2
 593 0049 04       		.byte	0x4
 594 004a 07       		.byte	0x7
 595 004b 69010000 		.4byte	.LASF5
 596 004f 02       		.uleb128 0x2
 597 0050 08       		.byte	0x8
 598 0051 05       		.byte	0x5
 599 0052 60020000 		.4byte	.LASF6
 600 0056 02       		.uleb128 0x2
 601 0057 08       		.byte	0x8
 602 0058 07       		.byte	0x7
 603 0059 2E010000 		.4byte	.LASF7
 604 005d 03       		.uleb128 0x3
 605 005e 04       		.byte	0x4
 606 005f 05       		.byte	0x5
 607 0060 696E7400 		.ascii	"int\000"
 608 0064 02       		.uleb128 0x2
 609 0065 04       		.byte	0x4
 610 0066 07       		.byte	0x7
 611 0067 28020000 		.4byte	.LASF8
 612 006b 04       		.uleb128 0x4
 613 006c 7B010000 		.4byte	.LASF9
 614 0070 02       		.byte	0x2
 615 0071 B901     		.2byte	0x1b9
 616 0073 2C000000 		.4byte	0x2c
 617 0077 04       		.uleb128 0x4
 618 0078 FF010000 		.4byte	.LASF10
 619 007c 02       		.byte	0x2
 620 007d BA01     		.2byte	0x1ba
 621 007f 3A000000 		.4byte	0x3a
 622 0083 02       		.uleb128 0x2
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 28


 623 0084 04       		.byte	0x4
 624 0085 04       		.byte	0x4
 625 0086 20010000 		.4byte	.LASF11
 626 008a 02       		.uleb128 0x2
 627 008b 08       		.byte	0x8
 628 008c 04       		.byte	0x4
 629 008d B9010000 		.4byte	.LASF12
 630 0091 02       		.uleb128 0x2
 631 0092 01       		.byte	0x1
 632 0093 08       		.byte	0x8
 633 0094 5C030000 		.4byte	.LASF13
 634 0098 04       		.uleb128 0x4
 635 0099 53010000 		.4byte	.LASF14
 636 009d 02       		.byte	0x2
 637 009e 6302     		.2byte	0x263
 638 00a0 A4000000 		.4byte	0xa4
 639 00a4 05       		.uleb128 0x5
 640 00a5 6B000000 		.4byte	0x6b
 641 00a9 04       		.uleb128 0x4
 642 00aa 00000000 		.4byte	.LASF15
 643 00ae 02       		.byte	0x2
 644 00af 6402     		.2byte	0x264
 645 00b1 B5000000 		.4byte	0xb5
 646 00b5 05       		.uleb128 0x5
 647 00b6 77000000 		.4byte	0x77
 648 00ba 02       		.uleb128 0x2
 649 00bb 04       		.byte	0x4
 650 00bc 07       		.byte	0x7
 651 00bd 57020000 		.4byte	.LASF16
 652 00c1 06       		.uleb128 0x6
 653 00c2 06000000 		.4byte	.LASF17
 654 00c6 01       		.byte	0x1
 655 00c7 C7       		.byte	0xc7
 656 00c8 00000000 		.4byte	.LFB4
 657 00cc 10000000 		.4byte	.LFE4-.LFB4
 658 00d0 01       		.uleb128 0x1
 659 00d1 9C       		.byte	0x9c
 660 00d2 06       		.uleb128 0x6
 661 00d3 48030000 		.4byte	.LASF18
 662 00d7 01       		.byte	0x1
 663 00d8 E9       		.byte	0xe9
 664 00d9 00000000 		.4byte	.LFB5
 665 00dd 10000000 		.4byte	.LFE5-.LFB5
 666 00e1 01       		.uleb128 0x1
 667 00e2 9C       		.byte	0x9c
 668 00e3 07       		.uleb128 0x7
 669 00e4 2E000000 		.4byte	.LASF19
 670 00e8 01       		.byte	0x1
 671 00e9 9301     		.2byte	0x193
 672 00eb 00000000 		.4byte	.LFB6
 673 00ef 0C000000 		.4byte	.LFE6-.LFB6
 674 00f3 01       		.uleb128 0x1
 675 00f4 9C       		.byte	0x9c
 676 00f5 08010000 		.4byte	0x108
 677 00f9 08       		.uleb128 0x8
 678 00fa 26010000 		.4byte	.LASF21
 679 00fe 01       		.byte	0x1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 29


 680 00ff 9301     		.2byte	0x193
 681 0101 77000000 		.4byte	0x77
 682 0105 01       		.uleb128 0x1
 683 0106 50       		.byte	0x50
 684 0107 00       		.byte	0
 685 0108 09       		.uleb128 0x9
 686 0109 36030000 		.4byte	.LASF28
 687 010d 01       		.byte	0x1
 688 010e A901     		.2byte	0x1a9
 689 0110 77000000 		.4byte	0x77
 690 0114 00000000 		.4byte	.LFB7
 691 0118 14000000 		.4byte	.LFE7-.LFB7
 692 011c 01       		.uleb128 0x1
 693 011d 9C       		.byte	0x9c
 694 011e 07       		.uleb128 0x7
 695 011f 96020000 		.4byte	.LASF20
 696 0123 01       		.byte	0x1
 697 0124 E201     		.2byte	0x1e2
 698 0126 00000000 		.4byte	.LFB9
 699 012a 0C000000 		.4byte	.LFE9-.LFB9
 700 012e 01       		.uleb128 0x1
 701 012f 9C       		.byte	0x9c
 702 0130 43010000 		.4byte	0x143
 703 0134 08       		.uleb128 0x8
 704 0135 51000000 		.4byte	.LASF22
 705 0139 01       		.byte	0x1
 706 013a E201     		.2byte	0x1e2
 707 013c 77000000 		.4byte	0x77
 708 0140 01       		.uleb128 0x1
 709 0141 50       		.byte	0x50
 710 0142 00       		.byte	0
 711 0143 07       		.uleb128 0x7
 712 0144 91000000 		.4byte	.LASF23
 713 0148 01       		.byte	0x1
 714 0149 2B02     		.2byte	0x22b
 715 014b 00000000 		.4byte	.LFB10
 716 014f 0C000000 		.4byte	.LFE10-.LFB10
 717 0153 01       		.uleb128 0x1
 718 0154 9C       		.byte	0x9c
 719 0155 68010000 		.4byte	0x168
 720 0159 08       		.uleb128 0x8
 721 015a 6D030000 		.4byte	.LASF24
 722 015e 01       		.byte	0x1
 723 015f 2B02     		.2byte	0x22b
 724 0161 77000000 		.4byte	0x77
 725 0165 01       		.uleb128 0x1
 726 0166 50       		.byte	0x50
 727 0167 00       		.byte	0
 728 0168 07       		.uleb128 0x7
 729 0169 A5000000 		.4byte	.LASF25
 730 016d 01       		.byte	0x1
 731 016e 4802     		.2byte	0x248
 732 0170 00000000 		.4byte	.LFB11
 733 0174 0C000000 		.4byte	.LFE11-.LFB11
 734 0178 01       		.uleb128 0x1
 735 0179 9C       		.byte	0x9c
 736 017a 8D010000 		.4byte	0x18d
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 30


 737 017e 08       		.uleb128 0x8
 738 017f 6D030000 		.4byte	.LASF24
 739 0183 01       		.byte	0x1
 740 0184 4802     		.2byte	0x248
 741 0186 77000000 		.4byte	0x77
 742 018a 01       		.uleb128 0x1
 743 018b 50       		.byte	0x50
 744 018c 00       		.byte	0
 745 018d 07       		.uleb128 0x7
 746 018e 89010000 		.4byte	.LASF26
 747 0192 01       		.byte	0x1
 748 0193 AC02     		.2byte	0x2ac
 749 0195 00000000 		.4byte	.LFB12
 750 0199 0C000000 		.4byte	.LFE12-.LFB12
 751 019d 01       		.uleb128 0x1
 752 019e 9C       		.byte	0x9c
 753 019f B2010000 		.4byte	0x1b2
 754 01a3 08       		.uleb128 0x8
 755 01a4 88020000 		.4byte	.LASF27
 756 01a8 01       		.byte	0x1
 757 01a9 AC02     		.2byte	0x2ac
 758 01ab 6B000000 		.4byte	0x6b
 759 01af 01       		.uleb128 0x1
 760 01b0 50       		.byte	0x50
 761 01b1 00       		.byte	0
 762 01b2 09       		.uleb128 0x9
 763 01b3 A0010000 		.4byte	.LASF29
 764 01b7 01       		.byte	0x1
 765 01b8 C702     		.2byte	0x2c7
 766 01ba 6B000000 		.4byte	0x6b
 767 01be 00000000 		.4byte	.LFB13
 768 01c2 0C000000 		.4byte	.LFE13-.LFB13
 769 01c6 01       		.uleb128 0x1
 770 01c7 9C       		.byte	0x9c
 771 01c8 0A       		.uleb128 0xa
 772 01c9 6E020000 		.4byte	.LASF45
 773 01cd 01       		.byte	0x1
 774 01ce E102     		.2byte	0x2e1
 775 01d0 6B000000 		.4byte	0x6b
 776 01d4 00000000 		.4byte	.LFB14
 777 01d8 0C000000 		.4byte	.LFE14-.LFB14
 778 01dc 01       		.uleb128 0x1
 779 01dd 9C       		.byte	0x9c
 780 01de F1010000 		.4byte	0x1f1
 781 01e2 0B       		.uleb128 0xb
 782 01e3 4B020000 		.4byte	.LASF35
 783 01e7 01       		.byte	0x1
 784 01e8 E302     		.2byte	0x2e3
 785 01ea 6B000000 		.4byte	0x6b
 786 01ee 01       		.uleb128 0x1
 787 01ef 50       		.byte	0x50
 788 01f0 00       		.byte	0
 789 01f1 07       		.uleb128 0x7
 790 01f2 13000000 		.4byte	.LASF30
 791 01f6 01       		.byte	0x1
 792 01f7 FD02     		.2byte	0x2fd
 793 01f9 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 31


 794 01fd 0C000000 		.4byte	.LFE15-.LFB15
 795 0201 01       		.uleb128 0x1
 796 0202 9C       		.byte	0x9c
 797 0203 16020000 		.4byte	0x216
 798 0207 08       		.uleb128 0x8
 799 0208 81010000 		.4byte	.LASF31
 800 020c 01       		.byte	0x1
 801 020d FD02     		.2byte	0x2fd
 802 020f 6B000000 		.4byte	0x6b
 803 0213 01       		.uleb128 0x1
 804 0214 50       		.byte	0x50
 805 0215 00       		.byte	0
 806 0216 09       		.uleb128 0x9
 807 0217 ED010000 		.4byte	.LASF32
 808 021b 01       		.byte	0x1
 809 021c 1603     		.2byte	0x316
 810 021e 77000000 		.4byte	0x77
 811 0222 00000000 		.4byte	.LFB16
 812 0226 0C000000 		.4byte	.LFE16-.LFB16
 813 022a 01       		.uleb128 0x1
 814 022b 9C       		.byte	0x9c
 815 022c 07       		.uleb128 0x7
 816 022d 41000000 		.4byte	.LASF33
 817 0231 01       		.byte	0x1
 818 0232 C501     		.2byte	0x1c5
 819 0234 00000000 		.4byte	.LFB8
 820 0238 12000000 		.4byte	.LFE8-.LFB8
 821 023c 01       		.uleb128 0x1
 822 023d 9C       		.byte	0x9c
 823 023e 55020000 		.4byte	0x255
 824 0242 0C       		.uleb128 0xc
 825 0243 08000000 		.4byte	.LVL7
 826 0247 16020000 		.4byte	0x216
 827 024b 0C       		.uleb128 0xc
 828 024c 0C000000 		.4byte	.LVL8
 829 0250 B2010000 		.4byte	0x1b2
 830 0254 00       		.byte	0
 831 0255 0D       		.uleb128 0xd
 832 0256 06020000 		.4byte	.LASF34
 833 025a 01       		.byte	0x1
 834 025b 54       		.byte	0x54
 835 025c 00000000 		.4byte	.LFB3
 836 0260 6C000000 		.4byte	.LFE3-.LFB3
 837 0264 01       		.uleb128 0x1
 838 0265 9C       		.byte	0x9c
 839 0266 05030000 		.4byte	0x305
 840 026a 0E       		.uleb128 0xe
 841 026b 52020000 		.4byte	.LASF36
 842 026f 01       		.byte	0x1
 843 0270 57       		.byte	0x57
 844 0271 6B000000 		.4byte	0x6b
 845 0275 00000000 		.4byte	.LLST0
 846 0279 0E       		.uleb128 0xe
 847 027a C0010000 		.4byte	.LASF37
 848 027e 01       		.byte	0x1
 849 027f 5D       		.byte	0x5d
 850 0280 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 32


 851 0284 13000000 		.4byte	.LLST1
 852 0288 0F       		.uleb128 0xf
 853 0289 2E000000 		.4byte	.LVL11
 854 028d E3000000 		.4byte	0xe3
 855 0291 9C020000 		.4byte	0x29c
 856 0295 10       		.uleb128 0x10
 857 0296 01       		.uleb128 0x1
 858 0297 50       		.byte	0x50
 859 0298 02       		.uleb128 0x2
 860 0299 75       		.byte	0x75
 861 029a 00       		.sleb128 0
 862 029b 00       		.byte	0
 863 029c 0F       		.uleb128 0xf
 864 029d 34000000 		.4byte	.LVL12
 865 02a1 1E010000 		.4byte	0x11e
 866 02a5 B0020000 		.4byte	0x2b0
 867 02a9 10       		.uleb128 0x10
 868 02aa 01       		.uleb128 0x1
 869 02ab 50       		.byte	0x50
 870 02ac 02       		.uleb128 0x2
 871 02ad 75       		.byte	0x75
 872 02ae 00       		.sleb128 0
 873 02af 00       		.byte	0
 874 02b0 0F       		.uleb128 0xf
 875 02b1 3A000000 		.4byte	.LVL13
 876 02b5 43010000 		.4byte	0x143
 877 02b9 C3020000 		.4byte	0x2c3
 878 02bd 10       		.uleb128 0x10
 879 02be 01       		.uleb128 0x1
 880 02bf 50       		.byte	0x50
 881 02c0 01       		.uleb128 0x1
 882 02c1 30       		.byte	0x30
 883 02c2 00       		.byte	0
 884 02c3 0F       		.uleb128 0xf
 885 02c4 40000000 		.4byte	.LVL14
 886 02c8 68010000 		.4byte	0x168
 887 02cc D6020000 		.4byte	0x2d6
 888 02d0 10       		.uleb128 0x10
 889 02d1 01       		.uleb128 0x1
 890 02d2 50       		.byte	0x50
 891 02d3 01       		.uleb128 0x1
 892 02d4 30       		.byte	0x30
 893 02d5 00       		.byte	0
 894 02d6 0F       		.uleb128 0xf
 895 02d7 46000000 		.4byte	.LVL15
 896 02db 8D010000 		.4byte	0x18d
 897 02df E9020000 		.4byte	0x2e9
 898 02e3 10       		.uleb128 0x10
 899 02e4 01       		.uleb128 0x1
 900 02e5 50       		.byte	0x50
 901 02e6 01       		.uleb128 0x1
 902 02e7 30       		.byte	0x30
 903 02e8 00       		.byte	0
 904 02e9 0C       		.uleb128 0xc
 905 02ea 4A000000 		.4byte	.LVL16
 906 02ee 80030000 		.4byte	0x380
 907 02f2 0C       		.uleb128 0xc
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 33


 908 02f3 56000000 		.4byte	.LVL17
 909 02f7 8B030000 		.4byte	0x38b
 910 02fb 0C       		.uleb128 0xc
 911 02fc 5A000000 		.4byte	.LVL18
 912 0300 2C020000 		.4byte	0x22c
 913 0304 00       		.byte	0
 914 0305 0D       		.uleb128 0xd
 915 0306 75030000 		.4byte	.LASF38
 916 030a 01       		.byte	0x1
 917 030b 37       		.byte	0x37
 918 030c 00000000 		.4byte	.LFB2
 919 0310 20000000 		.4byte	.LFE2-.LFB2
 920 0314 01       		.uleb128 0x1
 921 0315 9C       		.byte	0x9c
 922 0316 2D030000 		.4byte	0x32d
 923 031a 0C       		.uleb128 0xc
 924 031b 0E000000 		.4byte	.LVL19
 925 031f 55020000 		.4byte	0x255
 926 0323 0C       		.uleb128 0xc
 927 0324 18000000 		.4byte	.LVL20
 928 0328 C1000000 		.4byte	0xc1
 929 032c 00       		.byte	0
 930 032d 09       		.uleb128 0x9
 931 032e 58000000 		.4byte	.LASF39
 932 0332 01       		.byte	0x1
 933 0333 4A03     		.2byte	0x34a
 934 0335 77000000 		.4byte	0x77
 935 0339 00000000 		.4byte	.LFB17
 936 033d 0C000000 		.4byte	.LFE17-.LFB17
 937 0341 01       		.uleb128 0x1
 938 0342 9C       		.byte	0x9c
 939 0343 09       		.uleb128 0x9
 940 0344 6B000000 		.4byte	.LASF40
 941 0348 01       		.byte	0x1
 942 0349 5E03     		.2byte	0x35e
 943 034b 77000000 		.4byte	0x77
 944 034f 00000000 		.4byte	.LFB18
 945 0353 0C000000 		.4byte	.LFE18-.LFB18
 946 0357 01       		.uleb128 0x1
 947 0358 9C       		.byte	0x9c
 948 0359 09       		.uleb128 0x9
 949 035a 58010000 		.4byte	.LASF41
 950 035e 01       		.byte	0x1
 951 035f 7403     		.2byte	0x374
 952 0361 77000000 		.4byte	0x77
 953 0365 00000000 		.4byte	.LFB19
 954 0369 0C000000 		.4byte	.LFE19-.LFB19
 955 036d 01       		.uleb128 0x1
 956 036e 9C       		.byte	0x9c
 957 036f 11       		.uleb128 0x11
 958 0370 D5010000 		.4byte	.LASF46
 959 0374 01       		.byte	0x1
 960 0375 20       		.byte	0x20
 961 0376 6B000000 		.4byte	0x6b
 962 037a 05       		.uleb128 0x5
 963 037b 03       		.byte	0x3
 964 037c 00000000 		.4byte	PWM_1_initVar
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 34


 965 0380 12       		.uleb128 0x12
 966 0381 11020000 		.4byte	.LASF47
 967 0385 03       		.byte	0x3
 968 0386 E5       		.byte	0xe5
 969 0387 6B000000 		.4byte	0x6b
 970 038b 13       		.uleb128 0x13
 971 038c 35020000 		.4byte	.LASF48
 972 0390 03       		.byte	0x3
 973 0391 E6       		.byte	0xe6
 974 0392 14       		.uleb128 0x14
 975 0393 6B000000 		.4byte	0x6b
 976 0397 00       		.byte	0
 977 0398 00       		.byte	0
 978              		.section	.debug_abbrev,"",%progbits
 979              	.Ldebug_abbrev0:
 980 0000 01       		.uleb128 0x1
 981 0001 11       		.uleb128 0x11
 982 0002 01       		.byte	0x1
 983 0003 25       		.uleb128 0x25
 984 0004 0E       		.uleb128 0xe
 985 0005 13       		.uleb128 0x13
 986 0006 0B       		.uleb128 0xb
 987 0007 03       		.uleb128 0x3
 988 0008 0E       		.uleb128 0xe
 989 0009 1B       		.uleb128 0x1b
 990 000a 0E       		.uleb128 0xe
 991 000b 55       		.uleb128 0x55
 992 000c 17       		.uleb128 0x17
 993 000d 11       		.uleb128 0x11
 994 000e 01       		.uleb128 0x1
 995 000f 10       		.uleb128 0x10
 996 0010 17       		.uleb128 0x17
 997 0011 00       		.byte	0
 998 0012 00       		.byte	0
 999 0013 02       		.uleb128 0x2
 1000 0014 24       		.uleb128 0x24
 1001 0015 00       		.byte	0
 1002 0016 0B       		.uleb128 0xb
 1003 0017 0B       		.uleb128 0xb
 1004 0018 3E       		.uleb128 0x3e
 1005 0019 0B       		.uleb128 0xb
 1006 001a 03       		.uleb128 0x3
 1007 001b 0E       		.uleb128 0xe
 1008 001c 00       		.byte	0
 1009 001d 00       		.byte	0
 1010 001e 03       		.uleb128 0x3
 1011 001f 24       		.uleb128 0x24
 1012 0020 00       		.byte	0
 1013 0021 0B       		.uleb128 0xb
 1014 0022 0B       		.uleb128 0xb
 1015 0023 3E       		.uleb128 0x3e
 1016 0024 0B       		.uleb128 0xb
 1017 0025 03       		.uleb128 0x3
 1018 0026 08       		.uleb128 0x8
 1019 0027 00       		.byte	0
 1020 0028 00       		.byte	0
 1021 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 35


 1022 002a 16       		.uleb128 0x16
 1023 002b 00       		.byte	0
 1024 002c 03       		.uleb128 0x3
 1025 002d 0E       		.uleb128 0xe
 1026 002e 3A       		.uleb128 0x3a
 1027 002f 0B       		.uleb128 0xb
 1028 0030 3B       		.uleb128 0x3b
 1029 0031 05       		.uleb128 0x5
 1030 0032 49       		.uleb128 0x49
 1031 0033 13       		.uleb128 0x13
 1032 0034 00       		.byte	0
 1033 0035 00       		.byte	0
 1034 0036 05       		.uleb128 0x5
 1035 0037 35       		.uleb128 0x35
 1036 0038 00       		.byte	0
 1037 0039 49       		.uleb128 0x49
 1038 003a 13       		.uleb128 0x13
 1039 003b 00       		.byte	0
 1040 003c 00       		.byte	0
 1041 003d 06       		.uleb128 0x6
 1042 003e 2E       		.uleb128 0x2e
 1043 003f 00       		.byte	0
 1044 0040 3F       		.uleb128 0x3f
 1045 0041 19       		.uleb128 0x19
 1046 0042 03       		.uleb128 0x3
 1047 0043 0E       		.uleb128 0xe
 1048 0044 3A       		.uleb128 0x3a
 1049 0045 0B       		.uleb128 0xb
 1050 0046 3B       		.uleb128 0x3b
 1051 0047 0B       		.uleb128 0xb
 1052 0048 27       		.uleb128 0x27
 1053 0049 19       		.uleb128 0x19
 1054 004a 11       		.uleb128 0x11
 1055 004b 01       		.uleb128 0x1
 1056 004c 12       		.uleb128 0x12
 1057 004d 06       		.uleb128 0x6
 1058 004e 40       		.uleb128 0x40
 1059 004f 18       		.uleb128 0x18
 1060 0050 9742     		.uleb128 0x2117
 1061 0052 19       		.uleb128 0x19
 1062 0053 00       		.byte	0
 1063 0054 00       		.byte	0
 1064 0055 07       		.uleb128 0x7
 1065 0056 2E       		.uleb128 0x2e
 1066 0057 01       		.byte	0x1
 1067 0058 3F       		.uleb128 0x3f
 1068 0059 19       		.uleb128 0x19
 1069 005a 03       		.uleb128 0x3
 1070 005b 0E       		.uleb128 0xe
 1071 005c 3A       		.uleb128 0x3a
 1072 005d 0B       		.uleb128 0xb
 1073 005e 3B       		.uleb128 0x3b
 1074 005f 05       		.uleb128 0x5
 1075 0060 27       		.uleb128 0x27
 1076 0061 19       		.uleb128 0x19
 1077 0062 11       		.uleb128 0x11
 1078 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 36


 1079 0064 12       		.uleb128 0x12
 1080 0065 06       		.uleb128 0x6
 1081 0066 40       		.uleb128 0x40
 1082 0067 18       		.uleb128 0x18
 1083 0068 9742     		.uleb128 0x2117
 1084 006a 19       		.uleb128 0x19
 1085 006b 01       		.uleb128 0x1
 1086 006c 13       		.uleb128 0x13
 1087 006d 00       		.byte	0
 1088 006e 00       		.byte	0
 1089 006f 08       		.uleb128 0x8
 1090 0070 05       		.uleb128 0x5
 1091 0071 00       		.byte	0
 1092 0072 03       		.uleb128 0x3
 1093 0073 0E       		.uleb128 0xe
 1094 0074 3A       		.uleb128 0x3a
 1095 0075 0B       		.uleb128 0xb
 1096 0076 3B       		.uleb128 0x3b
 1097 0077 05       		.uleb128 0x5
 1098 0078 49       		.uleb128 0x49
 1099 0079 13       		.uleb128 0x13
 1100 007a 02       		.uleb128 0x2
 1101 007b 18       		.uleb128 0x18
 1102 007c 00       		.byte	0
 1103 007d 00       		.byte	0
 1104 007e 09       		.uleb128 0x9
 1105 007f 2E       		.uleb128 0x2e
 1106 0080 00       		.byte	0
 1107 0081 3F       		.uleb128 0x3f
 1108 0082 19       		.uleb128 0x19
 1109 0083 03       		.uleb128 0x3
 1110 0084 0E       		.uleb128 0xe
 1111 0085 3A       		.uleb128 0x3a
 1112 0086 0B       		.uleb128 0xb
 1113 0087 3B       		.uleb128 0x3b
 1114 0088 05       		.uleb128 0x5
 1115 0089 27       		.uleb128 0x27
 1116 008a 19       		.uleb128 0x19
 1117 008b 49       		.uleb128 0x49
 1118 008c 13       		.uleb128 0x13
 1119 008d 11       		.uleb128 0x11
 1120 008e 01       		.uleb128 0x1
 1121 008f 12       		.uleb128 0x12
 1122 0090 06       		.uleb128 0x6
 1123 0091 40       		.uleb128 0x40
 1124 0092 18       		.uleb128 0x18
 1125 0093 9742     		.uleb128 0x2117
 1126 0095 19       		.uleb128 0x19
 1127 0096 00       		.byte	0
 1128 0097 00       		.byte	0
 1129 0098 0A       		.uleb128 0xa
 1130 0099 2E       		.uleb128 0x2e
 1131 009a 01       		.byte	0x1
 1132 009b 3F       		.uleb128 0x3f
 1133 009c 19       		.uleb128 0x19
 1134 009d 03       		.uleb128 0x3
 1135 009e 0E       		.uleb128 0xe
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 37


 1136 009f 3A       		.uleb128 0x3a
 1137 00a0 0B       		.uleb128 0xb
 1138 00a1 3B       		.uleb128 0x3b
 1139 00a2 05       		.uleb128 0x5
 1140 00a3 27       		.uleb128 0x27
 1141 00a4 19       		.uleb128 0x19
 1142 00a5 49       		.uleb128 0x49
 1143 00a6 13       		.uleb128 0x13
 1144 00a7 11       		.uleb128 0x11
 1145 00a8 01       		.uleb128 0x1
 1146 00a9 12       		.uleb128 0x12
 1147 00aa 06       		.uleb128 0x6
 1148 00ab 40       		.uleb128 0x40
 1149 00ac 18       		.uleb128 0x18
 1150 00ad 9742     		.uleb128 0x2117
 1151 00af 19       		.uleb128 0x19
 1152 00b0 01       		.uleb128 0x1
 1153 00b1 13       		.uleb128 0x13
 1154 00b2 00       		.byte	0
 1155 00b3 00       		.byte	0
 1156 00b4 0B       		.uleb128 0xb
 1157 00b5 34       		.uleb128 0x34
 1158 00b6 00       		.byte	0
 1159 00b7 03       		.uleb128 0x3
 1160 00b8 0E       		.uleb128 0xe
 1161 00b9 3A       		.uleb128 0x3a
 1162 00ba 0B       		.uleb128 0xb
 1163 00bb 3B       		.uleb128 0x3b
 1164 00bc 05       		.uleb128 0x5
 1165 00bd 49       		.uleb128 0x49
 1166 00be 13       		.uleb128 0x13
 1167 00bf 02       		.uleb128 0x2
 1168 00c0 18       		.uleb128 0x18
 1169 00c1 00       		.byte	0
 1170 00c2 00       		.byte	0
 1171 00c3 0C       		.uleb128 0xc
 1172 00c4 898201   		.uleb128 0x4109
 1173 00c7 00       		.byte	0
 1174 00c8 11       		.uleb128 0x11
 1175 00c9 01       		.uleb128 0x1
 1176 00ca 31       		.uleb128 0x31
 1177 00cb 13       		.uleb128 0x13
 1178 00cc 00       		.byte	0
 1179 00cd 00       		.byte	0
 1180 00ce 0D       		.uleb128 0xd
 1181 00cf 2E       		.uleb128 0x2e
 1182 00d0 01       		.byte	0x1
 1183 00d1 3F       		.uleb128 0x3f
 1184 00d2 19       		.uleb128 0x19
 1185 00d3 03       		.uleb128 0x3
 1186 00d4 0E       		.uleb128 0xe
 1187 00d5 3A       		.uleb128 0x3a
 1188 00d6 0B       		.uleb128 0xb
 1189 00d7 3B       		.uleb128 0x3b
 1190 00d8 0B       		.uleb128 0xb
 1191 00d9 27       		.uleb128 0x27
 1192 00da 19       		.uleb128 0x19
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 38


 1193 00db 11       		.uleb128 0x11
 1194 00dc 01       		.uleb128 0x1
 1195 00dd 12       		.uleb128 0x12
 1196 00de 06       		.uleb128 0x6
 1197 00df 40       		.uleb128 0x40
 1198 00e0 18       		.uleb128 0x18
 1199 00e1 9742     		.uleb128 0x2117
 1200 00e3 19       		.uleb128 0x19
 1201 00e4 01       		.uleb128 0x1
 1202 00e5 13       		.uleb128 0x13
 1203 00e6 00       		.byte	0
 1204 00e7 00       		.byte	0
 1205 00e8 0E       		.uleb128 0xe
 1206 00e9 34       		.uleb128 0x34
 1207 00ea 00       		.byte	0
 1208 00eb 03       		.uleb128 0x3
 1209 00ec 0E       		.uleb128 0xe
 1210 00ed 3A       		.uleb128 0x3a
 1211 00ee 0B       		.uleb128 0xb
 1212 00ef 3B       		.uleb128 0x3b
 1213 00f0 0B       		.uleb128 0xb
 1214 00f1 49       		.uleb128 0x49
 1215 00f2 13       		.uleb128 0x13
 1216 00f3 02       		.uleb128 0x2
 1217 00f4 17       		.uleb128 0x17
 1218 00f5 00       		.byte	0
 1219 00f6 00       		.byte	0
 1220 00f7 0F       		.uleb128 0xf
 1221 00f8 898201   		.uleb128 0x4109
 1222 00fb 01       		.byte	0x1
 1223 00fc 11       		.uleb128 0x11
 1224 00fd 01       		.uleb128 0x1
 1225 00fe 31       		.uleb128 0x31
 1226 00ff 13       		.uleb128 0x13
 1227 0100 01       		.uleb128 0x1
 1228 0101 13       		.uleb128 0x13
 1229 0102 00       		.byte	0
 1230 0103 00       		.byte	0
 1231 0104 10       		.uleb128 0x10
 1232 0105 8A8201   		.uleb128 0x410a
 1233 0108 00       		.byte	0
 1234 0109 02       		.uleb128 0x2
 1235 010a 18       		.uleb128 0x18
 1236 010b 9142     		.uleb128 0x2111
 1237 010d 18       		.uleb128 0x18
 1238 010e 00       		.byte	0
 1239 010f 00       		.byte	0
 1240 0110 11       		.uleb128 0x11
 1241 0111 34       		.uleb128 0x34
 1242 0112 00       		.byte	0
 1243 0113 03       		.uleb128 0x3
 1244 0114 0E       		.uleb128 0xe
 1245 0115 3A       		.uleb128 0x3a
 1246 0116 0B       		.uleb128 0xb
 1247 0117 3B       		.uleb128 0x3b
 1248 0118 0B       		.uleb128 0xb
 1249 0119 49       		.uleb128 0x49
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 39


 1250 011a 13       		.uleb128 0x13
 1251 011b 3F       		.uleb128 0x3f
 1252 011c 19       		.uleb128 0x19
 1253 011d 02       		.uleb128 0x2
 1254 011e 18       		.uleb128 0x18
 1255 011f 00       		.byte	0
 1256 0120 00       		.byte	0
 1257 0121 12       		.uleb128 0x12
 1258 0122 2E       		.uleb128 0x2e
 1259 0123 00       		.byte	0
 1260 0124 3F       		.uleb128 0x3f
 1261 0125 19       		.uleb128 0x19
 1262 0126 03       		.uleb128 0x3
 1263 0127 0E       		.uleb128 0xe
 1264 0128 3A       		.uleb128 0x3a
 1265 0129 0B       		.uleb128 0xb
 1266 012a 3B       		.uleb128 0x3b
 1267 012b 0B       		.uleb128 0xb
 1268 012c 27       		.uleb128 0x27
 1269 012d 19       		.uleb128 0x19
 1270 012e 49       		.uleb128 0x49
 1271 012f 13       		.uleb128 0x13
 1272 0130 3C       		.uleb128 0x3c
 1273 0131 19       		.uleb128 0x19
 1274 0132 00       		.byte	0
 1275 0133 00       		.byte	0
 1276 0134 13       		.uleb128 0x13
 1277 0135 2E       		.uleb128 0x2e
 1278 0136 01       		.byte	0x1
 1279 0137 3F       		.uleb128 0x3f
 1280 0138 19       		.uleb128 0x19
 1281 0139 03       		.uleb128 0x3
 1282 013a 0E       		.uleb128 0xe
 1283 013b 3A       		.uleb128 0x3a
 1284 013c 0B       		.uleb128 0xb
 1285 013d 3B       		.uleb128 0x3b
 1286 013e 0B       		.uleb128 0xb
 1287 013f 27       		.uleb128 0x27
 1288 0140 19       		.uleb128 0x19
 1289 0141 3C       		.uleb128 0x3c
 1290 0142 19       		.uleb128 0x19
 1291 0143 00       		.byte	0
 1292 0144 00       		.byte	0
 1293 0145 14       		.uleb128 0x14
 1294 0146 05       		.uleb128 0x5
 1295 0147 00       		.byte	0
 1296 0148 49       		.uleb128 0x49
 1297 0149 13       		.uleb128 0x13
 1298 014a 00       		.byte	0
 1299 014b 00       		.byte	0
 1300 014c 00       		.byte	0
 1301              		.section	.debug_loc,"",%progbits
 1302              	.Ldebug_loc0:
 1303              	.LLST0:
 1304 0000 0A000000 		.4byte	.LVL9
 1305 0004 0E000000 		.4byte	.LVL10
 1306 0008 0100     		.2byte	0x1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 40


 1307 000a 53       		.byte	0x53
 1308 000b 00000000 		.4byte	0
 1309 000f 00000000 		.4byte	0
 1310              	.LLST1:
 1311 0013 4A000000 		.4byte	.LVL16
 1312 0017 55000000 		.4byte	.LVL17-1
 1313 001b 0100     		.2byte	0x1
 1314 001d 50       		.byte	0x50
 1315 001e 00000000 		.4byte	0
 1316 0022 00000000 		.4byte	0
 1317              		.section	.debug_aranges,"",%progbits
 1318 0000 A4000000 		.4byte	0xa4
 1319 0004 0200     		.2byte	0x2
 1320 0006 00000000 		.4byte	.Ldebug_info0
 1321 000a 04       		.byte	0x4
 1322 000b 00       		.byte	0
 1323 000c 0000     		.2byte	0
 1324 000e 0000     		.2byte	0
 1325 0010 00000000 		.4byte	.LFB4
 1326 0014 10000000 		.4byte	.LFE4-.LFB4
 1327 0018 00000000 		.4byte	.LFB5
 1328 001c 10000000 		.4byte	.LFE5-.LFB5
 1329 0020 00000000 		.4byte	.LFB6
 1330 0024 0C000000 		.4byte	.LFE6-.LFB6
 1331 0028 00000000 		.4byte	.LFB7
 1332 002c 14000000 		.4byte	.LFE7-.LFB7
 1333 0030 00000000 		.4byte	.LFB9
 1334 0034 0C000000 		.4byte	.LFE9-.LFB9
 1335 0038 00000000 		.4byte	.LFB10
 1336 003c 0C000000 		.4byte	.LFE10-.LFB10
 1337 0040 00000000 		.4byte	.LFB11
 1338 0044 0C000000 		.4byte	.LFE11-.LFB11
 1339 0048 00000000 		.4byte	.LFB12
 1340 004c 0C000000 		.4byte	.LFE12-.LFB12
 1341 0050 00000000 		.4byte	.LFB13
 1342 0054 0C000000 		.4byte	.LFE13-.LFB13
 1343 0058 00000000 		.4byte	.LFB14
 1344 005c 0C000000 		.4byte	.LFE14-.LFB14
 1345 0060 00000000 		.4byte	.LFB15
 1346 0064 0C000000 		.4byte	.LFE15-.LFB15
 1347 0068 00000000 		.4byte	.LFB16
 1348 006c 0C000000 		.4byte	.LFE16-.LFB16
 1349 0070 00000000 		.4byte	.LFB8
 1350 0074 12000000 		.4byte	.LFE8-.LFB8
 1351 0078 00000000 		.4byte	.LFB3
 1352 007c 6C000000 		.4byte	.LFE3-.LFB3
 1353 0080 00000000 		.4byte	.LFB2
 1354 0084 20000000 		.4byte	.LFE2-.LFB2
 1355 0088 00000000 		.4byte	.LFB17
 1356 008c 0C000000 		.4byte	.LFE17-.LFB17
 1357 0090 00000000 		.4byte	.LFB18
 1358 0094 0C000000 		.4byte	.LFE18-.LFB18
 1359 0098 00000000 		.4byte	.LFB19
 1360 009c 0C000000 		.4byte	.LFE19-.LFB19
 1361 00a0 00000000 		.4byte	0
 1362 00a4 00000000 		.4byte	0
 1363              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 41


 1364              	.Ldebug_ranges0:
 1365 0000 00000000 		.4byte	.LFB4
 1366 0004 10000000 		.4byte	.LFE4
 1367 0008 00000000 		.4byte	.LFB5
 1368 000c 10000000 		.4byte	.LFE5
 1369 0010 00000000 		.4byte	.LFB6
 1370 0014 0C000000 		.4byte	.LFE6
 1371 0018 00000000 		.4byte	.LFB7
 1372 001c 14000000 		.4byte	.LFE7
 1373 0020 00000000 		.4byte	.LFB9
 1374 0024 0C000000 		.4byte	.LFE9
 1375 0028 00000000 		.4byte	.LFB10
 1376 002c 0C000000 		.4byte	.LFE10
 1377 0030 00000000 		.4byte	.LFB11
 1378 0034 0C000000 		.4byte	.LFE11
 1379 0038 00000000 		.4byte	.LFB12
 1380 003c 0C000000 		.4byte	.LFE12
 1381 0040 00000000 		.4byte	.LFB13
 1382 0044 0C000000 		.4byte	.LFE13
 1383 0048 00000000 		.4byte	.LFB14
 1384 004c 0C000000 		.4byte	.LFE14
 1385 0050 00000000 		.4byte	.LFB15
 1386 0054 0C000000 		.4byte	.LFE15
 1387 0058 00000000 		.4byte	.LFB16
 1388 005c 0C000000 		.4byte	.LFE16
 1389 0060 00000000 		.4byte	.LFB8
 1390 0064 12000000 		.4byte	.LFE8
 1391 0068 00000000 		.4byte	.LFB3
 1392 006c 6C000000 		.4byte	.LFE3
 1393 0070 00000000 		.4byte	.LFB2
 1394 0074 20000000 		.4byte	.LFE2
 1395 0078 00000000 		.4byte	.LFB17
 1396 007c 0C000000 		.4byte	.LFE17
 1397 0080 00000000 		.4byte	.LFB18
 1398 0084 0C000000 		.4byte	.LFE18
 1399 0088 00000000 		.4byte	.LFB19
 1400 008c 0C000000 		.4byte	.LFE19
 1401 0090 00000000 		.4byte	0
 1402 0094 00000000 		.4byte	0
 1403              		.section	.debug_line,"",%progbits
 1404              	.Ldebug_line0:
 1405 0000 B2010000 		.section	.debug_str,"MS",%progbits,1
 1405      02004D00 
 1405      00000201 
 1405      FB0E0D00 
 1405      01010101 
 1406              	.LASF15:
 1407 0000 72656731 		.ascii	"reg16\000"
 1407      3600
 1408              	.LASF17:
 1409 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1409      315F456E 
 1409      61626C65 
 1409      00
 1410              	.LASF30:
 1411 0013 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1411      315F5772 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 42


 1411      69746543 
 1411      6F6E7472 
 1411      6F6C5265 
 1412              	.LASF19:
 1413 002e 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1413      315F5772 
 1413      69746543 
 1413      6F756E74 
 1413      657200
 1414              	.LASF33:
 1415 0041 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1415      315F436C 
 1415      65617246 
 1415      49464F00 
 1416              	.LASF22:
 1417 0051 70657269 		.ascii	"period\000"
 1417      6F6400
 1418              	.LASF39:
 1419 0058 50574D5F 		.ascii	"PWM_1_ReadCompare1\000"
 1419      315F5265 
 1419      6164436F 
 1419      6D706172 
 1419      653100
 1420              	.LASF40:
 1421 006b 50574D5F 		.ascii	"PWM_1_ReadCompare2\000"
 1421      315F5265 
 1421      6164436F 
 1421      6D706172 
 1421      653200
 1422              	.LASF3:
 1423 007e 73686F72 		.ascii	"short unsigned int\000"
 1423      7420756E 
 1423      7369676E 
 1423      65642069 
 1423      6E7400
 1424              	.LASF23:
 1425 0091 50574D5F 		.ascii	"PWM_1_WriteCompare1\000"
 1425      315F5772 
 1425      69746543 
 1425      6F6D7061 
 1425      72653100 
 1426              	.LASF25:
 1427 00a5 50574D5F 		.ascii	"PWM_1_WriteCompare2\000"
 1427      315F5772 
 1427      69746543 
 1427      6F6D7061 
 1427      72653200 
 1428              	.LASF44:
 1429 00b9 443A5C43 		.ascii	"D:\\Chau Nguyen\\OneDrive\\Arrow\\RangDong\\RangDon"
 1429      68617520 
 1429      4E677579 
 1429      656E5C4F 
 1429      6E654472 
 1430 00e7 6744656D 		.ascii	"gDemo\\BLE_RGB_TOUCH.cydsn\000"
 1430      6F5C424C 
 1430      455F5247 
 1430      425F544F 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 43


 1430      5543482E 
 1431              	.LASF43:
 1432 0101 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_1.c\000"
 1432      72617465 
 1432      645F536F 
 1432      75726365 
 1432      5C50536F 
 1433              	.LASF11:
 1434 0120 666C6F61 		.ascii	"float\000"
 1434      7400
 1435              	.LASF21:
 1436 0126 636F756E 		.ascii	"counter\000"
 1436      74657200 
 1437              	.LASF7:
 1438 012e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1438      206C6F6E 
 1438      6720756E 
 1438      7369676E 
 1438      65642069 
 1439              	.LASF1:
 1440 0145 756E7369 		.ascii	"unsigned char\000"
 1440      676E6564 
 1440      20636861 
 1440      7200
 1441              	.LASF14:
 1442 0153 72656738 		.ascii	"reg8\000"
 1442      00
 1443              	.LASF41:
 1444 0158 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1444      315F5265 
 1444      61645065 
 1444      72696F64 
 1444      00
 1445              	.LASF5:
 1446 0169 6C6F6E67 		.ascii	"long unsigned int\000"
 1446      20756E73 
 1446      69676E65 
 1446      6420696E 
 1446      7400
 1447              	.LASF9:
 1448 017b 75696E74 		.ascii	"uint8\000"
 1448      3800
 1449              	.LASF31:
 1450 0181 636F6E74 		.ascii	"control\000"
 1450      726F6C00 
 1451              	.LASF26:
 1452 0189 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1452      315F5365 
 1452      74496E74 
 1452      65727275 
 1452      70744D6F 
 1453              	.LASF29:
 1454 01a0 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1454      315F5265 
 1454      61645374 
 1454      61747573 
 1454      52656769 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 44


 1455              	.LASF12:
 1456 01b9 646F7562 		.ascii	"double\000"
 1456      6C6500
 1457              	.LASF37:
 1458 01c0 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1458      315F696E 
 1458      74657272 
 1458      75707453 
 1458      74617465 
 1459              	.LASF46:
 1460 01d5 50574D5F 		.ascii	"PWM_1_initVar\000"
 1460      315F696E 
 1460      69745661 
 1460      7200
 1461              	.LASF2:
 1462 01e3 73686F72 		.ascii	"short int\000"
 1462      7420696E 
 1462      7400
 1463              	.LASF32:
 1464 01ed 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1464      315F5265 
 1464      61644361 
 1464      70747572 
 1464      6500
 1465              	.LASF10:
 1466 01ff 75696E74 		.ascii	"uint16\000"
 1466      313600
 1467              	.LASF34:
 1468 0206 50574D5F 		.ascii	"PWM_1_Init\000"
 1468      315F496E 
 1468      697400
 1469              	.LASF47:
 1470 0211 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1470      74657243 
 1470      72697469 
 1470      63616C53 
 1470      65637469 
 1471              	.LASF8:
 1472 0228 756E7369 		.ascii	"unsigned int\000"
 1472      676E6564 
 1472      20696E74 
 1472      00
 1473              	.LASF48:
 1474 0235 43794578 		.ascii	"CyExitCriticalSection\000"
 1474      69744372 
 1474      69746963 
 1474      616C5365 
 1474      6374696F 
 1475              	.LASF35:
 1476 024b 72657375 		.ascii	"result\000"
 1476      6C7400
 1477              	.LASF36:
 1478 0252 6374726C 		.ascii	"ctrl\000"
 1478      00
 1479              	.LASF16:
 1480 0257 73697A65 		.ascii	"sizetype\000"
 1480      74797065 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 45


 1480      00
 1481              	.LASF6:
 1482 0260 6C6F6E67 		.ascii	"long long int\000"
 1482      206C6F6E 
 1482      6720696E 
 1482      7400
 1483              	.LASF45:
 1484 026e 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1484      315F5265 
 1484      6164436F 
 1484      6E74726F 
 1484      6C526567 
 1485              	.LASF27:
 1486 0288 696E7465 		.ascii	"interruptMode\000"
 1486      72727570 
 1486      744D6F64 
 1486      6500
 1487              	.LASF20:
 1488 0296 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1488      315F5772 
 1488      69746550 
 1488      6572696F 
 1488      6400
 1489              	.LASF42:
 1490 02a8 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1490      4320342E 
 1490      392E3320 
 1490      32303135 
 1490      30333033 
 1491 02db 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1491      20726576 
 1491      6973696F 
 1491      6E203232 
 1491      31323230 
 1492 030e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1492      66756E63 
 1492      74696F6E 
 1492      2D736563 
 1492      74696F6E 
 1493              	.LASF28:
 1494 0336 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1494      315F5265 
 1494      6164436F 
 1494      756E7465 
 1494      7200
 1495              	.LASF18:
 1496 0348 50574D5F 		.ascii	"PWM_1_Stop\000"
 1496      315F5374 
 1496      6F7000
 1497              	.LASF4:
 1498 0353 6C6F6E67 		.ascii	"long int\000"
 1498      20696E74 
 1498      00
 1499              	.LASF13:
 1500 035c 63686172 		.ascii	"char\000"
 1500      00
 1501              	.LASF0:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\cceakUOL.s 			page 46


 1502 0361 7369676E 		.ascii	"signed char\000"
 1502      65642063 
 1502      68617200 
 1503              	.LASF24:
 1504 036d 636F6D70 		.ascii	"compare\000"
 1504      61726500 
 1505              	.LASF38:
 1506 0375 50574D5F 		.ascii	"PWM_1_Start\000"
 1506      315F5374 
 1506      61727400 
 1507              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
