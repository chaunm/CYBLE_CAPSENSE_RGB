ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB2:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 2


  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 3


  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 108 0
  27              		.cfi_startproc
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 109 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 124 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 08010B40 		.word	1074462984
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoStop,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoStop
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 4


  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoStop, %function
  51              	CySysClkImoStop:
  52              	.LFB3:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  53              		.loc 1 140 0
  54              		.cfi_startproc
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  55              		.loc 1 149 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1368     		ldr	r3, [r2]
  58 0004 5B00     		lsl	r3, r3, #1
  59 0006 5B08     		lsr	r3, r3, #1
  60 0008 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 150 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 08010B40 		.word	1074462984
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	CySysClkImoStop, .-CySysClkImoStop
  71              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  72              		.align	2
  73              		.global	CySysClkWriteHfclkDirect
  74              		.code	16
  75              		.thumb_func
  76              		.type	CySysClkWriteHfclkDirect, %function
  77              	CySysClkWriteHfclkDirect:
  78              	.LFB4:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 5


 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 6


 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 7


 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 8


 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 9


 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
  79              		.loc 1 430 0
  80              		.cfi_startproc
  81              	.LVL0:
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 10


  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
  86 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  87              		.loc 1 434 0
  88 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  90              		.loc 1 437 0
  91 0008 0449     		ldr	r1, .L8
  92 000a 0A68     		ldr	r2, [r1]
  93 000c 0723     		mov	r3, #7
  94 000e 9A43     		bic	r2, r3
  95              	.LVL2:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
  96              		.loc 1 448 0
  97 0010 2340     		and	r3, r4
  98 0012 1343     		orr	r3, r2
  99              	.LVL3:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 100              		.loc 1 451 0
 101 0014 0B60     		str	r3, [r1]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 102              		.loc 1 453 0
 103 0016 FFF7FEFF 		bl	CyExitCriticalSection
 104              	.LVL4:
 454:Generated_Source\PSoC4/CyLib.c **** }
 105              		.loc 1 454 0
 106              		@ sp needed
 107              	.LVL5:
 108 001a 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 001c 00010B40 		.word	1074462976
 113              		.cfi_endproc
 114              	.LFE4:
 115              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 116              		.section	.text.CySysEnablePumpClock,"ax",%progbits
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 11


 117              		.align	2
 118              		.global	CySysEnablePumpClock
 119              		.code	16
 120              		.thumb_func
 121              		.type	CySysEnablePumpClock, %function
 122              	CySysEnablePumpClock:
 123              	.LFB5:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 124              		.loc 1 474 0
 125              		.cfi_startproc
 126              	.LVL6:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 127              		.loc 1 476 0
 128 0000 C307     		lsl	r3, r0, #31
 129 0002 07D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 130              		.loc 1 478 0
 131 0004 094A     		ldr	r2, .L13
 132 0006 1168     		ldr	r1, [r2]
 133 0008 094B     		ldr	r3, .L13+4
 134 000a 1B68     		ldr	r3, [r3]
 135 000c 5B06     		lsl	r3, r3, #25
 136 000e 0B43     		orr	r3, r1
 137 0010 1360     		str	r3, [r2]
 138 0012 09E0     		b	.L10
 139              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 140              		.loc 1 482 0
 141 0014 054A     		ldr	r2, .L13
 142 0016 1368     		ldr	r3, [r2]
 143 0018 1B01     		lsl	r3, r3, #4
 144 001a 5B0F     		lsr	r3, r3, #29
 145 001c 0449     		ldr	r1, .L13+4
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 12


 146 001e 0B60     		str	r3, [r1]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 147              		.loc 1 484 0
 148 0020 1168     		ldr	r1, [r2]
 149 0022 044B     		ldr	r3, .L13+8
 150 0024 0B40     		and	r3, r1
 151 0026 1360     		str	r3, [r2]
 152              	.L10:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 153              		.loc 1 498 0
 154              		@ sp needed
 155 0028 7047     		bx	lr
 156              	.L14:
 157 002a C046     		.align	2
 158              	.L13:
 159 002c 08010B40 		.word	1074462984
 160 0030 00000000 		.word	.LANCHOR0
 161 0034 FFFFFFF1 		.word	-234881025
 162              		.cfi_endproc
 163              	.LFE5:
 164              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 165              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 166              		.align	2
 167              		.global	CySysClkGetSysclkSource
 168              		.code	16
 169              		.thumb_func
 170              		.type	CySysClkGetSysclkSource, %function
 171              	CySysClkGetSysclkSource:
 172              	.LFB6:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 173              		.loc 1 511 0
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 13


 174              		.cfi_startproc
 175 0000 10B5     		push	{r4, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 179              		.loc 1 515 0
 180 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 181              	.LVL7:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 182              		.loc 1 525 0
 183 0006 044B     		ldr	r3, .L16
 184 0008 1B68     		ldr	r3, [r3]
 185 000a 0724     		mov	r4, #7
 186 000c 1C40     		and	r4, r3
 187              	.LVL8:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 188              		.loc 1 528 0
 189 000e FFF7FEFF 		bl	CyExitCriticalSection
 190              	.LVL9:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 191              		.loc 1 531 0
 192 0012 201C     		mov	r0, r4
 193              		@ sp needed
 194              	.LVL10:
 195 0014 10BD     		pop	{r4, pc}
 196              	.L17:
 197 0016 C046     		.align	2
 198              	.L16:
 199 0018 00010B40 		.word	1074462976
 200              		.cfi_endproc
 201              	.LFE6:
 202              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 203              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 204              		.align	2
 205              		.global	CySysClkWriteSysclkDiv
 206              		.code	16
 207              		.thumb_func
 208              		.type	CySysClkWriteSysclkDiv, %function
 209              	CySysClkWriteSysclkDiv:
 210              	.LFB7:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 14


 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 211              		.loc 1 566 0
 212              		.cfi_startproc
 213              	.LVL11:
 214 0000 10B5     		push	{r4, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
 218 0002 041C     		mov	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 219              		.loc 1 569 0
 220 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 221              	.LVL12:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 222              		.loc 1 571 0
 223 0008 0723     		mov	r3, #7
 224 000a 1C40     		and	r4, r3
 225              	.LVL13:
 226 000c E404     		lsl	r4, r4, #19
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 15


 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 227              		.loc 1 573 0
 228 000e 0449     		ldr	r1, .L19
 229 0010 0B68     		ldr	r3, [r1]
 230 0012 044A     		ldr	r2, .L19+4
 231 0014 1340     		and	r3, r2
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 232              		.loc 1 572 0
 233 0016 2343     		orr	r3, r4
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 234              		.loc 1 571 0
 235 0018 0B60     		str	r3, [r1]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 236              		.loc 1 576 0
 237 001a FFF7FEFF 		bl	CyExitCriticalSection
 238              	.LVL14:
 577:Generated_Source\PSoC4/CyLib.c **** }
 239              		.loc 1 577 0
 240              		@ sp needed
 241 001e 10BD     		pop	{r4, pc}
 242              	.L20:
 243              		.align	2
 244              	.L19:
 245 0020 00010B40 		.word	1074462976
 246 0024 FFFFC7FF 		.word	-3670017
 247              		.cfi_endproc
 248              	.LFE7:
 249              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 250              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 251              		.align	2
 252              		.global	CySysClkWriteImoFreq
 253              		.code	16
 254              		.thumb_func
 255              		.type	CySysClkWriteImoFreq, %function
 256              	CySysClkWriteImoFreq:
 257              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 16


 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 258              		.loc 1 624 0
 259              		.cfi_startproc
 260              	.LVL15:
 261 0000 10B5     		push	{r4, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 4, -8
 264              		.cfi_offset 14, -4
 265 0002 86B0     		sub	sp, sp, #24
 266              		.cfi_def_cfa_offset 32
 267 0004 041C     		mov	r4, r0
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 17


 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 268              		.loc 1 647 0
 269 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 270              	.LVL16:
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 271              		.loc 1 681 0
 272 000a 0E4B     		ldr	r3, .L22
 273 000c 1B68     		ldr	r3, [r3]
 274 000e 0093     		str	r3, [sp]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 275              		.loc 1 682 0
 276 0010 0D4B     		ldr	r3, .L22+4
 277 0012 1B68     		ldr	r3, [r3]
 278 0014 0193     		str	r3, [sp, #4]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 279              		.loc 1 683 0
 280 0016 033C     		sub	r4, r4, #3
 281              	.LVL17:
 282 0018 0C4B     		ldr	r3, .L22+8
 283 001a 1B5D     		ldrb	r3, [r3, r4]
 284 001c 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 18


 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 285              		.loc 1 684 0
 286 001e 0C4B     		ldr	r3, .L22+12
 287 0020 1B68     		ldr	r3, [r3]
 288 0022 0393     		str	r3, [sp, #12]
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 289              		.loc 1 686 0
 290 0024 04AA     		add	r2, sp, #16
 291 0026 0B4B     		ldr	r3, .L22+16
 292 0028 0493     		str	r3, [sp, #16]
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 293              		.loc 1 689 0
 294 002a 6B46     		mov	r3, sp
 295 002c 0593     		str	r3, [sp, #20]
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 296              		.loc 1 691 0
 297 002e 0A4B     		ldr	r3, .L22+20
 298 0030 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 299              		.loc 1 692 0
 300 0032 0A49     		ldr	r1, .L22+24
 301 0034 0A4A     		ldr	r2, .L22+28
 302 0036 1160     		str	r1, [r2]
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 303              		.loc 1 693 0
 304 0038 1B68     		ldr	r3, [r3]
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 19


 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 20


 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 305              		.loc 1 823 0
 306 003a FFF7FEFF 		bl	CyExitCriticalSection
 307              	.LVL18:
 824:Generated_Source\PSoC4/CyLib.c ****     }
 308              		.loc 1 824 0
 309 003e 06B0     		add	sp, sp, #24
 310              		@ sp needed
 311              	.LVL19:
 312 0040 10BD     		pop	{r4, pc}
 313              	.L23:
 314 0042 C046     		.align	2
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 21


 315              	.L22:
 316 0044 08010B40 		.word	1074462984
 317 0048 00010B40 		.word	1074462976
 318 004c 00000000 		.word	.LANCHOR1
 319 0050 30001040 		.word	1074790448
 320 0054 B6EA0000 		.word	60086
 321 0058 08001040 		.word	1074790408
 322 005c 17000080 		.word	-2147483625
 323 0060 04001040 		.word	1074790404
 324              		.cfi_endproc
 325              	.LFE8:
 326              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 327              		.section	.text.CySysClkEcoStop,"ax",%progbits
 328              		.align	2
 329              		.global	CySysClkEcoStop
 330              		.code	16
 331              		.thumb_func
 332              		.type	CySysClkEcoStop, %function
 333              	CySysClkEcoStop:
 334              	.LFB10:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 22


 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 23


 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 24


 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 25


1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 26


1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 27


1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 335              		.loc 1 1170 0
 336              		.cfi_startproc
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 337              		.loc 1 1173 0
 338 0000 054A     		ldr	r2, .L25
 339 0002 1368     		ldr	r3, [r2]
 340 0004 0121     		mov	r1, #1
 341 0006 8B43     		bic	r3, r1
 342 0008 1360     		str	r3, [r2]
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 343              		.loc 1 1176 0
 344 000a 044A     		ldr	r2, .L25+4
 345 000c 1168     		ldr	r1, [r2]
 346 000e 044B     		ldr	r3, .L25+8
 347 0010 0B40     		and	r3, r1
 348 0012 1360     		str	r3, [r2]
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 349              		.loc 1 1182 0
 350              		@ sp needed
 351 0014 7047     		bx	lr
 352              	.L26:
 353 0016 C046     		.align	2
 354              	.L25:
 355 0018 60F02E40 		.word	1076818016
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 28


 356 001c 10002E40 		.word	1076756496
 357 0020 FF7FFFFF 		.word	-32769
 358              		.cfi_endproc
 359              	.LFE10:
 360              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 361              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 362              		.align	2
 363              		.global	CySysClkEcoReadStatus
 364              		.code	16
 365              		.thumb_func
 366              		.type	CySysClkEcoReadStatus, %function
 367              	CySysClkEcoReadStatus:
 368              	.LFB11:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 369              		.loc 1 1204 0
 370              		.cfi_startproc
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 371              		.loc 1 1208 0
 372 0000 024B     		ldr	r3, .L28
 373 0002 1B68     		ldr	r3, [r3]
 374 0004 0120     		mov	r0, #1
 375 0006 1840     		and	r0, r3
 376              	.LVL20:
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 29


1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
 377              		.loc 1 1221 0
 378              		@ sp needed
 379 0008 7047     		bx	lr
 380              	.L29:
 381 000a C046     		.align	2
 382              	.L28:
 383 000c 0C002E40 		.word	1076756492
 384              		.cfi_endproc
 385              	.LFE11:
 386              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 387              		.section	.text.CySysLvdDisable,"ax",%progbits
 388              		.align	2
 389              		.global	CySysLvdDisable
 390              		.code	16
 391              		.thumb_func
 392              		.type	CySysLvdDisable, %function
 393              	CySysLvdDisable:
 394              	.LFB14:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 30


1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 31


1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 32


1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 33


1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 34


1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 35


1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 36


1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 37


1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 38


1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 39


1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 40


1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 41


1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 42


1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 43


1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 44


2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 45


2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 395              		.loc 1 2149 0
 396              		.cfi_startproc
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 397              		.loc 1 2150 0
 398 0000 054A     		ldr	r2, .L31
 399 0002 1368     		ldr	r3, [r2]
 400 0004 0221     		mov	r1, #2
 401 0006 8B43     		bic	r3, r1
 402 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 403              		.loc 1 2151 0
 404 000a 044A     		ldr	r2, .L31+4
 405 000c 1368     		ldr	r3, [r2]
 406 000e 0139     		sub	r1, r1, #1
 407 0010 8B43     		bic	r3, r1
 408 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 409              		.loc 1 2152 0
 410              		@ sp needed
 411 0014 7047     		bx	lr
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 46


 412              	.L32:
 413 0016 C046     		.align	2
 414              	.L31:
 415 0018 08000B40 		.word	1074462728
 416 001c 18000B40 		.word	1074462744
 417              		.cfi_endproc
 418              	.LFE14:
 419              		.size	CySysLvdDisable, .-CySysLvdDisable
 420              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 421              		.align	2
 422              		.global	CySysLvdGetInterruptSource
 423              		.code	16
 424              		.thumb_func
 425              		.type	CySysLvdGetInterruptSource, %function
 426              	CySysLvdGetInterruptSource:
 427              	.LFB15:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 428              		.loc 1 2167 0
 429              		.cfi_startproc
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 430              		.loc 1 2168 0
 431 0000 024B     		ldr	r3, .L34
 432 0002 1B68     		ldr	r3, [r3]
 433 0004 0220     		mov	r0, #2
 434 0006 1840     		and	r0, r3
2169:Generated_Source\PSoC4/CyLib.c ****     }
 435              		.loc 1 2169 0
 436              		@ sp needed
 437 0008 7047     		bx	lr
 438              	.L35:
 439 000a C046     		.align	2
 440              	.L34:
 441 000c 04000B40 		.word	1074462724
 442              		.cfi_endproc
 443              	.LFE15:
 444              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 445              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 446              		.align	2
 447              		.global	CySysLvdClearInterrupt
 448              		.code	16
 449              		.thumb_func
 450              		.type	CySysLvdClearInterrupt, %function
 451              	CySysLvdClearInterrupt:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 47


 452              	.LFB16:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 453              		.loc 1 2183 0
 454              		.cfi_startproc
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 455              		.loc 1 2184 0
 456 0000 0222     		mov	r2, #2
 457 0002 014B     		ldr	r3, .L37
 458 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 459              		.loc 1 2185 0
 460              		@ sp needed
 461 0006 7047     		bx	lr
 462              	.L38:
 463              		.align	2
 464              	.L37:
 465 0008 04000B40 		.word	1074462724
 466              		.cfi_endproc
 467              	.LFE16:
 468              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 469              		.section	.text.CySysGetResetReason,"ax",%progbits
 470              		.align	2
 471              		.global	CySysGetResetReason
 472              		.code	16
 473              		.thumb_func
 474              		.type	CySysGetResetReason, %function
 475              	CySysGetResetReason:
 476              	.LFB17:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 48


2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 477              		.loc 1 2209 0
 478              		.cfi_startproc
 479              	.LVL21:
 480 0000 021C     		mov	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 481              		.loc 1 2212 0
 482 0002 1920     		mov	r0, #25
 483              	.LVL22:
 484 0004 0240     		and	r2, r0
 485              	.LVL23:
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 486              		.loc 1 2213 0
 487 0006 0249     		ldr	r1, .L40
 488 0008 0B68     		ldr	r3, [r1]
 489 000a 1840     		and	r0, r3
 490              	.LVL24:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 491              		.loc 1 2215 0
 492 000c 0A60     		str	r2, [r1]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 493              		.loc 1 2218 0
 494              		@ sp needed
 495 000e 7047     		bx	lr
 496              	.L41:
 497              		.align	2
 498              	.L40:
 499 0010 00030B40 		.word	1074463488
 500              		.cfi_endproc
 501              	.LFE17:
 502              		.size	CySysGetResetReason, .-CySysGetResetReason
 503              		.section	.text.CyDisableInts,"ax",%progbits
 504              		.align	2
 505              		.global	CyDisableInts
 506              		.code	16
 507              		.thumb_func
 508              		.type	CyDisableInts, %function
 509              	CyDisableInts:
 510              	.LFB18:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 49


2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 511              		.loc 1 2232 0
 512              		.cfi_startproc
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 513              		.loc 1 2236 0
 514 0000 024B     		ldr	r3, .L43
 515 0002 1868     		ldr	r0, [r3]
 516              	.LVL25:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 517              		.loc 1 2239 0
 518 0004 0122     		mov	r2, #1
 519 0006 5242     		neg	r2, r2
 520 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 521              		.loc 1 2242 0
 522              		@ sp needed
 523 000a 7047     		bx	lr
 524              	.L44:
 525              		.align	2
 526              	.L43:
 527 000c 80E100E0 		.word	-536813184
 528              		.cfi_endproc
 529              	.LFE18:
 530              		.size	CyDisableInts, .-CyDisableInts
 531              		.section	.text.CyEnableInts,"ax",%progbits
 532              		.align	2
 533              		.global	CyEnableInts
 534              		.code	16
 535              		.thumb_func
 536              		.type	CyEnableInts, %function
 537              	CyEnableInts:
 538              	.LFB19:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 50


2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 539              		.loc 1 2255 0
 540              		.cfi_startproc
 541              	.LVL26:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 542              		.loc 1 2256 0
 543 0000 014B     		ldr	r3, .L46
 544 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 545              		.loc 1 2257 0
 546              		@ sp needed
 547 0004 7047     		bx	lr
 548              	.L47:
 549 0006 C046     		.align	2
 550              	.L46:
 551 0008 00E100E0 		.word	-536813312
 552              		.cfi_endproc
 553              	.LFE19:
 554              		.size	CyEnableInts, .-CyEnableInts
 555              		.section	.text.CyIntEnable,"ax",%progbits
 556              		.align	2
 557              		.global	CyIntEnable
 558              		.code	16
 559              		.thumb_func
 560              		.type	CyIntEnable, %function
 561              	CyIntEnable:
 562              	.LFB26:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 51


2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 52


2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 53


2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 563              		.loc 1 2438 0
 564              		.cfi_startproc
 565              	.LVL27:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 566              		.loc 1 2439 0
 567 0000 1F23     		mov	r3, #31
 568 0002 1840     		and	r0, r3
 569              	.LVL28:
 570 0004 1E3B     		sub	r3, r3, #30
 571 0006 8340     		lsl	r3, r3, r0
 572 0008 181C     		mov	r0, r3
 573 000a 014B     		ldr	r3, .L49
 574 000c 1860     		str	r0, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 575              		.loc 1 2440 0
 576              		@ sp needed
 577 000e 7047     		bx	lr
 578              	.L50:
 579              		.align	2
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 54


 580              	.L49:
 581 0010 00E100E0 		.word	-536813312
 582              		.cfi_endproc
 583              	.LFE26:
 584              		.size	CyIntEnable, .-CyIntEnable
 585              		.section	.text.CyIntGetState,"ax",%progbits
 586              		.align	2
 587              		.global	CyIntGetState
 588              		.code	16
 589              		.thumb_func
 590              		.type	CyIntGetState, %function
 591              	CyIntGetState:
 592              	.LFB27:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 593              		.loc 1 2456 0
 594              		.cfi_startproc
 595              	.LVL29:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 596              		.loc 1 2458 0
 597 0000 044B     		ldr	r3, .L52
 598 0002 1B68     		ldr	r3, [r3]
 599 0004 1F22     		mov	r2, #31
 600 0006 1040     		and	r0, r2
 601              	.LVL30:
 602 0008 C340     		lsr	r3, r3, r0
 603 000a 181C     		mov	r0, r3
 604 000c 0123     		mov	r3, #1
 605 000e 1840     		and	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 606              		.loc 1 2459 0
 607              		@ sp needed
 608 0010 7047     		bx	lr
 609              	.L53:
 610 0012 C046     		.align	2
 611              	.L52:
 612 0014 00E100E0 		.word	-536813312
 613              		.cfi_endproc
 614              	.LFE27:
 615              		.size	CyIntGetState, .-CyIntGetState
 616              		.section	.text.CyIntDisable,"ax",%progbits
 617              		.align	2
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 55


 618              		.global	CyIntDisable
 619              		.code	16
 620              		.thumb_func
 621              		.type	CyIntDisable, %function
 622              	CyIntDisable:
 623              	.LFB28:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 624              		.loc 1 2472 0
 625              		.cfi_startproc
 626              	.LVL31:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 627              		.loc 1 2473 0
 628 0000 1F23     		mov	r3, #31
 629 0002 1840     		and	r0, r3
 630              	.LVL32:
 631 0004 1E3B     		sub	r3, r3, #30
 632 0006 8340     		lsl	r3, r3, r0
 633 0008 181C     		mov	r0, r3
 634 000a 014B     		ldr	r3, .L55
 635 000c 1860     		str	r0, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 636              		.loc 1 2474 0
 637              		@ sp needed
 638 000e 7047     		bx	lr
 639              	.L56:
 640              		.align	2
 641              	.L55:
 642 0010 80E100E0 		.word	-536813184
 643              		.cfi_endproc
 644              	.LFE28:
 645              		.size	CyIntDisable, .-CyIntDisable
 646              		.section	.text.CyIntSetPending,"ax",%progbits
 647              		.align	2
 648              		.global	CyIntSetPending
 649              		.code	16
 650              		.thumb_func
 651              		.type	CyIntSetPending, %function
 652              	CyIntSetPending:
 653              	.LFB29:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 56


2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 654              		.loc 1 2486 0
 655              		.cfi_startproc
 656              	.LVL33:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 657              		.loc 1 2487 0
 658 0000 1F23     		mov	r3, #31
 659 0002 1840     		and	r0, r3
 660              	.LVL34:
 661 0004 1E3B     		sub	r3, r3, #30
 662 0006 8340     		lsl	r3, r3, r0
 663 0008 181C     		mov	r0, r3
 664 000a 014B     		ldr	r3, .L58
 665 000c 1860     		str	r0, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 666              		.loc 1 2488 0
 667              		@ sp needed
 668 000e 7047     		bx	lr
 669              	.L59:
 670              		.align	2
 671              	.L58:
 672 0010 00E200E0 		.word	-536813056
 673              		.cfi_endproc
 674              	.LFE29:
 675              		.size	CyIntSetPending, .-CyIntSetPending
 676              		.section	.text.CyIntClearPending,"ax",%progbits
 677              		.align	2
 678              		.global	CyIntClearPending
 679              		.code	16
 680              		.thumb_func
 681              		.type	CyIntClearPending, %function
 682              	CyIntClearPending:
 683              	.LFB30:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 684              		.loc 1 2501 0
 685              		.cfi_startproc
 686              	.LVL35:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 687              		.loc 1 2502 0
 688 0000 1F23     		mov	r3, #31
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 57


 689 0002 1840     		and	r0, r3
 690              	.LVL36:
 691 0004 1E3B     		sub	r3, r3, #30
 692 0006 8340     		lsl	r3, r3, r0
 693 0008 181C     		mov	r0, r3
 694 000a 014B     		ldr	r3, .L61
 695 000c 1860     		str	r0, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 696              		.loc 1 2503 0
 697              		@ sp needed
 698 000e 7047     		bx	lr
 699              	.L62:
 700              		.align	2
 701              	.L61:
 702 0010 80E200E0 		.word	-536812928
 703              		.cfi_endproc
 704              	.LFE30:
 705              		.size	CyIntClearPending, .-CyIntClearPending
 706              		.section	.text.CyHalt,"ax",%progbits
 707              		.align	2
 708              		.global	CyHalt
 709              		.code	16
 710              		.thumb_func
 711              		.type	CyHalt, %function
 712              	CyHalt:
 713              	.LFB31:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 714              		.loc 1 2516 0
 715              		.cfi_startproc
 716              	.LVL37:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 717              		.loc 1 2525 0
 718              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 719 0000 01BE     		    bkpt    1
 720              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 58


2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 721              		.loc 1 2529 0
 722              		.code	16
 723              		@ sp needed
 724 0002 7047     		bx	lr
 725              		.cfi_endproc
 726              	.LFE31:
 727              		.size	CyHalt, .-CyHalt
 728              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 729              		.align	2
 730              		.global	CySysClkWriteEcoDiv
 731              		.code	16
 732              		.thumb_func
 733              		.type	CySysClkWriteEcoDiv, %function
 734              	CySysClkWriteEcoDiv:
 735              	.LFB12:
1251:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 736              		.loc 1 1251 0
 737              		.cfi_startproc
 738              	.LVL38:
 739 0000 10B5     		push	{r4, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 4, -8
 742              		.cfi_offset 14, -4
 743 0002 041C     		mov	r4, r0
1254:Generated_Source\PSoC4/CyLib.c ****             {
 744              		.loc 1 1254 0
 745 0004 0A4B     		ldr	r3, .L67
 746 0006 1B68     		ldr	r3, [r3]
 747 0008 0722     		mov	r2, #7
 748 000a 1340     		and	r3, r2
 749 000c 022B     		cmp	r3, #2
 750 000e 0BD0     		beq	.L65
1256:Generated_Source\PSoC4/CyLib.c **** 
 751              		.loc 1 1256 0
 752 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 753              	.LVL39:
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 754              		.loc 1 1258 0
 755 0014 0321     		mov	r1, #3
 756 0016 0C40     		and	r4, r1
 757              	.LVL40:
1259:Generated_Source\PSoC4/CyLib.c **** 
 758              		.loc 1 1259 0
 759 0018 064A     		ldr	r2, .L67+4
 760 001a 1368     		ldr	r3, [r2]
 761 001c 8B43     		bic	r3, r1
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 762              		.loc 1 1258 0
 763 001e 2343     		orr	r3, r4
 764 0020 1360     		str	r3, [r2]
1261:Generated_Source\PSoC4/CyLib.c ****             }
 765              		.loc 1 1261 0
 766 0022 FFF7FEFF 		bl	CyExitCriticalSection
 767              	.LVL41:
 768 0026 02E0     		b	.L64
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 59


 769              	.LVL42:
 770              	.L65:
1266:Generated_Source\PSoC4/CyLib.c ****             }
 771              		.loc 1 1266 0 discriminator 1
 772 0028 0020     		mov	r0, #0
 773              	.LVL43:
 774 002a FFF7FEFF 		bl	CyHalt
 775              	.LVL44:
 776              	.L64:
1268:Generated_Source\PSoC4/CyLib.c **** 
 777              		.loc 1 1268 0
 778              		@ sp needed
 779 002e 10BD     		pop	{r4, pc}
 780              	.L68:
 781              		.align	2
 782              	.L67:
 783 0030 00010B40 		.word	1074462976
 784 0034 64F02E40 		.word	1076818020
 785              		.cfi_endproc
 786              	.LFE12:
 787              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 788              		.section	.text.CyIntSetSysVector,"ax",%progbits
 789              		.align	2
 790              		.global	CyIntSetSysVector
 791              		.code	16
 792              		.thumb_func
 793              		.type	CyIntSetSysVector, %function
 794              	CyIntSetSysVector:
 795              	.LFB20:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 796              		.loc 1 2280 0
 797              		.cfi_startproc
 798              	.LVL45:
 799 0000 38B5     		push	{r3, r4, r5, lr}
 800              		.cfi_def_cfa_offset 16
 801              		.cfi_offset 3, -16
 802              		.cfi_offset 4, -12
 803              		.cfi_offset 5, -8
 804              		.cfi_offset 14, -4
 805 0002 041C     		mov	r4, r0
 806 0004 0D1C     		mov	r5, r1
 807              	.LVL46:
2284:Generated_Source\PSoC4/CyLib.c **** 
 808              		.loc 1 2284 0
 809 0006 0F28     		cmp	r0, #15
 810 0008 02D9     		bls	.L70
2284:Generated_Source\PSoC4/CyLib.c **** 
 811              		.loc 1 2284 0 is_stmt 0 discriminator 1
 812 000a 0020     		mov	r0, #0
 813              	.LVL47:
 814 000c FFF7FEFF 		bl	CyHalt
 815              	.LVL48:
 816              	.L70:
2287:Generated_Source\PSoC4/CyLib.c **** 
 817              		.loc 1 2287 0 is_stmt 1
 818 0010 A400     		lsl	r4, r4, #2
 819 0012 8023     		mov	r3, #128
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 60


 820 0014 9B05     		lsl	r3, r3, #22
 821 0016 9C46     		mov	ip, r3
 822 0018 6444     		add	r4, r4, ip
 823 001a 2068     		ldr	r0, [r4]
 824              	.LVL49:
2290:Generated_Source\PSoC4/CyLib.c **** 
 825              		.loc 1 2290 0
 826 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 827              		.loc 1 2293 0
 828              		@ sp needed
 829              	.LVL50:
 830 001e 38BD     		pop	{r3, r4, r5, pc}
 831              		.cfi_endproc
 832              	.LFE20:
 833              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 834              		.section	.text.CyIntGetSysVector,"ax",%progbits
 835              		.align	2
 836              		.global	CyIntGetSysVector
 837              		.code	16
 838              		.thumb_func
 839              		.type	CyIntGetSysVector, %function
 840              	CyIntGetSysVector:
 841              	.LFB21:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 842              		.loc 1 2314 0
 843              		.cfi_startproc
 844              	.LVL51:
 845 0000 10B5     		push	{r4, lr}
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 4, -8
 848              		.cfi_offset 14, -4
 849 0002 041E     		sub	r4, r0, #0
 850              	.LVL52:
2317:Generated_Source\PSoC4/CyLib.c **** 
 851              		.loc 1 2317 0
 852 0004 0F2C     		cmp	r4, #15
 853 0006 02D9     		bls	.L72
2317:Generated_Source\PSoC4/CyLib.c **** 
 854              		.loc 1 2317 0 is_stmt 0 discriminator 1
 855 0008 0020     		mov	r0, #0
 856              	.LVL53:
 857 000a FFF7FEFF 		bl	CyHalt
 858              	.LVL54:
 859              	.L72:
2319:Generated_Source\PSoC4/CyLib.c **** }
 860              		.loc 1 2319 0 is_stmt 1
 861 000e A400     		lsl	r4, r4, #2
 862 0010 8023     		mov	r3, #128
 863 0012 9B05     		lsl	r3, r3, #22
 864 0014 9C46     		mov	ip, r3
 865 0016 6444     		add	r4, r4, ip
 866 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 867              		.loc 1 2320 0
 868              		@ sp needed
 869 001a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 61


 870              		.cfi_endproc
 871              	.LFE21:
 872              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 873              		.section	.text.CyIntSetVector,"ax",%progbits
 874              		.align	2
 875              		.global	CyIntSetVector
 876              		.code	16
 877              		.thumb_func
 878              		.type	CyIntSetVector, %function
 879              	CyIntSetVector:
 880              	.LFB22:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 881              		.loc 1 2336 0
 882              		.cfi_startproc
 883              	.LVL55:
 884 0000 38B5     		push	{r3, r4, r5, lr}
 885              		.cfi_def_cfa_offset 16
 886              		.cfi_offset 3, -16
 887              		.cfi_offset 4, -12
 888              		.cfi_offset 5, -8
 889              		.cfi_offset 14, -4
 890 0002 041C     		mov	r4, r0
 891 0004 0D1C     		mov	r5, r1
 892              	.LVL56:
2340:Generated_Source\PSoC4/CyLib.c **** 
 893              		.loc 1 2340 0
 894 0006 1F28     		cmp	r0, #31
 895 0008 02D9     		bls	.L74
2340:Generated_Source\PSoC4/CyLib.c **** 
 896              		.loc 1 2340 0 is_stmt 0 discriminator 1
 897 000a 0020     		mov	r0, #0
 898              	.LVL57:
 899 000c FFF7FEFF 		bl	CyHalt
 900              	.LVL58:
 901              	.L74:
2343:Generated_Source\PSoC4/CyLib.c **** 
 902              		.loc 1 2343 0 is_stmt 1
 903 0010 A400     		lsl	r4, r4, #2
 904 0012 034B     		ldr	r3, .L75
 905 0014 9C46     		mov	ip, r3
 906 0016 6444     		add	r4, r4, ip
 907 0018 2068     		ldr	r0, [r4]
 908              	.LVL59:
2346:Generated_Source\PSoC4/CyLib.c **** 
 909              		.loc 1 2346 0
 910 001a 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 911              		.loc 1 2349 0
 912              		@ sp needed
 913              	.LVL60:
 914 001c 38BD     		pop	{r3, r4, r5, pc}
 915              	.L76:
 916 001e C046     		.align	2
 917              	.L75:
 918 0020 40000020 		.word	536870976
 919              		.cfi_endproc
 920              	.LFE22:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 62


 921              		.size	CyIntSetVector, .-CyIntSetVector
 922              		.section	.text.CyIntGetVector,"ax",%progbits
 923              		.align	2
 924              		.global	CyIntGetVector
 925              		.code	16
 926              		.thumb_func
 927              		.type	CyIntGetVector, %function
 928              	CyIntGetVector:
 929              	.LFB23:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 930              		.loc 1 2364 0
 931              		.cfi_startproc
 932              	.LVL61:
 933 0000 10B5     		push	{r4, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 4, -8
 936              		.cfi_offset 14, -4
 937 0002 041E     		sub	r4, r0, #0
 938              	.LVL62:
2367:Generated_Source\PSoC4/CyLib.c **** 
 939              		.loc 1 2367 0
 940 0004 1F2C     		cmp	r4, #31
 941 0006 02D9     		bls	.L78
2367:Generated_Source\PSoC4/CyLib.c **** 
 942              		.loc 1 2367 0 is_stmt 0 discriminator 1
 943 0008 0020     		mov	r0, #0
 944              	.LVL63:
 945 000a FFF7FEFF 		bl	CyHalt
 946              	.LVL64:
 947              	.L78:
2369:Generated_Source\PSoC4/CyLib.c **** }
 948              		.loc 1 2369 0 is_stmt 1
 949 000e A400     		lsl	r4, r4, #2
 950 0010 024B     		ldr	r3, .L79
 951 0012 9C46     		mov	ip, r3
 952 0014 6444     		add	r4, r4, ip
 953 0016 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 954              		.loc 1 2370 0
 955              		@ sp needed
 956 0018 10BD     		pop	{r4, pc}
 957              	.L80:
 958 001a C046     		.align	2
 959              	.L79:
 960 001c 40000020 		.word	536870976
 961              		.cfi_endproc
 962              	.LFE23:
 963              		.size	CyIntGetVector, .-CyIntGetVector
 964              		.section	.text.CyIntSetPriority,"ax",%progbits
 965              		.align	2
 966              		.global	CyIntSetPriority
 967              		.code	16
 968              		.thumb_func
 969              		.type	CyIntSetPriority, %function
 970              	CyIntSetPriority:
 971              	.LFB24:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 63


 972              		.loc 1 2383 0
 973              		.cfi_startproc
 974              	.LVL65:
 975 0000 70B5     		push	{r4, r5, r6, lr}
 976              		.cfi_def_cfa_offset 16
 977              		.cfi_offset 4, -16
 978              		.cfi_offset 5, -12
 979              		.cfi_offset 6, -8
 980              		.cfi_offset 14, -4
 981 0002 041C     		mov	r4, r0
 982 0004 0E1E     		sub	r6, r1, #0
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 983              		.loc 1 2388 0
 984 0006 032E     		cmp	r6, #3
 985 0008 02D9     		bls	.L82
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 986              		.loc 1 2388 0 is_stmt 0 discriminator 1
 987 000a 0020     		mov	r0, #0
 988              	.LVL66:
 989 000c FFF7FEFF 		bl	CyHalt
 990              	.LVL67:
 991              	.L82:
2389:Generated_Source\PSoC4/CyLib.c **** 
 992              		.loc 1 2389 0 is_stmt 1
 993 0010 1F2C     		cmp	r4, #31
 994 0012 02D9     		bls	.L83
2389:Generated_Source\PSoC4/CyLib.c **** 
 995              		.loc 1 2389 0 is_stmt 0 discriminator 1
 996 0014 0020     		mov	r0, #0
 997 0016 FFF7FEFF 		bl	CyHalt
 998              	.LVL68:
 999              	.L83:
2391:Generated_Source\PSoC4/CyLib.c **** 
 1000              		.loc 1 2391 0 is_stmt 1
 1001 001a 0325     		mov	r5, #3
 1002 001c 2540     		and	r5, r4
 1003 001e ED00     		lsl	r5, r5, #3
 1004 0020 0635     		add	r5, r5, #6
 1005              	.LVL69:
2393:Generated_Source\PSoC4/CyLib.c **** 
 1006              		.loc 1 2393 0
 1007 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1008              	.LVL70:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1009              		.loc 1 2395 0
 1010 0026 A408     		lsr	r4, r4, #2
 1011 0028 A400     		lsl	r4, r4, #2
 1012 002a 074B     		ldr	r3, .L84
 1013 002c 9C46     		mov	ip, r3
 1014 002e 6444     		add	r4, r4, ip
 1015 0030 2368     		ldr	r3, [r4]
 1016              	.LVL71:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1017              		.loc 1 2396 0
 1018 0032 0322     		mov	r2, #3
 1019 0034 AA40     		lsl	r2, r2, r5
 1020 0036 9343     		bic	r3, r2
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 64


 1021              	.LVL72:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1022              		.loc 1 2397 0
 1023 0038 AE40     		lsl	r6, r6, r5
 1024 003a 351C     		mov	r5, r6
 1025              	.LVL73:
 1026 003c 1D43     		orr	r5, r3
 1027              	.LVL74:
2398:Generated_Source\PSoC4/CyLib.c **** 
 1028              		.loc 1 2398 0
 1029 003e 2560     		str	r5, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 1030              		.loc 1 2400 0
 1031 0040 FFF7FEFF 		bl	CyExitCriticalSection
 1032              	.LVL75:
2401:Generated_Source\PSoC4/CyLib.c **** 
 1033              		.loc 1 2401 0
 1034              		@ sp needed
 1035              	.LVL76:
 1036 0044 70BD     		pop	{r4, r5, r6, pc}
 1037              	.L85:
 1038 0046 C046     		.align	2
 1039              	.L84:
 1040 0048 00E400E0 		.word	-536812544
 1041              		.cfi_endproc
 1042              	.LFE24:
 1043              		.size	CyIntSetPriority, .-CyIntSetPriority
 1044              		.section	.text.CyIntGetPriority,"ax",%progbits
 1045              		.align	2
 1046              		.global	CyIntGetPriority
 1047              		.code	16
 1048              		.thumb_func
 1049              		.type	CyIntGetPriority, %function
 1050              	CyIntGetPriority:
 1051              	.LFB25:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1052              		.loc 1 2417 0
 1053              		.cfi_startproc
 1054              	.LVL77:
 1055 0000 10B5     		push	{r4, lr}
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 4, -8
 1058              		.cfi_offset 14, -4
 1059 0002 041E     		sub	r4, r0, #0
2420:Generated_Source\PSoC4/CyLib.c **** 
 1060              		.loc 1 2420 0
 1061 0004 1F2C     		cmp	r4, #31
 1062 0006 02D9     		bls	.L87
2420:Generated_Source\PSoC4/CyLib.c **** 
 1063              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1064 0008 0020     		mov	r0, #0
 1065              	.LVL78:
 1066 000a FFF7FEFF 		bl	CyHalt
 1067              	.LVL79:
 1068              	.L87:
2422:Generated_Source\PSoC4/CyLib.c **** 
 1069              		.loc 1 2422 0 is_stmt 1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 65


 1070 000e A308     		lsr	r3, r4, #2
 1071 0010 9B00     		lsl	r3, r3, #2
 1072 0012 054A     		ldr	r2, .L88
 1073 0014 9446     		mov	ip, r2
 1074 0016 6344     		add	r3, r3, ip
 1075 0018 1868     		ldr	r0, [r3]
 1076 001a 0323     		mov	r3, #3
 1077 001c 1C40     		and	r4, r3
 1078 001e E400     		lsl	r4, r4, #3
 1079 0020 0634     		add	r4, r4, #6
 1080 0022 E040     		lsr	r0, r0, r4
 1081              	.LVL80:
2424:Generated_Source\PSoC4/CyLib.c **** }
 1082              		.loc 1 2424 0
 1083 0024 1840     		and	r0, r3
 1084              	.LVL81:
2425:Generated_Source\PSoC4/CyLib.c **** 
 1085              		.loc 1 2425 0
 1086              		@ sp needed
 1087 0026 10BD     		pop	{r4, pc}
 1088              	.L89:
 1089              		.align	2
 1090              	.L88:
 1091 0028 00E400E0 		.word	-536812544
 1092              		.cfi_endproc
 1093              	.LFE25:
 1094              		.size	CyIntGetPriority, .-CyIntGetPriority
 1095              		.section	.text.CySoftwareReset,"ax",%progbits
 1096              		.align	2
 1097              		.global	CySoftwareReset
 1098              		.code	16
 1099              		.thumb_func
 1100              		.type	CySoftwareReset, %function
 1101              	CySoftwareReset:
 1102              	.LFB32:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1103              		.loc 1 2540 0
 1104              		.cfi_startproc
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1105              		.loc 1 2545 0
 1106 0000 034A     		ldr	r2, .L91
 1107 0002 1368     		ldr	r3, [r2]
 1108 0004 1B04     		lsl	r3, r3, #16
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 66


 1109 0006 1B0C     		lsr	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1110              		.loc 1 2546 0
 1111 0008 0249     		ldr	r1, .L91+4
 1112 000a 0B43     		orr	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1113              		.loc 1 2545 0
 1114 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1115              		.loc 1 2547 0
 1116              		@ sp needed
 1117 000e 7047     		bx	lr
 1118              	.L92:
 1119              		.align	2
 1120              	.L91:
 1121 0010 0CED00E0 		.word	-536810228
 1122 0014 0400FA05 		.word	100270084
 1123              		.cfi_endproc
 1124              	.LFE32:
 1125              		.size	CySoftwareReset, .-CySoftwareReset
 1126              		.section	.text.CyDelay,"ax",%progbits
 1127              		.align	2
 1128              		.global	CyDelay
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	CyDelay, %function
 1132              	CyDelay:
 1133              	.LFB33:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1134              		.loc 1 2560 0
 1135              		.cfi_startproc
 1136              	.LVL82:
 1137 0000 10B5     		push	{r4, lr}
 1138              		.cfi_def_cfa_offset 8
 1139              		.cfi_offset 4, -8
 1140              		.cfi_offset 14, -4
 1141 0002 041C     		mov	r4, r0
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1142              		.loc 1 2561 0
 1143 0004 06E0     		b	.L94
 1144              	.LVL83:
 1145              	.L95:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 67


2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1146              		.loc 1 2566 0
 1147 0006 084B     		ldr	r3, .L96
 1148 0008 5868     		ldr	r0, [r3, #4]
 1149 000a FFF7FEFF 		bl	CyDelayCycles
 1150              	.LVL84:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1151              		.loc 1 2567 0
 1152 000e 074B     		ldr	r3, .L96+4
 1153 0010 9C46     		mov	ip, r3
 1154 0012 6444     		add	r4, r4, ip
 1155              	.LVL85:
 1156              	.L94:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1157              		.loc 1 2561 0
 1158 0014 8023     		mov	r3, #128
 1159 0016 1B02     		lsl	r3, r3, #8
 1160 0018 9C42     		cmp	r4, r3
 1161 001a F4D8     		bhi	.L95
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1162              		.loc 1 2570 0
 1163 001c 024B     		ldr	r3, .L96
 1164 001e 9868     		ldr	r0, [r3, #8]
 1165 0020 6043     		mul	r0, r4
 1166 0022 FFF7FEFF 		bl	CyDelayCycles
 1167              	.LVL86:
2571:Generated_Source\PSoC4/CyLib.c **** }
 1168              		.loc 1 2571 0
 1169              		@ sp needed
 1170              	.LVL87:
 1171 0026 10BD     		pop	{r4, pc}
 1172              	.L97:
 1173              		.align	2
 1174              	.L96:
 1175 0028 00000000 		.word	.LANCHOR0
 1176 002c 0080FFFF 		.word	-32768
 1177              		.cfi_endproc
 1178              	.LFE33:
 1179              		.size	CyDelay, .-CyDelay
 1180              		.section	.text.CyDelayUs,"ax",%progbits
 1181              		.align	2
 1182              		.global	CyDelayUs
 1183              		.code	16
 1184              		.thumb_func
 1185              		.type	CyDelayUs, %function
 1186              	CyDelayUs:
 1187              	.LFB34:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 68


2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1188              		.loc 1 2583 0
 1189              		.cfi_startproc
 1190              	.LVL88:
 1191 0000 08B5     		push	{r3, lr}
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 3, -8
 1194              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1195              		.loc 1 2584 0
 1196 0002 034B     		ldr	r3, .L99
 1197 0004 1B7B     		ldrb	r3, [r3, #12]
 1198 0006 5843     		mul	r0, r3
 1199              	.LVL89:
 1200 0008 FFF7FEFF 		bl	CyDelayCycles
 1201              	.LVL90:
2585:Generated_Source\PSoC4/CyLib.c **** }
 1202              		.loc 1 2585 0
 1203              		@ sp needed
 1204 000c 08BD     		pop	{r3, pc}
 1205              	.L100:
 1206 000e C046     		.align	2
 1207              	.L99:
 1208 0010 00000000 		.word	.LANCHOR0
 1209              		.cfi_endproc
 1210              	.LFE34:
 1211              		.size	CyDelayUs, .-CyDelayUs
 1212              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1213              		.align	2
 1214              		.global	CySysClkEcoStart
 1215              		.code	16
 1216              		.thumb_func
 1217              		.type	CySysClkEcoStart, %function
 1218              	CySysClkEcoStart:
 1219              	.LFB9:
1028:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1220              		.loc 1 1028 0
 1221              		.cfi_startproc
 1222              	.LVL91:
 1223 0000 10B5     		push	{r4, lr}
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 4, -8
 1226              		.cfi_offset 14, -4
 1227 0002 041C     		mov	r4, r0
 1228              	.LVL92:
1033:Generated_Source\PSoC4/CyLib.c **** 
 1229              		.loc 1 1033 0
 1230 0004 0F4A     		ldr	r2, .L106
 1231 0006 1168     		ldr	r1, [r2]
 1232 0008 0123     		mov	r3, #1
 1233 000a 0B43     		orr	r3, r1
 1234 000c 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 69


 1235              		.loc 1 1036 0
 1236 000e 0E4A     		ldr	r2, .L106+4
 1237 0010 0E4B     		ldr	r3, .L106+8
 1238 0012 1A60     		str	r2, [r3]
1039:Generated_Source\PSoC4/CyLib.c ****         
 1239              		.loc 1 1039 0
 1240 0014 0E4A     		ldr	r2, .L106+12
 1241 0016 1368     		ldr	r3, [r2]
 1242 0018 8021     		mov	r1, #128
 1243 001a 0902     		lsl	r1, r1, #8
 1244 001c 0B43     		orr	r3, r1
 1245 001e 1360     		str	r3, [r2]
1137:Generated_Source\PSoC4/CyLib.c ****         {
 1246              		.loc 1 1137 0
 1247 0020 0028     		cmp	r0, #0
 1248 0022 09D1     		bne	.L102
1029:Generated_Source\PSoC4/CyLib.c **** 
 1249              		.loc 1 1029 0
 1250 0024 0020     		mov	r0, #0
 1251              	.LVL93:
 1252 0026 0CE0     		b	.L103
 1253              	.L104:
1143:Generated_Source\PSoC4/CyLib.c **** 
 1254              		.loc 1 1143 0
 1255 0028 0120     		mov	r0, #1
 1256 002a FFF7FEFF 		bl	CyDelayUs
 1257              	.LVL94:
1145:Generated_Source\PSoC4/CyLib.c ****                 {
 1258              		.loc 1 1145 0
 1259 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1260              	.LVL95:
 1261 0032 0028     		cmp	r0, #0
 1262 0034 04D1     		bne	.L105
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1263              		.loc 1 1141 0
 1264 0036 013C     		sub	r4, r4, #1
 1265              	.LVL96:
 1266              	.L102:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1267              		.loc 1 1141 0 is_stmt 0 discriminator 1
 1268 0038 002C     		cmp	r4, #0
 1269 003a F5D1     		bne	.L104
1139:Generated_Source\PSoC4/CyLib.c **** 
 1270              		.loc 1 1139 0 is_stmt 1
 1271 003c 1020     		mov	r0, #16
 1272 003e 00E0     		b	.L103
 1273              	.L105:
1147:Generated_Source\PSoC4/CyLib.c ****                     break;
 1274              		.loc 1 1147 0
 1275 0040 0020     		mov	r0, #0
 1276              	.L103:
 1277              	.LVL97:
1155:Generated_Source\PSoC4/CyLib.c **** 
 1278              		.loc 1 1155 0
 1279              		@ sp needed
 1280              	.LVL98:
 1281 0042 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 70


 1282              	.L107:
 1283              		.align	2
 1284              	.L106:
 1285 0044 60F02E40 		.word	1076818016
 1286 0048 02200000 		.word	8194
 1287 004c 78002E40 		.word	1076756600
 1288 0050 10002E40 		.word	1076756496
 1289              		.cfi_endproc
 1290              	.LFE9:
 1291              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1292              		.section	.text.CySysLvdEnable,"ax",%progbits
 1293              		.align	2
 1294              		.global	CySysLvdEnable
 1295              		.code	16
 1296              		.thumb_func
 1297              		.type	CySysLvdEnable, %function
 1298              	CySysLvdEnable:
 1299              	.LFB13:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1300              		.loc 1 2119 0
 1301              		.cfi_startproc
 1302              	.LVL99:
 1303 0000 38B5     		push	{r3, r4, r5, lr}
 1304              		.cfi_def_cfa_offset 16
 1305              		.cfi_offset 3, -16
 1306              		.cfi_offset 4, -12
 1307              		.cfi_offset 5, -8
 1308              		.cfi_offset 14, -4
 1309 0002 031C     		mov	r3, r0
2121:Generated_Source\PSoC4/CyLib.c **** 
 1310              		.loc 1 2121 0
 1311 0004 0D4C     		ldr	r4, .L109
 1312 0006 2268     		ldr	r2, [r4]
 1313 0008 0225     		mov	r5, #2
 1314 000a AA43     		bic	r2, r5
 1315 000c 2260     		str	r2, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1316              		.loc 1 2124 0
 1317 000e 0C4A     		ldr	r2, .L109+4
 1318 0010 1168     		ldr	r1, [r2]
 1319 0012 1E20     		mov	r0, #30
 1320              	.LVL100:
 1321 0014 8143     		bic	r1, r0
2125:Generated_Source\PSoC4/CyLib.c **** 
 1322              		.loc 1 2125 0
 1323 0016 5B00     		lsl	r3, r3, #1
 1324              	.LVL101:
 1325 0018 1840     		and	r0, r3
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1326              		.loc 1 2124 0
 1327 001a 0843     		orr	r0, r1
 1328 001c 1060     		str	r0, [r2]
2128:Generated_Source\PSoC4/CyLib.c **** 
 1329              		.loc 1 2128 0
 1330 001e 1168     		ldr	r1, [r2]
 1331 0020 0123     		mov	r3, #1
 1332 0022 0B43     		orr	r3, r1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 71


 1333 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1334              		.loc 1 2131 0
 1335 0026 FA20     		mov	r0, #250
 1336 0028 8000     		lsl	r0, r0, #2
 1337 002a FFF7FEFF 		bl	CyDelayUs
 1338              	.LVL102:
2134:Generated_Source\PSoC4/CyLib.c **** 
 1339              		.loc 1 2134 0
 1340 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1341              	.LVL103:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1342              		.loc 1 2137 0
 1343 0032 2368     		ldr	r3, [r4]
 1344 0034 1D43     		orr	r5, r3
 1345 0036 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1346              		.loc 1 2138 0
 1347              		@ sp needed
 1348 0038 38BD     		pop	{r3, r4, r5, pc}
 1349              	.L110:
 1350 003a C046     		.align	2
 1351              	.L109:
 1352 003c 08000B40 		.word	1074462728
 1353 0040 18000B40 		.word	1074462744
 1354              		.cfi_endproc
 1355              	.LFE13:
 1356              		.size	CySysLvdEnable, .-CySysLvdEnable
 1357              		.global	__aeabi_uidiv
 1358              		.section	.text.CyDelayFreq,"ax",%progbits
 1359              		.align	2
 1360              		.global	CyDelayFreq
 1361              		.code	16
 1362              		.thumb_func
 1363              		.type	CyDelayFreq, %function
 1364              	CyDelayFreq:
 1365              	.LFB35:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1366              		.loc 1 2597 0
 1367              		.cfi_startproc
 1368              	.LVL104:
 1369 0000 38B5     		push	{r3, r4, r5, lr}
 1370              		.cfi_def_cfa_offset 16
 1371              		.cfi_offset 3, -16
 1372              		.cfi_offset 4, -12
 1373              		.cfi_offset 5, -8
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 72


 1374              		.cfi_offset 14, -4
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1375              		.loc 1 2598 0
 1376 0002 0028     		cmp	r0, #0
 1377 0004 02D0     		beq	.L112
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1378              		.loc 1 2600 0
 1379 0006 0C4B     		ldr	r3, .L114
 1380 0008 1861     		str	r0, [r3, #16]
 1381 000a 02E0     		b	.L113
 1382              	.L112:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1383              		.loc 1 2604 0
 1384 000c 0B4A     		ldr	r2, .L114+4
 1385 000e 0A4B     		ldr	r3, .L114
 1386 0010 1A61     		str	r2, [r3, #16]
 1387              	.L113:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1388              		.loc 1 2607 0
 1389 0012 094C     		ldr	r4, .L114
 1390 0014 2569     		ldr	r5, [r4, #16]
 1391 0016 0A4B     		ldr	r3, .L114+8
 1392 0018 E818     		add	r0, r5, r3
 1393              	.LVL105:
 1394 001a 0A49     		ldr	r1, .L114+12
 1395 001c FFF7FEFF 		bl	__aeabi_uidiv
 1396              	.LVL106:
 1397 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1398              		.loc 1 2608 0
 1399 0022 094B     		ldr	r3, .L114+16
 1400 0024 E818     		add	r0, r5, r3
 1401 0026 FA21     		mov	r1, #250
 1402 0028 8900     		lsl	r1, r1, #2
 1403 002a FFF7FEFF 		bl	__aeabi_uidiv
 1404              	.LVL107:
 1405 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1406              		.loc 1 2609 0
 1407 0030 C003     		lsl	r0, r0, #15
 1408 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1409              		.loc 1 2610 0
 1410              		@ sp needed
 1411 0034 38BD     		pop	{r3, r4, r5, pc}
 1412              	.L115:
 1413 0036 C046     		.align	2
 1414              	.L114:
 1415 0038 00000000 		.word	.LANCHOR0
 1416 003c 006CDC02 		.word	48000000
 1417 0040 3F420F00 		.word	999999
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 73


 1418 0044 40420F00 		.word	1000000
 1419 0048 E7030000 		.word	999
 1420              		.cfi_endproc
 1421              	.LFE35:
 1422              		.size	CyDelayFreq, .-CyDelayFreq
 1423              		.section	.text.CySysTickStop,"ax",%progbits
 1424              		.align	2
 1425              		.global	CySysTickStop
 1426              		.code	16
 1427              		.thumb_func
 1428              		.type	CySysTickStop, %function
 1429              	CySysTickStop:
 1430              	.LFB39:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 74


2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 1431              		.loc 1 2706 0
 1432              		.cfi_startproc
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1433              		.loc 1 2707 0
 1434 0000 024A     		ldr	r2, .L117
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 75


 1435 0002 1368     		ldr	r3, [r2]
 1436 0004 0121     		mov	r1, #1
 1437 0006 8B43     		bic	r3, r1
 1438 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** }
 1439              		.loc 1 2708 0
 1440              		@ sp needed
 1441 000a 7047     		bx	lr
 1442              	.L118:
 1443              		.align	2
 1444              	.L117:
 1445 000c 10E000E0 		.word	-536813552
 1446              		.cfi_endproc
 1447              	.LFE39:
 1448              		.size	CySysTickStop, .-CySysTickStop
 1449              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1450              		.align	2
 1451              		.global	CySysTickEnableInterrupt
 1452              		.code	16
 1453              		.thumb_func
 1454              		.type	CySysTickEnableInterrupt, %function
 1455              	CySysTickEnableInterrupt:
 1456              	.LFB40:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 1457              		.loc 1 2722 0
 1458              		.cfi_startproc
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1459              		.loc 1 2723 0
 1460 0000 024A     		ldr	r2, .L120
 1461 0002 1168     		ldr	r1, [r2]
 1462 0004 0223     		mov	r3, #2
 1463 0006 0B43     		orr	r3, r1
 1464 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** }
 1465              		.loc 1 2724 0
 1466              		@ sp needed
 1467 000a 7047     		bx	lr
 1468              	.L121:
 1469              		.align	2
 1470              	.L120:
 1471 000c 10E000E0 		.word	-536813552
 1472              		.cfi_endproc
 1473              	.LFE40:
 1474              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 76


 1475              		.section	.text.CySysTickEnable,"ax",%progbits
 1476              		.align	2
 1477              		.global	CySysTickEnable
 1478              		.code	16
 1479              		.thumb_func
 1480              		.type	CySysTickEnable, %function
 1481              	CySysTickEnable:
 1482              	.LFB38:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1483              		.loc 1 2689 0
 1484              		.cfi_startproc
 1485 0000 08B5     		push	{r3, lr}
 1486              		.cfi_def_cfa_offset 8
 1487              		.cfi_offset 3, -8
 1488              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1489              		.loc 1 2690 0
 1490 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1491              	.LVL108:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1492              		.loc 1 2691 0
 1493 0006 034A     		ldr	r2, .L123
 1494 0008 1168     		ldr	r1, [r2]
 1495 000a 0123     		mov	r3, #1
 1496 000c 0B43     		orr	r3, r1
 1497 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1498              		.loc 1 2692 0
 1499              		@ sp needed
 1500 0010 08BD     		pop	{r3, pc}
 1501              	.L124:
 1502 0012 C046     		.align	2
 1503              	.L123:
 1504 0014 10E000E0 		.word	-536813552
 1505              		.cfi_endproc
 1506              	.LFE38:
 1507              		.size	CySysTickEnable, .-CySysTickEnable
 1508              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1509              		.align	2
 1510              		.global	CySysTickDisableInterrupt
 1511              		.code	16
 1512              		.thumb_func
 1513              		.type	CySysTickDisableInterrupt, %function
 1514              	CySysTickDisableInterrupt:
 1515              	.LFB41:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 77


2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 1516              		.loc 1 2738 0
 1517              		.cfi_startproc
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1518              		.loc 1 2739 0
 1519 0000 024A     		ldr	r2, .L126
 1520 0002 1368     		ldr	r3, [r2]
 1521 0004 0221     		mov	r1, #2
 1522 0006 8B43     		bic	r3, r1
 1523 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** }
 1524              		.loc 1 2740 0
 1525              		@ sp needed
 1526 000a 7047     		bx	lr
 1527              	.L127:
 1528              		.align	2
 1529              	.L126:
 1530 000c 10E000E0 		.word	-536813552
 1531              		.cfi_endproc
 1532              	.LFE41:
 1533              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1534              		.section	.text.CySysTickSetReload,"ax",%progbits
 1535              		.align	2
 1536              		.global	CySysTickSetReload
 1537              		.code	16
 1538              		.thumb_func
 1539              		.type	CySysTickSetReload, %function
 1540              	CySysTickSetReload:
 1541              	.LFB42:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 1542              		.loc 1 2755 0
 1543              		.cfi_startproc
 1544              	.LVL109:
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1545              		.loc 1 2756 0
 1546 0000 0002     		lsl	r0, r0, #8
 1547              	.LVL110:
 1548 0002 000A     		lsr	r0, r0, #8
 1549 0004 014B     		ldr	r3, .L129
 1550 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 1551              		.loc 1 2757 0
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 78


 1552              		@ sp needed
 1553 0008 7047     		bx	lr
 1554              	.L130:
 1555 000a C046     		.align	2
 1556              	.L129:
 1557 000c 14E000E0 		.word	-536813548
 1558              		.cfi_endproc
 1559              	.LFE42:
 1560              		.size	CySysTickSetReload, .-CySysTickSetReload
 1561              		.section	.text.CySysTickGetReload,"ax",%progbits
 1562              		.align	2
 1563              		.global	CySysTickGetReload
 1564              		.code	16
 1565              		.thumb_func
 1566              		.type	CySysTickGetReload, %function
 1567              	CySysTickGetReload:
 1568              	.LFB43:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 1569              		.loc 1 2771 0
 1570              		.cfi_startproc
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1571              		.loc 1 2772 0
 1572 0000 024B     		ldr	r3, .L132
 1573 0002 1868     		ldr	r0, [r3]
 1574 0004 0002     		lsl	r0, r0, #8
 1575 0006 000A     		lsr	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 1576              		.loc 1 2773 0
 1577              		@ sp needed
 1578 0008 7047     		bx	lr
 1579              	.L133:
 1580 000a C046     		.align	2
 1581              	.L132:
 1582 000c 14E000E0 		.word	-536813548
 1583              		.cfi_endproc
 1584              	.LFE43:
 1585              		.size	CySysTickGetReload, .-CySysTickGetReload
 1586              		.section	.text.CySysTickGetValue,"ax",%progbits
 1587              		.align	2
 1588              		.global	CySysTickGetValue
 1589              		.code	16
 1590              		.thumb_func
 1591              		.type	CySysTickGetValue, %function
 1592              	CySysTickGetValue:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 79


 1593              	.LFB44:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 1594              		.loc 1 2787 0
 1595              		.cfi_startproc
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1596              		.loc 1 2788 0
 1597 0000 024B     		ldr	r3, .L135
 1598 0002 1868     		ldr	r0, [r3]
 1599 0004 0002     		lsl	r0, r0, #8
 1600 0006 000A     		lsr	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 1601              		.loc 1 2789 0
 1602              		@ sp needed
 1603 0008 7047     		bx	lr
 1604              	.L136:
 1605 000a C046     		.align	2
 1606              	.L135:
 1607 000c 18E000E0 		.word	-536813544
 1608              		.cfi_endproc
 1609              	.LFE44:
 1610              		.size	CySysTickGetValue, .-CySysTickGetValue
 1611              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1612              		.align	2
 1613              		.global	CySysTickSetClockSource
 1614              		.code	16
 1615              		.thumb_func
 1616              		.type	CySysTickSetClockSource, %function
 1617              	CySysTickSetClockSource:
 1618              	.LFB45:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 80


2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 1619              		.loc 1 2819 0
 1620              		.cfi_startproc
 1621              	.LVL111:
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1622              		.loc 1 2820 0
 1623 0000 0128     		cmp	r0, #1
 1624 0002 05D1     		bne	.L138
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1625              		.loc 1 2822 0
 1626 0004 054A     		ldr	r2, .L140
 1627 0006 1168     		ldr	r1, [r2]
 1628 0008 0423     		mov	r3, #4
 1629 000a 0B43     		orr	r3, r1
 1630 000c 1360     		str	r3, [r2]
 1631 000e 04E0     		b	.L137
 1632              	.L138:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1633              		.loc 1 2826 0
 1634 0010 024A     		ldr	r2, .L140
 1635 0012 1368     		ldr	r3, [r2]
 1636 0014 0421     		mov	r1, #4
 1637 0016 8B43     		bic	r3, r1
 1638 0018 1360     		str	r3, [r2]
 1639              	.L137:
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 1640              		.loc 1 2828 0
 1641              		@ sp needed
 1642 001a 7047     		bx	lr
 1643              	.L141:
 1644              		.align	2
 1645              	.L140:
 1646 001c 10E000E0 		.word	-536813552
 1647              		.cfi_endproc
 1648              	.LFE45:
 1649              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1650              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1651              		.align	2
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 81


 1652              		.global	CySysTickGetClockSource
 1653              		.code	16
 1654              		.thumb_func
 1655              		.type	CySysTickGetClockSource, %function
 1656              	CySysTickGetClockSource:
 1657              	.LFB46:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 1658              		.loc 1 2844 0
 1659              		.cfi_startproc
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1660              		.loc 1 2845 0
 1661 0000 024B     		ldr	r3, .L143
 1662 0002 1868     		ldr	r0, [r3]
 1663 0004 4007     		lsl	r0, r0, #29
 1664 0006 C00F     		lsr	r0, r0, #31
2846:Generated_Source\PSoC4/CyLib.c ****     }
 1665              		.loc 1 2846 0
 1666              		@ sp needed
 1667 0008 7047     		bx	lr
 1668              	.L144:
 1669 000a C046     		.align	2
 1670              	.L143:
 1671 000c 10E000E0 		.word	-536813552
 1672              		.cfi_endproc
 1673              	.LFE46:
 1674              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1675              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1676              		.align	2
 1677              		.global	CySysTickGetCountFlag
 1678              		.code	16
 1679              		.thumb_func
 1680              		.type	CySysTickGetCountFlag, %function
 1681              	CySysTickGetCountFlag:
 1682              	.LFB47:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 82


2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 1683              		.loc 1 2867 0
 1684              		.cfi_startproc
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1685              		.loc 1 2868 0
 1686 0000 024B     		ldr	r3, .L146
 1687 0002 1868     		ldr	r0, [r3]
 1688 0004 C003     		lsl	r0, r0, #15
 1689 0006 C00F     		lsr	r0, r0, #31
2869:Generated_Source\PSoC4/CyLib.c **** }
 1690              		.loc 1 2869 0
 1691              		@ sp needed
 1692 0008 7047     		bx	lr
 1693              	.L147:
 1694 000a C046     		.align	2
 1695              	.L146:
 1696 000c 10E000E0 		.word	-536813552
 1697              		.cfi_endproc
 1698              	.LFE47:
 1699              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1700              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1701              		.align	2
 1702              		.code	16
 1703              		.thumb_func
 1704              		.type	CySysTickServiceCallbacks, %function
 1705              	CySysTickServiceCallbacks:
 1706              	.LFB51:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 83


2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 84


2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 1707              		.loc 1 2952 0
 1708              		.cfi_startproc
 1709 0000 10B5     		push	{r4, lr}
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 4, -8
 1712              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1713              		.loc 1 2956 0
 1714 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1715              	.LVL112:
 1716 0006 0128     		cmp	r0, #1
 1717 0008 0BD1     		bne	.L148
 1718 000a 07E0     		b	.L153
 1719              	.LVL113:
 1720              	.L152:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1721              		.loc 1 2960 0
 1722 000c A300     		lsl	r3, r4, #2
 1723 000e 054A     		ldr	r2, .L154
 1724 0010 9B58     		ldr	r3, [r3, r2]
 1725 0012 002B     		cmp	r3, #0
 1726 0014 00D0     		beq	.L151
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1727              		.loc 1 2962 0
 1728 0016 9847     		blx	r3
 1729              	.LVL114:
 1730              	.L151:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1731              		.loc 1 2958 0 discriminator 2
 1732 0018 0134     		add	r4, r4, #1
 1733              	.LVL115:
 1734 001a 00E0     		b	.L149
 1735              	.LVL116:
 1736              	.L153:
 1737 001c 0024     		mov	r4, #0
 1738              	.L149:
 1739              	.LVL117:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1740              		.loc 1 2958 0 is_stmt 0 discriminator 1
 1741 001e 042C     		cmp	r4, #4
 1742 0020 F4D9     		bls	.L152
 1743              	.LVL118:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 85


 1744              	.L148:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 1745              		.loc 1 2966 0 is_stmt 1
 1746              		@ sp needed
 1747 0022 10BD     		pop	{r4, pc}
 1748              	.L155:
 1749              		.align	2
 1750              	.L154:
 1751 0024 00000000 		.word	.LANCHOR2
 1752              		.cfi_endproc
 1753              	.LFE51:
 1754              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1755              		.section	.text.CySysTickClear,"ax",%progbits
 1756              		.align	2
 1757              		.global	CySysTickClear
 1758              		.code	16
 1759              		.thumb_func
 1760              		.type	CySysTickClear, %function
 1761              	CySysTickClear:
 1762              	.LFB48:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1763              		.loc 1 2880 0
 1764              		.cfi_startproc
2881:Generated_Source\PSoC4/CyLib.c **** }
 1765              		.loc 1 2881 0
 1766 0000 0022     		mov	r2, #0
 1767 0002 014B     		ldr	r3, .L157
 1768 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 1769              		.loc 1 2882 0
 1770              		@ sp needed
 1771 0006 7047     		bx	lr
 1772              	.L158:
 1773              		.align	2
 1774              	.L157:
 1775 0008 18E000E0 		.word	-536813544
 1776              		.cfi_endproc
 1777              	.LFE48:
 1778              		.size	CySysTickClear, .-CySysTickClear
 1779              		.section	.text.CySysTickInit,"ax",%progbits
 1780              		.align	2
 1781              		.global	CySysTickInit
 1782              		.code	16
 1783              		.thumb_func
 1784              		.type	CySysTickInit, %function
 1785              	CySysTickInit:
 1786              	.LFB37:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1787              		.loc 1 2658 0
 1788              		.cfi_startproc
 1789 0000 08B5     		push	{r3, lr}
 1790              		.cfi_def_cfa_offset 8
 1791              		.cfi_offset 3, -8
 1792              		.cfi_offset 14, -4
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 86


 1793              	.LVL119:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1794              		.loc 1 2661 0
 1795 0002 0023     		mov	r3, #0
 1796 0004 04E0     		b	.L160
 1797              	.LVL120:
 1798              	.L161:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1799              		.loc 1 2663 0 discriminator 3
 1800 0006 9900     		lsl	r1, r3, #2
 1801 0008 0020     		mov	r0, #0
 1802 000a 0D4A     		ldr	r2, .L162
 1803 000c 8850     		str	r0, [r1, r2]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1804              		.loc 1 2661 0 discriminator 3
 1805 000e 0133     		add	r3, r3, #1
 1806              	.LVL121:
 1807              	.L160:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1808              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1809 0010 042B     		cmp	r3, #4
 1810 0012 F8D9     		bls	.L161
2666:Generated_Source\PSoC4/CyLib.c **** 
 1811              		.loc 1 2666 0 is_stmt 1
 1812 0014 0F20     		mov	r0, #15
 1813 0016 0B49     		ldr	r1, .L162+4
 1814 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1815              	.LVL122:
2669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1816              		.loc 1 2669 0
 1817 001c 0120     		mov	r0, #1
 1818 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1819              	.LVL123:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1820              		.loc 1 2672 0
 1821 0022 094B     		ldr	r3, .L162+8
 1822 0024 1869     		ldr	r0, [r3, #16]
 1823 0026 FA21     		mov	r1, #250
 1824 0028 8900     		lsl	r1, r1, #2
 1825 002a FFF7FEFF 		bl	__aeabi_uidiv
 1826              	.LVL124:
 1827 002e FFF7FEFF 		bl	CySysTickSetReload
 1828              	.LVL125:
2673:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1829              		.loc 1 2673 0
 1830 0032 FFF7FEFF 		bl	CySysTickClear
 1831              	.LVL126:
2674:Generated_Source\PSoC4/CyLib.c **** }
 1832              		.loc 1 2674 0
 1833 0036 0F20     		mov	r0, #15
 1834 0038 FFF7FEFF 		bl	CyIntEnable
 1835              	.LVL127:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1836              		.loc 1 2675 0
 1837              		@ sp needed
 1838 003c 08BD     		pop	{r3, pc}
 1839              	.L163:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 87


 1840 003e C046     		.align	2
 1841              	.L162:
 1842 0040 00000000 		.word	.LANCHOR2
 1843 0044 00000000 		.word	CySysTickServiceCallbacks
 1844 0048 00000000 		.word	.LANCHOR0
 1845              		.cfi_endproc
 1846              	.LFE37:
 1847              		.size	CySysTickInit, .-CySysTickInit
 1848              		.section	.text.CySysTickStart,"ax",%progbits
 1849              		.align	2
 1850              		.global	CySysTickStart
 1851              		.code	16
 1852              		.thumb_func
 1853              		.type	CySysTickStart, %function
 1854              	CySysTickStart:
 1855              	.LFB36:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1856              		.loc 1 2629 0
 1857              		.cfi_startproc
 1858 0000 08B5     		push	{r3, lr}
 1859              		.cfi_def_cfa_offset 8
 1860              		.cfi_offset 3, -8
 1861              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1862              		.loc 1 2630 0
 1863 0002 064B     		ldr	r3, .L166
 1864 0004 5B69     		ldr	r3, [r3, #20]
 1865 0006 002B     		cmp	r3, #0
 1866 0008 04D1     		bne	.L165
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1867              		.loc 1 2632 0
 1868 000a FFF7FEFF 		bl	CySysTickInit
 1869              	.LVL128:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1870              		.loc 1 2633 0
 1871 000e 0122     		mov	r2, #1
 1872 0010 024B     		ldr	r3, .L166
 1873 0012 5A61     		str	r2, [r3, #20]
 1874              	.L165:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1875              		.loc 1 2636 0
 1876 0014 FFF7FEFF 		bl	CySysTickEnable
 1877              	.LVL129:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1878              		.loc 1 2637 0
 1879              		@ sp needed
 1880 0018 08BD     		pop	{r3, pc}
 1881              	.L167:
 1882 001a C046     		.align	2
 1883              	.L166:
 1884 001c 00000000 		.word	.LANCHOR2
 1885              		.cfi_endproc
 1886              	.LFE36:
 1887              		.size	CySysTickStart, .-CySysTickStart
 1888              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1889              		.align	2
 1890              		.global	CySysTickSetCallback
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 88


 1891              		.code	16
 1892              		.thumb_func
 1893              		.type	CySysTickSetCallback, %function
 1894              	CySysTickSetCallback:
 1895              	.LFB49:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1896              		.loc 1 2915 0
 1897              		.cfi_startproc
 1898              	.LVL130:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1899              		.loc 1 2918 0
 1900 0000 024A     		ldr	r2, .L169
 1901 0002 8300     		lsl	r3, r0, #2
 1902 0004 9858     		ldr	r0, [r3, r2]
 1903              	.LVL131:
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1904              		.loc 1 2919 0
 1905 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 1906              		.loc 1 2921 0
 1907              		@ sp needed
 1908 0008 7047     		bx	lr
 1909              	.L170:
 1910 000a C046     		.align	2
 1911              	.L169:
 1912 000c 00000000 		.word	.LANCHOR2
 1913              		.cfi_endproc
 1914              	.LFE49:
 1915              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1916              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1917              		.align	2
 1918              		.global	CySysTickGetCallback
 1919              		.code	16
 1920              		.thumb_func
 1921              		.type	CySysTickGetCallback, %function
 1922              	CySysTickGetCallback:
 1923              	.LFB50:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1924              		.loc 1 2939 0
 1925              		.cfi_startproc
 1926              	.LVL132:
2940:Generated_Source\PSoC4/CyLib.c **** }
 1927              		.loc 1 2940 0
 1928 0000 8000     		lsl	r0, r0, #2
 1929              	.LVL133:
 1930 0002 014B     		ldr	r3, .L172
 1931 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 1932              		.loc 1 2941 0
 1933              		@ sp needed
 1934 0006 7047     		bx	lr
 1935              	.L173:
 1936              		.align	2
 1937              	.L172:
 1938 0008 00000000 		.word	.LANCHOR2
 1939              		.cfi_endproc
 1940              	.LFE50:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 89


 1941              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1942              		.section	.text.CyGetUniqueId,"ax",%progbits
 1943              		.align	2
 1944              		.global	CyGetUniqueId
 1945              		.code	16
 1946              		.thumb_func
 1947              		.type	CyGetUniqueId, %function
 1948              	CyGetUniqueId:
 1949              	.LFB52:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 1950              		.loc 1 2984 0
 1951              		.cfi_startproc
 1952              	.LVL134:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1953              		.loc 1 2986 0
 1954 0000 134B     		ldr	r3, .L175
 1955 0002 1B78     		ldrb	r3, [r3]
 1956 0004 DAB2     		uxtb	r2, r3
 1957 0006 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1958              		.loc 1 2987 0
 1959 0008 124B     		ldr	r3, .L175+4
 1960 000a 1B78     		ldrb	r3, [r3]
 1961 000c 1B02     		lsl	r3, r3, #8
 1962 000e 1343     		orr	r3, r2
 1963 0010 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1964              		.loc 1 2988 0
 1965 0012 114A     		ldr	r2, .L175+8
 1966 0014 1278     		ldrb	r2, [r2]
 1967 0016 1204     		lsl	r2, r2, #16
 1968 0018 1343     		orr	r3, r2
 1969 001a 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1970              		.loc 1 2989 0
 1971 001c 0F4A     		ldr	r2, .L175+12
 1972 001e 1278     		ldrb	r2, [r2]
 1973 0020 1206     		lsl	r2, r2, #24
 1974 0022 1343     		orr	r3, r2
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 90


 1975 0024 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1976              		.loc 1 2991 0
 1977 0026 0E4B     		ldr	r3, .L175+16
 1978 0028 1B78     		ldrb	r3, [r3]
 1979 002a DAB2     		uxtb	r2, r3
 1980 002c 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1981              		.loc 1 2992 0
 1982 002e 0D4B     		ldr	r3, .L175+20
 1983 0030 1B78     		ldrb	r3, [r3]
 1984 0032 1B02     		lsl	r3, r3, #8
 1985 0034 1343     		orr	r3, r2
 1986 0036 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1987              		.loc 1 2993 0
 1988 0038 0B4A     		ldr	r2, .L175+24
 1989 003a 1278     		ldrb	r2, [r2]
 1990 003c 1204     		lsl	r2, r2, #16
 1991 003e 1343     		orr	r3, r2
 1992 0040 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1993              		.loc 1 2994 0
 1994 0042 0A4A     		ldr	r2, .L175+28
 1995 0044 1278     		ldrb	r2, [r2]
 1996 0046 1206     		lsl	r2, r2, #24
 1997 0048 1343     		orr	r3, r2
 1998 004a 4360     		str	r3, [r0, #4]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 1999              		.loc 1 3006 0
 2000              		@ sp needed
 2001 004c 7047     		bx	lr
 2002              	.L176:
 2003 004e C046     		.align	2
 2004              	.L175:
 2005 0050 78F1FF0F 		.word	268431736
 2006 0054 79F1FF0F 		.word	268431737
 2007 0058 7AF1FF0F 		.word	268431738
 2008 005c 7BF1FF0F 		.word	268431739
 2009 0060 7CF1FF0F 		.word	268431740
 2010 0064 7DF1FF0F 		.word	268431741
 2011 0068 7EF1FF0F 		.word	268431742
 2012 006c 7FF1FF0F 		.word	268431743
 2013              		.cfi_endproc
 2014              	.LFE52:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 91


 2015              		.size	CyGetUniqueId, .-CyGetUniqueId
 2016              		.global	CySysClkPumpConfig
 2017              		.global	cyImoFreqMhz2Reg
 2018              		.global	CySysTickInitVar
 2019              		.global	cydelay32kMs
 2020              		.global	cydelayFreqMhz
 2021              		.global	cydelayFreqKhz
 2022              		.global	cydelayFreqHz
 2023              		.section	.rodata
 2024              		.align	2
 2025              		.set	.LANCHOR1,. + 0
 2026              		.type	cyImoFreqMhz2Reg, %object
 2027              		.size	cyImoFreqMhz2Reg, 46
 2028              	cyImoFreqMhz2Reg:
 2029 0000 03       		.byte	3
 2030 0001 04       		.byte	4
 2031 0002 05       		.byte	5
 2032 0003 06       		.byte	6
 2033 0004 07       		.byte	7
 2034 0005 08       		.byte	8
 2035 0006 09       		.byte	9
 2036 0007 0A       		.byte	10
 2037 0008 0B       		.byte	11
 2038 0009 0C       		.byte	12
 2039 000a 0E       		.byte	14
 2040 000b 0F       		.byte	15
 2041 000c 10       		.byte	16
 2042 000d 11       		.byte	17
 2043 000e 12       		.byte	18
 2044 000f 13       		.byte	19
 2045 0010 14       		.byte	20
 2046 0011 15       		.byte	21
 2047 0012 16       		.byte	22
 2048 0013 17       		.byte	23
 2049 0014 18       		.byte	24
 2050 0015 19       		.byte	25
 2051 0016 1B       		.byte	27
 2052 0017 1C       		.byte	28
 2053 0018 1D       		.byte	29
 2054 0019 1E       		.byte	30
 2055 001a 1F       		.byte	31
 2056 001b 20       		.byte	32
 2057 001c 21       		.byte	33
 2058 001d 22       		.byte	34
 2059 001e 23       		.byte	35
 2060 001f 25       		.byte	37
 2061 0020 26       		.byte	38
 2062 0021 27       		.byte	39
 2063 0022 28       		.byte	40
 2064 0023 29       		.byte	41
 2065 0024 2A       		.byte	42
 2066 0025 2B       		.byte	43
 2067 0026 2E       		.byte	46
 2068 0027 2F       		.byte	47
 2069 0028 30       		.byte	48
 2070 0029 31       		.byte	49
 2071 002a 32       		.byte	50
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 92


 2072 002b 33       		.byte	51
 2073 002c 34       		.byte	52
 2074 002d 35       		.byte	53
 2075 002e 0000     		.data
 2076              		.align	2
 2077              		.set	.LANCHOR0,. + 0
 2078              		.type	CySysClkPumpConfig, %object
 2079              		.size	CySysClkPumpConfig, 4
 2080              	CySysClkPumpConfig:
 2081 0000 01000000 		.word	1
 2082              		.type	cydelay32kMs, %object
 2083              		.size	cydelay32kMs, 4
 2084              	cydelay32kMs:
 2085 0004 0000C05D 		.word	1572864000
 2086              		.type	cydelayFreqKhz, %object
 2087              		.size	cydelayFreqKhz, 4
 2088              	cydelayFreqKhz:
 2089 0008 80BB0000 		.word	48000
 2090              		.type	cydelayFreqMhz, %object
 2091              		.size	cydelayFreqMhz, 1
 2092              	cydelayFreqMhz:
 2093 000c 30       		.byte	48
 2094 000d 000000   		.space	3
 2095              		.type	cydelayFreqHz, %object
 2096              		.size	cydelayFreqHz, 4
 2097              	cydelayFreqHz:
 2098 0010 006CDC02 		.word	48000000
 2099              		.bss
 2100              		.align	2
 2101              		.set	.LANCHOR2,. + 0
 2102              		.type	CySysTickCallbacks, %object
 2103              		.size	CySysTickCallbacks, 20
 2104              	CySysTickCallbacks:
 2105 0000 00000000 		.space	20
 2105      00000000 
 2105      00000000 
 2105      00000000 
 2105      00000000 
 2106              		.type	CySysTickInitVar, %object
 2107              		.size	CySysTickInitVar, 4
 2108              	CySysTickInitVar:
 2109 0014 00000000 		.space	4
 2110              		.text
 2111              	.Letext0:
 2112              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2113              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2114              		.section	.debug_info,"",%progbits
 2115              	.Ldebug_info0:
 2116 0000 D70B0000 		.4byte	0xbd7
 2117 0004 0400     		.2byte	0x4
 2118 0006 00000000 		.4byte	.Ldebug_abbrev0
 2119 000a 04       		.byte	0x4
 2120 000b 01       		.uleb128 0x1
 2121 000c D4030000 		.4byte	.LASF108
 2122 0010 01       		.byte	0x1
 2123 0011 C9060000 		.4byte	.LASF109
 2124 0015 82050000 		.4byte	.LASF110
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 93


 2125 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2126 001d 00000000 		.4byte	0
 2127 0021 00000000 		.4byte	.Ldebug_line0
 2128 0025 02       		.uleb128 0x2
 2129 0026 01       		.byte	0x1
 2130 0027 06       		.byte	0x6
 2131 0028 DB000000 		.4byte	.LASF0
 2132 002c 02       		.uleb128 0x2
 2133 002d 01       		.byte	0x1
 2134 002e 08       		.byte	0x8
 2135 002f FE040000 		.4byte	.LASF1
 2136 0033 02       		.uleb128 0x2
 2137 0034 02       		.byte	0x2
 2138 0035 05       		.byte	0x5
 2139 0036 0C050000 		.4byte	.LASF2
 2140 003a 02       		.uleb128 0x2
 2141 003b 02       		.byte	0x2
 2142 003c 07       		.byte	0x7
 2143 003d BF020000 		.4byte	.LASF3
 2144 0041 02       		.uleb128 0x2
 2145 0042 04       		.byte	0x4
 2146 0043 05       		.byte	0x5
 2147 0044 1A010000 		.4byte	.LASF4
 2148 0048 02       		.uleb128 0x2
 2149 0049 04       		.byte	0x4
 2150 004a 07       		.byte	0x7
 2151 004b 32020000 		.4byte	.LASF5
 2152 004f 02       		.uleb128 0x2
 2153 0050 08       		.byte	0x8
 2154 0051 05       		.byte	0x5
 2155 0052 CD000000 		.4byte	.LASF6
 2156 0056 02       		.uleb128 0x2
 2157 0057 08       		.byte	0x8
 2158 0058 07       		.byte	0x7
 2159 0059 67000000 		.4byte	.LASF7
 2160 005d 03       		.uleb128 0x3
 2161 005e 04       		.byte	0x4
 2162 005f 05       		.byte	0x5
 2163 0060 696E7400 		.ascii	"int\000"
 2164 0064 02       		.uleb128 0x2
 2165 0065 04       		.byte	0x4
 2166 0066 07       		.byte	0x7
 2167 0067 16020000 		.4byte	.LASF8
 2168 006b 04       		.uleb128 0x4
 2169 006c 3A010000 		.4byte	.LASF9
 2170 0070 02       		.byte	0x2
 2171 0071 B901     		.2byte	0x1b9
 2172 0073 2C000000 		.4byte	0x2c
 2173 0077 04       		.uleb128 0x4
 2174 0078 0F000000 		.4byte	.LASF10
 2175 007c 02       		.byte	0x2
 2176 007d BA01     		.2byte	0x1ba
 2177 007f 3A000000 		.4byte	0x3a
 2178 0083 04       		.uleb128 0x4
 2179 0084 7A010000 		.4byte	.LASF11
 2180 0088 02       		.byte	0x2
 2181 0089 BB01     		.2byte	0x1bb
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 94


 2182 008b 48000000 		.4byte	0x48
 2183 008f 02       		.uleb128 0x2
 2184 0090 04       		.byte	0x4
 2185 0091 04       		.byte	0x4
 2186 0092 81040000 		.4byte	.LASF12
 2187 0096 02       		.uleb128 0x2
 2188 0097 08       		.byte	0x8
 2189 0098 04       		.byte	0x4
 2190 0099 56010000 		.4byte	.LASF13
 2191 009d 02       		.uleb128 0x2
 2192 009e 01       		.byte	0x1
 2193 009f 08       		.byte	0x8
 2194 00a0 60050000 		.4byte	.LASF14
 2195 00a4 04       		.uleb128 0x4
 2196 00a5 AF060000 		.4byte	.LASF15
 2197 00a9 02       		.byte	0x2
 2198 00aa 5B02     		.2byte	0x25b
 2199 00ac 48000000 		.4byte	0x48
 2200 00b0 04       		.uleb128 0x4
 2201 00b1 E8040000 		.4byte	.LASF16
 2202 00b5 02       		.byte	0x2
 2203 00b6 6302     		.2byte	0x263
 2204 00b8 BC000000 		.4byte	0xbc
 2205 00bc 05       		.uleb128 0x5
 2206 00bd 6B000000 		.4byte	0x6b
 2207 00c1 04       		.uleb128 0x4
 2208 00c2 45030000 		.4byte	.LASF17
 2209 00c6 02       		.byte	0x2
 2210 00c7 6502     		.2byte	0x265
 2211 00c9 CD000000 		.4byte	0xcd
 2212 00cd 05       		.uleb128 0x5
 2213 00ce 83000000 		.4byte	0x83
 2214 00d2 04       		.uleb128 0x4
 2215 00d3 65050000 		.4byte	.LASF18
 2216 00d7 02       		.byte	0x2
 2217 00d8 7502     		.2byte	0x275
 2218 00da DE000000 		.4byte	0xde
 2219 00de 06       		.uleb128 0x6
 2220 00df 04       		.byte	0x4
 2221 00e0 E4000000 		.4byte	0xe4
 2222 00e4 07       		.uleb128 0x7
 2223 00e5 02       		.uleb128 0x2
 2224 00e6 04       		.byte	0x4
 2225 00e7 07       		.byte	0x7
 2226 00e8 67030000 		.4byte	.LASF19
 2227 00ec 08       		.uleb128 0x8
 2228 00ed AC040000 		.4byte	.LASF20
 2229 00f1 03       		.byte	0x3
 2230 00f2 F5       		.byte	0xf5
 2231 00f3 DE000000 		.4byte	0xde
 2232 00f7 09       		.uleb128 0x9
 2233 00f8 83000000 		.4byte	0x83
 2234 00fc 07010000 		.4byte	0x107
 2235 0100 0A       		.uleb128 0xa
 2236 0101 E5000000 		.4byte	0xe5
 2237 0105 03       		.byte	0x3
 2238 0106 00       		.byte	0
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 95


 2239 0107 0B       		.uleb128 0xb
 2240 0108 B8060000 		.4byte	.LASF21
 2241 010c 01       		.byte	0x1
 2242 010d 6B       		.byte	0x6b
 2243 010e 00000000 		.4byte	.LFB2
 2244 0112 14000000 		.4byte	.LFE2-.LFB2
 2245 0116 01       		.uleb128 0x1
 2246 0117 9C       		.byte	0x9c
 2247 0118 0B       		.uleb128 0xb
 2248 0119 5F020000 		.4byte	.LASF22
 2249 011d 01       		.byte	0x1
 2250 011e 8B       		.byte	0x8b
 2251 011f 00000000 		.4byte	.LFB3
 2252 0123 10000000 		.4byte	.LFE3-.LFB3
 2253 0127 01       		.uleb128 0x1
 2254 0128 9C       		.byte	0x9c
 2255 0129 0C       		.uleb128 0xc
 2256 012a 1F000000 		.4byte	.LASF25
 2257 012e 01       		.byte	0x1
 2258 012f AD01     		.2byte	0x1ad
 2259 0131 00000000 		.4byte	.LFB4
 2260 0135 20000000 		.4byte	.LFE4-.LFB4
 2261 0139 01       		.uleb128 0x1
 2262 013a 9C       		.byte	0x9c
 2263 013b 82010000 		.4byte	0x182
 2264 013f 0D       		.uleb128 0xd
 2265 0140 34050000 		.4byte	.LASF27
 2266 0144 01       		.byte	0x1
 2267 0145 AD01     		.2byte	0x1ad
 2268 0147 83000000 		.4byte	0x83
 2269 014b 00000000 		.4byte	.LLST0
 2270 014f 0E       		.uleb128 0xe
 2271 0150 F8000000 		.4byte	.LASF23
 2272 0154 01       		.byte	0x1
 2273 0155 AF01     		.2byte	0x1af
 2274 0157 6B000000 		.4byte	0x6b
 2275 015b 2C000000 		.4byte	.LLST1
 2276 015f 0E       		.uleb128 0xe
 2277 0160 F5060000 		.4byte	.LASF24
 2278 0164 01       		.byte	0x1
 2279 0165 B001     		.2byte	0x1b0
 2280 0167 83000000 		.4byte	0x83
 2281 016b 3F000000 		.4byte	.LLST2
 2282 016f 0F       		.uleb128 0xf
 2283 0170 08000000 		.4byte	.LVL1
 2284 0174 B10B0000 		.4byte	0xbb1
 2285 0178 0F       		.uleb128 0xf
 2286 0179 1A000000 		.4byte	.LVL4
 2287 017d BC0B0000 		.4byte	0xbbc
 2288 0181 00       		.byte	0
 2289 0182 0C       		.uleb128 0xc
 2290 0183 30030000 		.4byte	.LASF26
 2291 0187 01       		.byte	0x1
 2292 0188 D901     		.2byte	0x1d9
 2293 018a 00000000 		.4byte	.LFB5
 2294 018e 38000000 		.4byte	.LFE5-.LFB5
 2295 0192 01       		.uleb128 0x1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 96


 2296 0193 9C       		.byte	0x9c
 2297 0194 A7010000 		.4byte	0x1a7
 2298 0198 10       		.uleb128 0x10
 2299 0199 4F010000 		.4byte	.LASF28
 2300 019d 01       		.byte	0x1
 2301 019e D901     		.2byte	0x1d9
 2302 01a0 83000000 		.4byte	0x83
 2303 01a4 01       		.uleb128 0x1
 2304 01a5 50       		.byte	0x50
 2305 01a6 00       		.byte	0
 2306 01a7 11       		.uleb128 0x11
 2307 01a8 9C010000 		.4byte	.LASF37
 2308 01ac 01       		.byte	0x1
 2309 01ad FE01     		.2byte	0x1fe
 2310 01af 83000000 		.4byte	0x83
 2311 01b3 00000000 		.4byte	.LFB6
 2312 01b7 1C000000 		.4byte	.LFE6-.LFB6
 2313 01bb 01       		.uleb128 0x1
 2314 01bc 9C       		.byte	0x9c
 2315 01bd F4010000 		.4byte	0x1f4
 2316 01c1 0E       		.uleb128 0xe
 2317 01c2 F8000000 		.4byte	.LASF23
 2318 01c6 01       		.byte	0x1
 2319 01c7 0002     		.2byte	0x200
 2320 01c9 6B000000 		.4byte	0x6b
 2321 01cd 5D000000 		.4byte	.LLST3
 2322 01d1 0E       		.uleb128 0xe
 2323 01d2 9B030000 		.4byte	.LASF29
 2324 01d6 01       		.byte	0x1
 2325 01d7 0102     		.2byte	0x201
 2326 01d9 83000000 		.4byte	0x83
 2327 01dd 70000000 		.4byte	.LLST4
 2328 01e1 0F       		.uleb128 0xf
 2329 01e2 06000000 		.4byte	.LVL7
 2330 01e6 B10B0000 		.4byte	0xbb1
 2331 01ea 0F       		.uleb128 0xf
 2332 01eb 12000000 		.4byte	.LVL9
 2333 01ef BC0B0000 		.4byte	0xbbc
 2334 01f3 00       		.byte	0
 2335 01f4 0C       		.uleb128 0xc
 2336 01f5 CA050000 		.4byte	.LASF30
 2337 01f9 01       		.byte	0x1
 2338 01fa 3502     		.2byte	0x235
 2339 01fc 00000000 		.4byte	.LFB7
 2340 0200 28000000 		.4byte	.LFE7-.LFB7
 2341 0204 01       		.uleb128 0x1
 2342 0205 9C       		.byte	0x9c
 2343 0206 3D020000 		.4byte	0x23d
 2344 020a 0D       		.uleb128 0xd
 2345 020b 93060000 		.4byte	.LASF31
 2346 020f 01       		.byte	0x1
 2347 0210 3502     		.2byte	0x235
 2348 0212 83000000 		.4byte	0x83
 2349 0216 8E000000 		.4byte	.LLST5
 2350 021a 0E       		.uleb128 0xe
 2351 021b F8000000 		.4byte	.LASF23
 2352 021f 01       		.byte	0x1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 97


 2353 0220 3702     		.2byte	0x237
 2354 0222 6B000000 		.4byte	0x6b
 2355 0226 BA000000 		.4byte	.LLST6
 2356 022a 0F       		.uleb128 0xf
 2357 022b 08000000 		.4byte	.LVL12
 2358 022f B10B0000 		.4byte	0xbb1
 2359 0233 0F       		.uleb128 0xf
 2360 0234 1E000000 		.4byte	.LVL14
 2361 0238 BC0B0000 		.4byte	0xbbc
 2362 023c 00       		.byte	0
 2363 023d 0C       		.uleb128 0xc
 2364 023e 09030000 		.4byte	.LASF32
 2365 0242 01       		.byte	0x1
 2366 0243 6F02     		.2byte	0x26f
 2367 0245 00000000 		.4byte	.LFB8
 2368 0249 64000000 		.4byte	.LFE8-.LFB8
 2369 024d 01       		.uleb128 0x1
 2370 024e 9C       		.byte	0x9c
 2371 024f A4020000 		.4byte	0x2a4
 2372 0253 0D       		.uleb128 0xd
 2373 0254 E7000000 		.4byte	.LASF33
 2374 0258 01       		.byte	0x1
 2375 0259 6F02     		.2byte	0x26f
 2376 025b 83000000 		.4byte	0x83
 2377 025f CD000000 		.4byte	.LLST7
 2378 0263 12       		.uleb128 0x12
 2379 0264 7E000000 		.4byte	.LASF34
 2380 0268 01       		.byte	0x1
 2381 0269 7202     		.2byte	0x272
 2382 026b B4020000 		.4byte	0x2b4
 2383 026f 02       		.uleb128 0x2
 2384 0270 91       		.byte	0x91
 2385 0271 70       		.sleb128 -16
 2386 0272 12       		.uleb128 0x12
 2387 0273 30010000 		.4byte	.LASF35
 2388 0277 01       		.byte	0x1
 2389 0278 7302     		.2byte	0x273
 2390 027a B9020000 		.4byte	0x2b9
 2391 027e 02       		.uleb128 0x2
 2392 027f 91       		.byte	0x91
 2393 0280 60       		.sleb128 -32
 2394 0281 0E       		.uleb128 0xe
 2395 0282 F8000000 		.4byte	.LASF23
 2396 0286 01       		.byte	0x1
 2397 0287 8402     		.2byte	0x284
 2398 0289 6B000000 		.4byte	0x6b
 2399 028d 06010000 		.4byte	.LLST8
 2400 0291 0F       		.uleb128 0xf
 2401 0292 0A000000 		.4byte	.LVL16
 2402 0296 B10B0000 		.4byte	0xbb1
 2403 029a 0F       		.uleb128 0xf
 2404 029b 3E000000 		.4byte	.LVL18
 2405 029f BC0B0000 		.4byte	0xbbc
 2406 02a3 00       		.byte	0
 2407 02a4 09       		.uleb128 0x9
 2408 02a5 83000000 		.4byte	0x83
 2409 02a9 B4020000 		.4byte	0x2b4
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 98


 2410 02ad 0A       		.uleb128 0xa
 2411 02ae E5000000 		.4byte	0xe5
 2412 02b2 01       		.byte	0x1
 2413 02b3 00       		.byte	0
 2414 02b4 05       		.uleb128 0x5
 2415 02b5 A4020000 		.4byte	0x2a4
 2416 02b9 05       		.uleb128 0x5
 2417 02ba F7000000 		.4byte	0xf7
 2418 02be 13       		.uleb128 0x13
 2419 02bf 6B060000 		.4byte	.LASF36
 2420 02c3 01       		.byte	0x1
 2421 02c4 9104     		.2byte	0x491
 2422 02c6 00000000 		.4byte	.LFB10
 2423 02ca 24000000 		.4byte	.LFE10-.LFB10
 2424 02ce 01       		.uleb128 0x1
 2425 02cf 9C       		.byte	0x9c
 2426 02d0 11       		.uleb128 0x11
 2427 02d1 81010000 		.4byte	.LASF38
 2428 02d5 01       		.byte	0x1
 2429 02d6 B304     		.2byte	0x4b3
 2430 02d8 83000000 		.4byte	0x83
 2431 02dc 00000000 		.4byte	.LFB11
 2432 02e0 10000000 		.4byte	.LFE11-.LFB11
 2433 02e4 01       		.uleb128 0x1
 2434 02e5 9C       		.byte	0x9c
 2435 02e6 F9020000 		.4byte	0x2f9
 2436 02ea 12       		.uleb128 0x12
 2437 02eb 29070000 		.4byte	.LASF39
 2438 02ef 01       		.byte	0x1
 2439 02f0 B504     		.2byte	0x4b5
 2440 02f2 83000000 		.4byte	0x83
 2441 02f6 01       		.uleb128 0x1
 2442 02f7 50       		.byte	0x50
 2443 02f8 00       		.byte	0
 2444 02f9 13       		.uleb128 0x13
 2445 02fa 4C060000 		.4byte	.LASF40
 2446 02fe 01       		.byte	0x1
 2447 02ff 6408     		.2byte	0x864
 2448 0301 00000000 		.4byte	.LFB14
 2449 0305 20000000 		.4byte	.LFE14-.LFB14
 2450 0309 01       		.uleb128 0x1
 2451 030a 9C       		.byte	0x9c
 2452 030b 14       		.uleb128 0x14
 2453 030c 44020000 		.4byte	.LASF84
 2454 0310 01       		.byte	0x1
 2455 0311 7608     		.2byte	0x876
 2456 0313 83000000 		.4byte	0x83
 2457 0317 00000000 		.4byte	.LFB15
 2458 031b 10000000 		.4byte	.LFE15-.LFB15
 2459 031f 01       		.uleb128 0x1
 2460 0320 9C       		.byte	0x9c
 2461 0321 13       		.uleb128 0x13
 2462 0322 63010000 		.4byte	.LASF41
 2463 0326 01       		.byte	0x1
 2464 0327 8608     		.2byte	0x886
 2465 0329 00000000 		.4byte	.LFB16
 2466 032d 0C000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 99


 2467 0331 01       		.uleb128 0x1
 2468 0332 9C       		.byte	0x9c
 2469 0333 11       		.uleb128 0x11
 2470 0334 AB020000 		.4byte	.LASF42
 2471 0338 01       		.byte	0x1
 2472 0339 A008     		.2byte	0x8a0
 2473 033b 83000000 		.4byte	0x83
 2474 033f 00000000 		.4byte	.LFB17
 2475 0343 14000000 		.4byte	.LFE17-.LFB17
 2476 0347 01       		.uleb128 0x1
 2477 0348 9C       		.byte	0x9c
 2478 0349 6C030000 		.4byte	0x36c
 2479 034d 0D       		.uleb128 0xd
 2480 034e 59050000 		.4byte	.LASF43
 2481 0352 01       		.byte	0x1
 2482 0353 A008     		.2byte	0x8a0
 2483 0355 83000000 		.4byte	0x83
 2484 0359 19010000 		.4byte	.LLST9
 2485 035d 12       		.uleb128 0x12
 2486 035e 5A030000 		.4byte	.LASF44
 2487 0362 01       		.byte	0x1
 2488 0363 A208     		.2byte	0x8a2
 2489 0365 83000000 		.4byte	0x83
 2490 0369 01       		.uleb128 0x1
 2491 036a 50       		.byte	0x50
 2492 036b 00       		.byte	0
 2493 036c 11       		.uleb128 0x11
 2494 036d 59000000 		.4byte	.LASF45
 2495 0371 01       		.byte	0x1
 2496 0372 B708     		.2byte	0x8b7
 2497 0374 83000000 		.4byte	0x83
 2498 0378 00000000 		.4byte	.LFB18
 2499 037c 10000000 		.4byte	.LFE18-.LFB18
 2500 0380 01       		.uleb128 0x1
 2501 0381 9C       		.byte	0x9c
 2502 0382 95030000 		.4byte	0x395
 2503 0386 12       		.uleb128 0x12
 2504 0387 16000000 		.4byte	.LASF46
 2505 038b 01       		.byte	0x1
 2506 038c B908     		.2byte	0x8b9
 2507 038e 83000000 		.4byte	0x83
 2508 0392 01       		.uleb128 0x1
 2509 0393 50       		.byte	0x50
 2510 0394 00       		.byte	0
 2511 0395 0C       		.uleb128 0xc
 2512 0396 89000000 		.4byte	.LASF47
 2513 039a 01       		.byte	0x1
 2514 039b CE08     		.2byte	0x8ce
 2515 039d 00000000 		.4byte	.LFB19
 2516 03a1 0C000000 		.4byte	.LFE19-.LFB19
 2517 03a5 01       		.uleb128 0x1
 2518 03a6 9C       		.byte	0x9c
 2519 03a7 BA030000 		.4byte	0x3ba
 2520 03ab 10       		.uleb128 0x10
 2521 03ac 97010000 		.4byte	.LASF48
 2522 03b0 01       		.byte	0x1
 2523 03b1 CE08     		.2byte	0x8ce
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 100


 2524 03b3 83000000 		.4byte	0x83
 2525 03b7 01       		.uleb128 0x1
 2526 03b8 50       		.byte	0x50
 2527 03b9 00       		.byte	0
 2528 03ba 0C       		.uleb128 0xc
 2529 03bb 16050000 		.4byte	.LASF49
 2530 03bf 01       		.byte	0x1
 2531 03c0 8509     		.2byte	0x985
 2532 03c2 00000000 		.4byte	.LFB26
 2533 03c6 14000000 		.4byte	.LFE26-.LFB26
 2534 03ca 01       		.uleb128 0x1
 2535 03cb 9C       		.byte	0x9c
 2536 03cc E1030000 		.4byte	0x3e1
 2537 03d0 0D       		.uleb128 0xd
 2538 03d1 F9020000 		.4byte	.LASF50
 2539 03d5 01       		.byte	0x1
 2540 03d6 8509     		.2byte	0x985
 2541 03d8 6B000000 		.4byte	0x6b
 2542 03dc 37010000 		.4byte	.LLST10
 2543 03e0 00       		.byte	0
 2544 03e1 11       		.uleb128 0x11
 2545 03e2 BF000000 		.4byte	.LASF51
 2546 03e6 01       		.byte	0x1
 2547 03e7 9709     		.2byte	0x997
 2548 03e9 6B000000 		.4byte	0x6b
 2549 03ed 00000000 		.4byte	.LFB27
 2550 03f1 18000000 		.4byte	.LFE27-.LFB27
 2551 03f5 01       		.uleb128 0x1
 2552 03f6 9C       		.byte	0x9c
 2553 03f7 0C040000 		.4byte	0x40c
 2554 03fb 0D       		.uleb128 0xd
 2555 03fc F9020000 		.4byte	.LASF50
 2556 0400 01       		.byte	0x1
 2557 0401 9709     		.2byte	0x997
 2558 0403 6B000000 		.4byte	0x6b
 2559 0407 58010000 		.4byte	.LLST11
 2560 040b 00       		.byte	0
 2561 040c 0C       		.uleb128 0xc
 2562 040d 23010000 		.4byte	.LASF52
 2563 0411 01       		.byte	0x1
 2564 0412 A709     		.2byte	0x9a7
 2565 0414 00000000 		.4byte	.LFB28
 2566 0418 14000000 		.4byte	.LFE28-.LFB28
 2567 041c 01       		.uleb128 0x1
 2568 041d 9C       		.byte	0x9c
 2569 041e 33040000 		.4byte	0x433
 2570 0422 0D       		.uleb128 0xd
 2571 0423 F9020000 		.4byte	.LASF50
 2572 0427 01       		.byte	0x1
 2573 0428 A709     		.2byte	0x9a7
 2574 042a 6B000000 		.4byte	0x6b
 2575 042e 79010000 		.4byte	.LLST12
 2576 0432 00       		.byte	0
 2577 0433 0C       		.uleb128 0xc
 2578 0434 86020000 		.4byte	.LASF53
 2579 0438 01       		.byte	0x1
 2580 0439 B509     		.2byte	0x9b5
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 101


 2581 043b 00000000 		.4byte	.LFB29
 2582 043f 14000000 		.4byte	.LFE29-.LFB29
 2583 0443 01       		.uleb128 0x1
 2584 0444 9C       		.byte	0x9c
 2585 0445 5A040000 		.4byte	0x45a
 2586 0449 0D       		.uleb128 0xd
 2587 044a F9020000 		.4byte	.LASF50
 2588 044e 01       		.byte	0x1
 2589 044f B509     		.2byte	0x9b5
 2590 0451 6B000000 		.4byte	0x6b
 2591 0455 9A010000 		.4byte	.LLST13
 2592 0459 00       		.byte	0
 2593 045a 0C       		.uleb128 0xc
 2594 045b 81030000 		.4byte	.LASF54
 2595 045f 01       		.byte	0x1
 2596 0460 C409     		.2byte	0x9c4
 2597 0462 00000000 		.4byte	.LFB30
 2598 0466 14000000 		.4byte	.LFE30-.LFB30
 2599 046a 01       		.uleb128 0x1
 2600 046b 9C       		.byte	0x9c
 2601 046c 81040000 		.4byte	0x481
 2602 0470 0D       		.uleb128 0xd
 2603 0471 F9020000 		.4byte	.LASF50
 2604 0475 01       		.byte	0x1
 2605 0476 C409     		.2byte	0x9c4
 2606 0478 6B000000 		.4byte	0x6b
 2607 047c BB010000 		.4byte	.LLST14
 2608 0480 00       		.byte	0
 2609 0481 0C       		.uleb128 0xc
 2610 0482 F7040000 		.4byte	.LASF55
 2611 0486 01       		.byte	0x1
 2612 0487 D309     		.2byte	0x9d3
 2613 0489 00000000 		.4byte	.LFB31
 2614 048d 04000000 		.4byte	.LFE31-.LFB31
 2615 0491 01       		.uleb128 0x1
 2616 0492 9C       		.byte	0x9c
 2617 0493 A6040000 		.4byte	0x4a6
 2618 0497 10       		.uleb128 0x10
 2619 0498 59050000 		.4byte	.LASF43
 2620 049c 01       		.byte	0x1
 2621 049d D309     		.2byte	0x9d3
 2622 049f 6B000000 		.4byte	0x6b
 2623 04a3 01       		.uleb128 0x1
 2624 04a4 50       		.byte	0x50
 2625 04a5 00       		.byte	0
 2626 04a6 0C       		.uleb128 0xc
 2627 04a7 9B060000 		.4byte	.LASF56
 2628 04ab 01       		.byte	0x1
 2629 04ac E204     		.2byte	0x4e2
 2630 04ae 00000000 		.4byte	.LFB12
 2631 04b2 38000000 		.4byte	.LFE12-.LFB12
 2632 04b6 01       		.uleb128 0x1
 2633 04b7 9C       		.byte	0x9c
 2634 04b8 FE040000 		.4byte	0x4fe
 2635 04bc 0D       		.uleb128 0xd
 2636 04bd 93060000 		.4byte	.LASF31
 2637 04c1 01       		.byte	0x1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 102


 2638 04c2 E204     		.2byte	0x4e2
 2639 04c4 83000000 		.4byte	0x83
 2640 04c8 DC010000 		.4byte	.LLST15
 2641 04cc 0E       		.uleb128 0xe
 2642 04cd F8000000 		.4byte	.LASF23
 2643 04d1 01       		.byte	0x1
 2644 04d2 E404     		.2byte	0x4e4
 2645 04d4 6B000000 		.4byte	0x6b
 2646 04d8 2C020000 		.4byte	.LLST16
 2647 04dc 0F       		.uleb128 0xf
 2648 04dd 14000000 		.4byte	.LVL39
 2649 04e1 B10B0000 		.4byte	0xbb1
 2650 04e5 0F       		.uleb128 0xf
 2651 04e6 26000000 		.4byte	.LVL41
 2652 04ea BC0B0000 		.4byte	0xbbc
 2653 04ee 15       		.uleb128 0x15
 2654 04ef 2E000000 		.4byte	.LVL44
 2655 04f3 81040000 		.4byte	0x481
 2656 04f7 16       		.uleb128 0x16
 2657 04f8 01       		.uleb128 0x1
 2658 04f9 50       		.byte	0x50
 2659 04fa 01       		.uleb128 0x1
 2660 04fb 30       		.byte	0x30
 2661 04fc 00       		.byte	0
 2662 04fd 00       		.byte	0
 2663 04fe 11       		.uleb128 0x11
 2664 04ff 1E030000 		.4byte	.LASF57
 2665 0503 01       		.byte	0x1
 2666 0504 E708     		.2byte	0x8e7
 2667 0506 D2000000 		.4byte	0xd2
 2668 050a 00000000 		.4byte	.LFB20
 2669 050e 20000000 		.4byte	.LFE20-.LFB20
 2670 0512 01       		.uleb128 0x1
 2671 0513 9C       		.byte	0x9c
 2672 0514 66050000 		.4byte	0x566
 2673 0518 0D       		.uleb128 0xd
 2674 0519 F9020000 		.4byte	.LASF50
 2675 051d 01       		.byte	0x1
 2676 051e E708     		.2byte	0x8e7
 2677 0520 6B000000 		.4byte	0x6b
 2678 0524 3F020000 		.4byte	.LLST17
 2679 0528 0D       		.uleb128 0xd
 2680 0529 93030000 		.4byte	.LASF58
 2681 052d 01       		.byte	0x1
 2682 052e E708     		.2byte	0x8e7
 2683 0530 D2000000 		.4byte	0xd2
 2684 0534 60020000 		.4byte	.LLST18
 2685 0538 12       		.uleb128 0x12
 2686 0539 4B000000 		.4byte	.LASF59
 2687 053d 01       		.byte	0x1
 2688 053e E908     		.2byte	0x8e9
 2689 0540 D2000000 		.4byte	0xd2
 2690 0544 01       		.uleb128 0x1
 2691 0545 50       		.byte	0x50
 2692 0546 17       		.uleb128 0x17
 2693 0547 00000000 		.4byte	.LASF60
 2694 054b 01       		.byte	0x1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 103


 2695 054c EA08     		.2byte	0x8ea
 2696 054e 66050000 		.4byte	0x566
 2697 0552 00000020 		.4byte	0x20000000
 2698 0556 15       		.uleb128 0x15
 2699 0557 10000000 		.4byte	.LVL48
 2700 055b 81040000 		.4byte	0x481
 2701 055f 16       		.uleb128 0x16
 2702 0560 01       		.uleb128 0x1
 2703 0561 50       		.byte	0x50
 2704 0562 01       		.uleb128 0x1
 2705 0563 30       		.byte	0x30
 2706 0564 00       		.byte	0
 2707 0565 00       		.byte	0
 2708 0566 06       		.uleb128 0x6
 2709 0567 04       		.byte	0x4
 2710 0568 D2000000 		.4byte	0xd2
 2711 056c 11       		.uleb128 0x11
 2712 056d 22050000 		.4byte	.LASF61
 2713 0571 01       		.byte	0x1
 2714 0572 0909     		.2byte	0x909
 2715 0574 D2000000 		.4byte	0xd2
 2716 0578 00000000 		.4byte	.LFB21
 2717 057c 1C000000 		.4byte	.LFE21-.LFB21
 2718 0580 01       		.uleb128 0x1
 2719 0581 9C       		.byte	0x9c
 2720 0582 B6050000 		.4byte	0x5b6
 2721 0586 0D       		.uleb128 0xd
 2722 0587 F9020000 		.4byte	.LASF50
 2723 058b 01       		.byte	0x1
 2724 058c 0909     		.2byte	0x909
 2725 058e 6B000000 		.4byte	0x6b
 2726 0592 8C020000 		.4byte	.LLST19
 2727 0596 17       		.uleb128 0x17
 2728 0597 00000000 		.4byte	.LASF60
 2729 059b 01       		.byte	0x1
 2730 059c 0B09     		.2byte	0x90b
 2731 059e 66050000 		.4byte	0x566
 2732 05a2 00000020 		.4byte	0x20000000
 2733 05a6 15       		.uleb128 0x15
 2734 05a7 0E000000 		.4byte	.LVL54
 2735 05ab 81040000 		.4byte	0x481
 2736 05af 16       		.uleb128 0x16
 2737 05b0 01       		.uleb128 0x1
 2738 05b1 50       		.byte	0x50
 2739 05b2 01       		.uleb128 0x1
 2740 05b3 30       		.byte	0x30
 2741 05b4 00       		.byte	0
 2742 05b5 00       		.byte	0
 2743 05b6 11       		.uleb128 0x11
 2744 05b7 EA020000 		.4byte	.LASF62
 2745 05bb 01       		.byte	0x1
 2746 05bc 1F09     		.2byte	0x91f
 2747 05be D2000000 		.4byte	0xd2
 2748 05c2 00000000 		.4byte	.LFB22
 2749 05c6 24000000 		.4byte	.LFE22-.LFB22
 2750 05ca 01       		.uleb128 0x1
 2751 05cb 9C       		.byte	0x9c
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 104


 2752 05cc 1E060000 		.4byte	0x61e
 2753 05d0 0D       		.uleb128 0xd
 2754 05d1 F9020000 		.4byte	.LASF50
 2755 05d5 01       		.byte	0x1
 2756 05d6 1F09     		.2byte	0x91f
 2757 05d8 6B000000 		.4byte	0x6b
 2758 05dc AD020000 		.4byte	.LLST20
 2759 05e0 0D       		.uleb128 0xd
 2760 05e1 93030000 		.4byte	.LASF58
 2761 05e5 01       		.byte	0x1
 2762 05e6 1F09     		.2byte	0x91f
 2763 05e8 D2000000 		.4byte	0xd2
 2764 05ec CE020000 		.4byte	.LLST21
 2765 05f0 12       		.uleb128 0x12
 2766 05f1 4B000000 		.4byte	.LASF59
 2767 05f5 01       		.byte	0x1
 2768 05f6 2109     		.2byte	0x921
 2769 05f8 D2000000 		.4byte	0xd2
 2770 05fc 01       		.uleb128 0x1
 2771 05fd 50       		.byte	0x50
 2772 05fe 17       		.uleb128 0x17
 2773 05ff 00000000 		.4byte	.LASF60
 2774 0603 01       		.byte	0x1
 2775 0604 2209     		.2byte	0x922
 2776 0606 66050000 		.4byte	0x566
 2777 060a 00000020 		.4byte	0x20000000
 2778 060e 15       		.uleb128 0x15
 2779 060f 10000000 		.4byte	.LVL58
 2780 0613 81040000 		.4byte	0x481
 2781 0617 16       		.uleb128 0x16
 2782 0618 01       		.uleb128 0x1
 2783 0619 50       		.byte	0x50
 2784 061a 01       		.uleb128 0x1
 2785 061b 30       		.byte	0x30
 2786 061c 00       		.byte	0
 2787 061d 00       		.byte	0
 2788 061e 11       		.uleb128 0x11
 2789 061f BE040000 		.4byte	.LASF63
 2790 0623 01       		.byte	0x1
 2791 0624 3B09     		.2byte	0x93b
 2792 0626 D2000000 		.4byte	0xd2
 2793 062a 00000000 		.4byte	.LFB23
 2794 062e 20000000 		.4byte	.LFE23-.LFB23
 2795 0632 01       		.uleb128 0x1
 2796 0633 9C       		.byte	0x9c
 2797 0634 68060000 		.4byte	0x668
 2798 0638 0D       		.uleb128 0xd
 2799 0639 F9020000 		.4byte	.LASF50
 2800 063d 01       		.byte	0x1
 2801 063e 3B09     		.2byte	0x93b
 2802 0640 6B000000 		.4byte	0x6b
 2803 0644 FA020000 		.4byte	.LLST22
 2804 0648 17       		.uleb128 0x17
 2805 0649 00000000 		.4byte	.LASF60
 2806 064d 01       		.byte	0x1
 2807 064e 3D09     		.2byte	0x93d
 2808 0650 66050000 		.4byte	0x566
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 105


 2809 0654 00000020 		.4byte	0x20000000
 2810 0658 15       		.uleb128 0x15
 2811 0659 0E000000 		.4byte	.LVL64
 2812 065d 81040000 		.4byte	0x481
 2813 0661 16       		.uleb128 0x16
 2814 0662 01       		.uleb128 0x1
 2815 0663 50       		.byte	0x50
 2816 0664 01       		.uleb128 0x1
 2817 0665 30       		.byte	0x30
 2818 0666 00       		.byte	0
 2819 0667 00       		.byte	0
 2820 0668 0C       		.uleb128 0xc
 2821 0669 70040000 		.4byte	.LASF64
 2822 066d 01       		.byte	0x1
 2823 066e 4E09     		.2byte	0x94e
 2824 0670 00000000 		.4byte	.LFB24
 2825 0674 4C000000 		.4byte	.LFE24-.LFB24
 2826 0678 01       		.uleb128 0x1
 2827 0679 9C       		.byte	0x9c
 2828 067a 07070000 		.4byte	0x707
 2829 067e 0D       		.uleb128 0xd
 2830 067f F9020000 		.4byte	.LASF50
 2831 0683 01       		.byte	0x1
 2832 0684 4E09     		.2byte	0x94e
 2833 0686 6B000000 		.4byte	0x6b
 2834 068a 1B030000 		.4byte	.LLST23
 2835 068e 0D       		.uleb128 0xd
 2836 068f 00030000 		.4byte	.LASF65
 2837 0693 01       		.byte	0x1
 2838 0694 4E09     		.2byte	0x94e
 2839 0696 6B000000 		.4byte	0x6b
 2840 069a 3C030000 		.4byte	.LLST24
 2841 069e 0E       		.uleb128 0xe
 2842 069f F8000000 		.4byte	.LASF23
 2843 06a3 01       		.byte	0x1
 2844 06a4 5009     		.2byte	0x950
 2845 06a6 6B000000 		.4byte	0x6b
 2846 06aa 5D030000 		.4byte	.LLST25
 2847 06ae 0E       		.uleb128 0xe
 2848 06af 5D010000 		.4byte	.LASF66
 2849 06b3 01       		.byte	0x1
 2850 06b4 5109     		.2byte	0x951
 2851 06b6 83000000 		.4byte	0x83
 2852 06ba 70030000 		.4byte	.LLST26
 2853 06be 0E       		.uleb128 0xe
 2854 06bf E0010000 		.4byte	.LASF67
 2855 06c3 01       		.byte	0x1
 2856 06c4 5209     		.2byte	0x952
 2857 06c6 83000000 		.4byte	0x83
 2858 06ca 83030000 		.4byte	.LLST27
 2859 06ce 18       		.uleb128 0x18
 2860 06cf 10000000 		.4byte	.LVL67
 2861 06d3 81040000 		.4byte	0x481
 2862 06d7 E1060000 		.4byte	0x6e1
 2863 06db 16       		.uleb128 0x16
 2864 06dc 01       		.uleb128 0x1
 2865 06dd 50       		.byte	0x50
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 106


 2866 06de 01       		.uleb128 0x1
 2867 06df 30       		.byte	0x30
 2868 06e0 00       		.byte	0
 2869 06e1 18       		.uleb128 0x18
 2870 06e2 1A000000 		.4byte	.LVL68
 2871 06e6 81040000 		.4byte	0x481
 2872 06ea F4060000 		.4byte	0x6f4
 2873 06ee 16       		.uleb128 0x16
 2874 06ef 01       		.uleb128 0x1
 2875 06f0 50       		.byte	0x50
 2876 06f1 01       		.uleb128 0x1
 2877 06f2 30       		.byte	0x30
 2878 06f3 00       		.byte	0
 2879 06f4 0F       		.uleb128 0xf
 2880 06f5 26000000 		.4byte	.LVL70
 2881 06f9 B10B0000 		.4byte	0xbb1
 2882 06fd 0F       		.uleb128 0xf
 2883 06fe 44000000 		.4byte	.LVL75
 2884 0702 BC0B0000 		.4byte	0xbbc
 2885 0706 00       		.byte	0
 2886 0707 11       		.uleb128 0x11
 2887 0708 B4010000 		.4byte	.LASF68
 2888 070c 01       		.byte	0x1
 2889 070d 7009     		.2byte	0x970
 2890 070f 6B000000 		.4byte	0x6b
 2891 0713 00000000 		.4byte	.LFB25
 2892 0717 2C000000 		.4byte	.LFE25-.LFB25
 2893 071b 01       		.uleb128 0x1
 2894 071c 9C       		.byte	0x9c
 2895 071d 51070000 		.4byte	0x751
 2896 0721 0D       		.uleb128 0xd
 2897 0722 F9020000 		.4byte	.LASF50
 2898 0726 01       		.byte	0x1
 2899 0727 7009     		.2byte	0x970
 2900 0729 6B000000 		.4byte	0x6b
 2901 072d A1030000 		.4byte	.LLST28
 2902 0731 0E       		.uleb128 0xe
 2903 0732 00030000 		.4byte	.LASF65
 2904 0736 01       		.byte	0x1
 2905 0737 7209     		.2byte	0x972
 2906 0739 6B000000 		.4byte	0x6b
 2907 073d C2030000 		.4byte	.LLST29
 2908 0741 15       		.uleb128 0x15
 2909 0742 0E000000 		.4byte	.LVL79
 2910 0746 81040000 		.4byte	0x481
 2911 074a 16       		.uleb128 0x16
 2912 074b 01       		.uleb128 0x1
 2913 074c 50       		.byte	0x50
 2914 074d 01       		.uleb128 0x1
 2915 074e 30       		.byte	0x30
 2916 074f 00       		.byte	0
 2917 0750 00       		.byte	0
 2918 0751 13       		.uleb128 0x13
 2919 0752 96000000 		.4byte	.LASF69
 2920 0756 01       		.byte	0x1
 2921 0757 EB09     		.2byte	0x9eb
 2922 0759 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 107


 2923 075d 18000000 		.4byte	.LFE32-.LFB32
 2924 0761 01       		.uleb128 0x1
 2925 0762 9C       		.byte	0x9c
 2926 0763 0C       		.uleb128 0xc
 2927 0764 12060000 		.4byte	.LASF70
 2928 0768 01       		.byte	0x1
 2929 0769 FF09     		.2byte	0x9ff
 2930 076b 00000000 		.4byte	.LFB33
 2931 076f 30000000 		.4byte	.LFE33-.LFB33
 2932 0773 01       		.uleb128 0x1
 2933 0774 9C       		.byte	0x9c
 2934 0775 9C070000 		.4byte	0x79c
 2935 0779 0D       		.uleb128 0xd
 2936 077a CD040000 		.4byte	.LASF71
 2937 077e 01       		.byte	0x1
 2938 077f FF09     		.2byte	0x9ff
 2939 0781 83000000 		.4byte	0x83
 2940 0785 D5030000 		.4byte	.LLST30
 2941 0789 0F       		.uleb128 0xf
 2942 078a 0E000000 		.4byte	.LVL84
 2943 078e CD0B0000 		.4byte	0xbcd
 2944 0792 0F       		.uleb128 0xf
 2945 0793 26000000 		.4byte	.LVL86
 2946 0797 CD0B0000 		.4byte	0xbcd
 2947 079b 00       		.byte	0
 2948 079c 0C       		.uleb128 0xc
 2949 079d 4F050000 		.4byte	.LASF72
 2950 07a1 01       		.byte	0x1
 2951 07a2 160A     		.2byte	0xa16
 2952 07a4 00000000 		.4byte	.LFB34
 2953 07a8 14000000 		.4byte	.LFE34-.LFB34
 2954 07ac 01       		.uleb128 0x1
 2955 07ad 9C       		.byte	0x9c
 2956 07ae CC070000 		.4byte	0x7cc
 2957 07b2 0D       		.uleb128 0xd
 2958 07b3 E8060000 		.4byte	.LASF73
 2959 07b7 01       		.byte	0x1
 2960 07b8 160A     		.2byte	0xa16
 2961 07ba 77000000 		.4byte	0x77
 2962 07be F3030000 		.4byte	.LLST31
 2963 07c2 0F       		.uleb128 0xf
 2964 07c3 0C000000 		.4byte	.LVL90
 2965 07c7 CD0B0000 		.4byte	0xbcd
 2966 07cb 00       		.byte	0
 2967 07cc 11       		.uleb128 0x11
 2968 07cd 3E050000 		.4byte	.LASF74
 2969 07d1 01       		.byte	0x1
 2970 07d2 0304     		.2byte	0x403
 2971 07d4 A4000000 		.4byte	0xa4
 2972 07d8 00000000 		.4byte	.LFB9
 2973 07dc 54000000 		.4byte	.LFE9-.LFB9
 2974 07e0 01       		.uleb128 0x1
 2975 07e1 9C       		.byte	0x9c
 2976 07e2 23080000 		.4byte	0x823
 2977 07e6 0D       		.uleb128 0xd
 2978 07e7 89060000 		.4byte	.LASF75
 2979 07eb 01       		.byte	0x1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 108


 2980 07ec 0304     		.2byte	0x403
 2981 07ee 83000000 		.4byte	0x83
 2982 07f2 14040000 		.4byte	.LLST32
 2983 07f6 0E       		.uleb128 0xe
 2984 07f7 5A030000 		.4byte	.LASF44
 2985 07fb 01       		.byte	0x1
 2986 07fc 0504     		.2byte	0x405
 2987 07fe A4000000 		.4byte	0xa4
 2988 0802 32040000 		.4byte	.LLST33
 2989 0806 18       		.uleb128 0x18
 2990 0807 2E000000 		.4byte	.LVL94
 2991 080b 9C070000 		.4byte	0x79c
 2992 080f 19080000 		.4byte	0x819
 2993 0813 16       		.uleb128 0x16
 2994 0814 01       		.uleb128 0x1
 2995 0815 50       		.byte	0x50
 2996 0816 01       		.uleb128 0x1
 2997 0817 31       		.byte	0x31
 2998 0818 00       		.byte	0
 2999 0819 0F       		.uleb128 0xf
 3000 081a 32000000 		.4byte	.LVL95
 3001 081e D0020000 		.4byte	0x2d0
 3002 0822 00       		.byte	0
 3003 0823 0C       		.uleb128 0xc
 3004 0824 9D040000 		.4byte	.LASF76
 3005 0828 01       		.byte	0x1
 3006 0829 4608     		.2byte	0x846
 3007 082b 00000000 		.4byte	.LFB13
 3008 082f 44000000 		.4byte	.LFE13-.LFB13
 3009 0833 01       		.uleb128 0x1
 3010 0834 9C       		.byte	0x9c
 3011 0835 68080000 		.4byte	0x868
 3012 0839 0D       		.uleb128 0xd
 3013 083a ED040000 		.4byte	.LASF77
 3014 083e 01       		.byte	0x1
 3015 083f 4608     		.2byte	0x846
 3016 0841 83000000 		.4byte	0x83
 3017 0845 51040000 		.4byte	.LLST34
 3018 0849 18       		.uleb128 0x18
 3019 084a 2E000000 		.4byte	.LVL102
 3020 084e 9C070000 		.4byte	0x79c
 3021 0852 5E080000 		.4byte	0x85e
 3022 0856 16       		.uleb128 0x16
 3023 0857 01       		.uleb128 0x1
 3024 0858 50       		.byte	0x50
 3025 0859 03       		.uleb128 0x3
 3026 085a 0A       		.byte	0xa
 3027 085b E803     		.2byte	0x3e8
 3028 085d 00       		.byte	0
 3029 085e 0F       		.uleb128 0xf
 3030 085f 32000000 		.4byte	.LVL103
 3031 0863 21030000 		.4byte	0x321
 3032 0867 00       		.byte	0
 3033 0868 19       		.uleb128 0x19
 3034 0869 EC000000 		.4byte	.LASF78
 3035 086d 01       		.byte	0x1
 3036 086e 240A     		.2byte	0xa24
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 109


 3037 0870 00000000 		.4byte	.LFB35
 3038 0874 4C000000 		.4byte	.LFE35-.LFB35
 3039 0878 01       		.uleb128 0x1
 3040 0879 9C       		.byte	0x9c
 3041 087a 8F080000 		.4byte	0x88f
 3042 087e 0D       		.uleb128 0xd
 3043 087f E7000000 		.4byte	.LASF33
 3044 0883 01       		.byte	0x1
 3045 0884 240A     		.2byte	0xa24
 3046 0886 83000000 		.4byte	0x83
 3047 088a 7D040000 		.4byte	.LLST35
 3048 088e 00       		.byte	0
 3049 088f 13       		.uleb128 0x13
 3050 0890 7B060000 		.4byte	.LASF79
 3051 0894 01       		.byte	0x1
 3052 0895 910A     		.2byte	0xa91
 3053 0897 00000000 		.4byte	.LFB39
 3054 089b 10000000 		.4byte	.LFE39-.LFB39
 3055 089f 01       		.uleb128 0x1
 3056 08a0 9C       		.byte	0x9c
 3057 08a1 13       		.uleb128 0x13
 3058 08a2 A6000000 		.4byte	.LASF80
 3059 08a6 01       		.byte	0x1
 3060 08a7 A10A     		.2byte	0xaa1
 3061 08a9 00000000 		.4byte	.LFB40
 3062 08ad 10000000 		.4byte	.LFE40-.LFB40
 3063 08b1 01       		.uleb128 0x1
 3064 08b2 9C       		.byte	0x9c
 3065 08b3 0C       		.uleb128 0xc
 3066 08b4 72050000 		.4byte	.LASF81
 3067 08b8 01       		.byte	0x1
 3068 08b9 800A     		.2byte	0xa80
 3069 08bb 00000000 		.4byte	.LFB38
 3070 08bf 18000000 		.4byte	.LFE38-.LFB38
 3071 08c3 01       		.uleb128 0x1
 3072 08c4 9C       		.byte	0x9c
 3073 08c5 D3080000 		.4byte	0x8d3
 3074 08c9 0F       		.uleb128 0xf
 3075 08ca 06000000 		.4byte	.LVL108
 3076 08ce A1080000 		.4byte	0x8a1
 3077 08d2 00       		.byte	0
 3078 08d3 13       		.uleb128 0x13
 3079 08d4 32060000 		.4byte	.LASF82
 3080 08d8 01       		.byte	0x1
 3081 08d9 B10A     		.2byte	0xab1
 3082 08db 00000000 		.4byte	.LFB41
 3083 08df 10000000 		.4byte	.LFE41-.LFB41
 3084 08e3 01       		.uleb128 0x1
 3085 08e4 9C       		.byte	0x9c
 3086 08e5 0C       		.uleb128 0xc
 3087 08e6 FC060000 		.4byte	.LASF83
 3088 08ea 01       		.byte	0x1
 3089 08eb C20A     		.2byte	0xac2
 3090 08ed 00000000 		.4byte	.LFB42
 3091 08f1 10000000 		.4byte	.LFE42-.LFB42
 3092 08f5 01       		.uleb128 0x1
 3093 08f6 9C       		.byte	0x9c
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 110


 3094 08f7 0C090000 		.4byte	0x90c
 3095 08fb 0D       		.uleb128 0xd
 3096 08fc E0010000 		.4byte	.LASF67
 3097 0900 01       		.byte	0x1
 3098 0901 C20A     		.2byte	0xac2
 3099 0903 83000000 		.4byte	0x83
 3100 0907 9E040000 		.4byte	.LLST36
 3101 090b 00       		.byte	0
 3102 090c 14       		.uleb128 0x14
 3103 090d 07010000 		.4byte	.LASF85
 3104 0911 01       		.byte	0x1
 3105 0912 D20A     		.2byte	0xad2
 3106 0914 83000000 		.4byte	0x83
 3107 0918 00000000 		.4byte	.LFB43
 3108 091c 10000000 		.4byte	.LFE43-.LFB43
 3109 0920 01       		.uleb128 0x1
 3110 0921 9C       		.byte	0x9c
 3111 0922 14       		.uleb128 0x14
 3112 0923 C2030000 		.4byte	.LASF86
 3113 0927 01       		.byte	0x1
 3114 0928 E20A     		.2byte	0xae2
 3115 092a 83000000 		.4byte	0x83
 3116 092e 00000000 		.4byte	.LFB44
 3117 0932 10000000 		.4byte	.LFE44-.LFB44
 3118 0936 01       		.uleb128 0x1
 3119 0937 9C       		.byte	0x9c
 3120 0938 0C       		.uleb128 0xc
 3121 0939 D2020000 		.4byte	.LASF87
 3122 093d 01       		.byte	0x1
 3123 093e 020B     		.2byte	0xb02
 3124 0940 00000000 		.4byte	.LFB45
 3125 0944 20000000 		.4byte	.LFE45-.LFB45
 3126 0948 01       		.uleb128 0x1
 3127 0949 9C       		.byte	0x9c
 3128 094a 5D090000 		.4byte	0x95d
 3129 094e 10       		.uleb128 0x10
 3130 094f E6010000 		.4byte	.LASF88
 3131 0953 01       		.byte	0x1
 3132 0954 020B     		.2byte	0xb02
 3133 0956 83000000 		.4byte	0x83
 3134 095a 01       		.uleb128 0x1
 3135 095b 50       		.byte	0x50
 3136 095c 00       		.byte	0
 3137 095d 14       		.uleb128 0x14
 3138 095e 1A060000 		.4byte	.LASF89
 3139 0962 01       		.byte	0x1
 3140 0963 1B0B     		.2byte	0xb1b
 3141 0965 83000000 		.4byte	0x83
 3142 0969 00000000 		.4byte	.LFB46
 3143 096d 10000000 		.4byte	.LFE46-.LFB46
 3144 0971 01       		.uleb128 0x1
 3145 0972 9C       		.byte	0x9c
 3146 0973 14       		.uleb128 0x14
 3147 0974 00020000 		.4byte	.LASF90
 3148 0978 01       		.byte	0x1
 3149 0979 320B     		.2byte	0xb32
 3150 097b 83000000 		.4byte	0x83
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 111


 3151 097f 00000000 		.4byte	.LFB47
 3152 0983 10000000 		.4byte	.LFE47-.LFB47
 3153 0987 01       		.uleb128 0x1
 3154 0988 9C       		.byte	0x9c
 3155 0989 1A       		.uleb128 0x1a
 3156 098a 0F070000 		.4byte	.LASF111
 3157 098e 01       		.byte	0x1
 3158 098f 870B     		.2byte	0xb87
 3159 0991 00000000 		.4byte	.LFB51
 3160 0995 28000000 		.4byte	.LFE51-.LFB51
 3161 0999 01       		.uleb128 0x1
 3162 099a 9C       		.byte	0x9c
 3163 099b B7090000 		.4byte	0x9b7
 3164 099f 1B       		.uleb128 0x1b
 3165 09a0 6900     		.ascii	"i\000"
 3166 09a2 01       		.byte	0x1
 3167 09a3 890B     		.2byte	0xb89
 3168 09a5 83000000 		.4byte	0x83
 3169 09a9 BF040000 		.4byte	.LLST37
 3170 09ad 0F       		.uleb128 0xf
 3171 09ae 06000000 		.4byte	.LVL112
 3172 09b2 73090000 		.4byte	0x973
 3173 09b6 00       		.byte	0
 3174 09b7 13       		.uleb128 0x13
 3175 09b8 23020000 		.4byte	.LASF91
 3176 09bc 01       		.byte	0x1
 3177 09bd 3F0B     		.2byte	0xb3f
 3178 09bf 00000000 		.4byte	.LFB48
 3179 09c3 0C000000 		.4byte	.LFE48-.LFB48
 3180 09c7 01       		.uleb128 0x1
 3181 09c8 9C       		.byte	0x9c
 3182 09c9 19       		.uleb128 0x19
 3183 09ca D2010000 		.4byte	.LASF92
 3184 09ce 01       		.byte	0x1
 3185 09cf 610A     		.2byte	0xa61
 3186 09d1 00000000 		.4byte	.LFB37
 3187 09d5 4C000000 		.4byte	.LFE37-.LFB37
 3188 09d9 01       		.uleb128 0x1
 3189 09da 9C       		.byte	0x9c
 3190 09db 3E0A0000 		.4byte	0xa3e
 3191 09df 1B       		.uleb128 0x1b
 3192 09e0 6900     		.ascii	"i\000"
 3193 09e2 01       		.byte	0x1
 3194 09e3 630A     		.2byte	0xa63
 3195 09e5 83000000 		.4byte	0x83
 3196 09e9 DD040000 		.4byte	.LLST38
 3197 09ed 18       		.uleb128 0x18
 3198 09ee 1C000000 		.4byte	.LVL122
 3199 09f2 FE040000 		.4byte	0x4fe
 3200 09f6 090A0000 		.4byte	0xa09
 3201 09fa 16       		.uleb128 0x16
 3202 09fb 01       		.uleb128 0x1
 3203 09fc 51       		.byte	0x51
 3204 09fd 05       		.uleb128 0x5
 3205 09fe 03       		.byte	0x3
 3206 09ff 00000000 		.4byte	CySysTickServiceCallbacks
 3207 0a03 16       		.uleb128 0x16
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 112


 3208 0a04 01       		.uleb128 0x1
 3209 0a05 50       		.byte	0x50
 3210 0a06 01       		.uleb128 0x1
 3211 0a07 3F       		.byte	0x3f
 3212 0a08 00       		.byte	0
 3213 0a09 18       		.uleb128 0x18
 3214 0a0a 22000000 		.4byte	.LVL123
 3215 0a0e 38090000 		.4byte	0x938
 3216 0a12 1C0A0000 		.4byte	0xa1c
 3217 0a16 16       		.uleb128 0x16
 3218 0a17 01       		.uleb128 0x1
 3219 0a18 50       		.byte	0x50
 3220 0a19 01       		.uleb128 0x1
 3221 0a1a 31       		.byte	0x31
 3222 0a1b 00       		.byte	0
 3223 0a1c 0F       		.uleb128 0xf
 3224 0a1d 32000000 		.4byte	.LVL125
 3225 0a21 E5080000 		.4byte	0x8e5
 3226 0a25 0F       		.uleb128 0xf
 3227 0a26 36000000 		.4byte	.LVL126
 3228 0a2a B7090000 		.4byte	0x9b7
 3229 0a2e 15       		.uleb128 0x15
 3230 0a2f 3C000000 		.4byte	.LVL127
 3231 0a33 BA030000 		.4byte	0x3ba
 3232 0a37 16       		.uleb128 0x16
 3233 0a38 01       		.uleb128 0x1
 3234 0a39 50       		.byte	0x50
 3235 0a3a 01       		.uleb128 0x1
 3236 0a3b 3F       		.byte	0x3f
 3237 0a3c 00       		.byte	0
 3238 0a3d 00       		.byte	0
 3239 0a3e 0C       		.uleb128 0xc
 3240 0a3f 4B030000 		.4byte	.LASF93
 3241 0a43 01       		.byte	0x1
 3242 0a44 440A     		.2byte	0xa44
 3243 0a46 00000000 		.4byte	.LFB36
 3244 0a4a 20000000 		.4byte	.LFE36-.LFB36
 3245 0a4e 01       		.uleb128 0x1
 3246 0a4f 9C       		.byte	0x9c
 3247 0a50 670A0000 		.4byte	0xa67
 3248 0a54 0F       		.uleb128 0xf
 3249 0a55 0E000000 		.4byte	.LVL128
 3250 0a59 C9090000 		.4byte	0x9c9
 3251 0a5d 0F       		.uleb128 0xf
 3252 0a5e 18000000 		.4byte	.LVL129
 3253 0a62 B3080000 		.4byte	0x8b3
 3254 0a66 00       		.byte	0
 3255 0a67 11       		.uleb128 0x11
 3256 0a68 E1050000 		.4byte	.LASF94
 3257 0a6c 01       		.byte	0x1
 3258 0a6d 620B     		.2byte	0xb62
 3259 0a6f EC000000 		.4byte	0xec
 3260 0a73 00000000 		.4byte	.LFB49
 3261 0a77 10000000 		.4byte	.LFE49-.LFB49
 3262 0a7b 01       		.uleb128 0x1
 3263 0a7c 9C       		.byte	0x9c
 3264 0a7d AE0A0000 		.4byte	0xaae
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 113


 3265 0a81 0D       		.uleb128 0xd
 3266 0a82 F9020000 		.4byte	.LASF50
 3267 0a86 01       		.byte	0x1
 3268 0a87 620B     		.2byte	0xb62
 3269 0a89 83000000 		.4byte	0x83
 3270 0a8d FC040000 		.4byte	.LLST39
 3271 0a91 10       		.uleb128 0x10
 3272 0a92 A8030000 		.4byte	.LASF95
 3273 0a96 01       		.byte	0x1
 3274 0a97 620B     		.2byte	0xb62
 3275 0a99 EC000000 		.4byte	0xec
 3276 0a9d 01       		.uleb128 0x1
 3277 0a9e 51       		.byte	0x51
 3278 0a9f 12       		.uleb128 0x12
 3279 0aa0 52000000 		.4byte	.LASF96
 3280 0aa4 01       		.byte	0x1
 3281 0aa5 640B     		.2byte	0xb64
 3282 0aa7 EC000000 		.4byte	0xec
 3283 0aab 01       		.uleb128 0x1
 3284 0aac 50       		.byte	0x50
 3285 0aad 00       		.byte	0
 3286 0aae 11       		.uleb128 0x11
 3287 0aaf 96020000 		.4byte	.LASF97
 3288 0ab3 01       		.byte	0x1
 3289 0ab4 7A0B     		.2byte	0xb7a
 3290 0ab6 EC000000 		.4byte	0xec
 3291 0aba 00000000 		.4byte	.LFB50
 3292 0abe 0C000000 		.4byte	.LFE50-.LFB50
 3293 0ac2 01       		.uleb128 0x1
 3294 0ac3 9C       		.byte	0x9c
 3295 0ac4 D90A0000 		.4byte	0xad9
 3296 0ac8 0D       		.uleb128 0xd
 3297 0ac9 F9020000 		.4byte	.LASF50
 3298 0acd 01       		.byte	0x1
 3299 0ace 7A0B     		.2byte	0xb7a
 3300 0ad0 83000000 		.4byte	0x83
 3301 0ad4 1D050000 		.4byte	.LLST40
 3302 0ad8 00       		.byte	0
 3303 0ad9 0C       		.uleb128 0xc
 3304 0ada F2010000 		.4byte	.LASF98
 3305 0ade 01       		.byte	0x1
 3306 0adf A70B     		.2byte	0xba7
 3307 0ae1 00000000 		.4byte	.LFB52
 3308 0ae5 70000000 		.4byte	.LFE52-.LFB52
 3309 0ae9 01       		.uleb128 0x1
 3310 0aea 9C       		.byte	0x9c
 3311 0aeb FE0A0000 		.4byte	0xafe
 3312 0aef 10       		.uleb128 0x10
 3313 0af0 09060000 		.4byte	.LASF99
 3314 0af4 01       		.byte	0x1
 3315 0af5 A70B     		.2byte	0xba7
 3316 0af7 FE0A0000 		.4byte	0xafe
 3317 0afb 01       		.uleb128 0x1
 3318 0afc 50       		.byte	0x50
 3319 0afd 00       		.byte	0
 3320 0afe 06       		.uleb128 0x6
 3321 0aff 04       		.byte	0x4
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 114


 3322 0b00 83000000 		.4byte	0x83
 3323 0b04 09       		.uleb128 0x9
 3324 0b05 EC000000 		.4byte	0xec
 3325 0b09 140B0000 		.4byte	0xb14
 3326 0b0d 0A       		.uleb128 0xa
 3327 0b0e E5000000 		.4byte	0xe5
 3328 0b12 04       		.byte	0x4
 3329 0b13 00       		.byte	0
 3330 0b14 1C       		.uleb128 0x1c
 3331 0b15 F6050000 		.4byte	.LASF100
 3332 0b19 01       		.byte	0x1
 3333 0b1a 22       		.byte	0x22
 3334 0b1b 040B0000 		.4byte	0xb04
 3335 0b1f 05       		.uleb128 0x5
 3336 0b20 03       		.byte	0x3
 3337 0b21 00000000 		.4byte	CySysTickCallbacks
 3338 0b25 1D       		.uleb128 0x1d
 3339 0b26 62040000 		.4byte	.LASF101
 3340 0b2a 01       		.byte	0x1
 3341 0b2b 1B       		.byte	0x1b
 3342 0b2c 83000000 		.4byte	0x83
 3343 0b30 05       		.uleb128 0x5
 3344 0b31 03       		.byte	0x3
 3345 0b32 00000000 		.4byte	cydelayFreqHz
 3346 0b36 1D       		.uleb128 0x1d
 3347 0b37 40010000 		.4byte	.LASF102
 3348 0b3b 01       		.byte	0x1
 3349 0b3c 1C       		.byte	0x1c
 3350 0b3d 83000000 		.4byte	0x83
 3351 0b41 05       		.uleb128 0x5
 3352 0b42 03       		.byte	0x3
 3353 0b43 00000000 		.4byte	cydelayFreqKhz
 3354 0b47 1D       		.uleb128 0x1d
 3355 0b48 5C060000 		.4byte	.LASF103
 3356 0b4c 01       		.byte	0x1
 3357 0b4d 1D       		.byte	0x1d
 3358 0b4e 6B000000 		.4byte	0x6b
 3359 0b52 05       		.uleb128 0x5
 3360 0b53 03       		.byte	0x3
 3361 0b54 00000000 		.4byte	cydelayFreqMhz
 3362 0b58 1D       		.uleb128 0x1d
 3363 0b59 C5010000 		.4byte	.LASF104
 3364 0b5d 01       		.byte	0x1
 3365 0b5e 1E       		.byte	0x1e
 3366 0b5f 83000000 		.4byte	0x83
 3367 0b63 05       		.uleb128 0x5
 3368 0b64 03       		.byte	0x3
 3369 0b65 00000000 		.4byte	cydelay32kMs
 3370 0b69 1D       		.uleb128 0x1d
 3371 0b6a 70030000 		.4byte	.LASF105
 3372 0b6e 01       		.byte	0x1
 3373 0b6f 36       		.byte	0x36
 3374 0b70 83000000 		.4byte	0x83
 3375 0b74 05       		.uleb128 0x5
 3376 0b75 03       		.byte	0x3
 3377 0b76 00000000 		.4byte	CySysTickInitVar
 3378 0b7a 09       		.uleb128 0x9
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 115


 3379 0b7b 6B000000 		.4byte	0x6b
 3380 0b7f 8A0B0000 		.4byte	0xb8a
 3381 0b83 0A       		.uleb128 0xa
 3382 0b84 E5000000 		.4byte	0xe5
 3383 0b88 2D       		.byte	0x2d
 3384 0b89 00       		.byte	0
 3385 0b8a 1D       		.uleb128 0x1d
 3386 0b8b B1030000 		.4byte	.LASF106
 3387 0b8f 01       		.byte	0x1
 3388 0b90 3B       		.byte	0x3b
 3389 0b91 9B0B0000 		.4byte	0xb9b
 3390 0b95 05       		.uleb128 0x5
 3391 0b96 03       		.byte	0x3
 3392 0b97 00000000 		.4byte	cyImoFreqMhz2Reg
 3393 0b9b 1E       		.uleb128 0x1e
 3394 0b9c 7A0B0000 		.4byte	0xb7a
 3395 0ba0 1D       		.uleb128 0x1d
 3396 0ba1 38000000 		.4byte	.LASF107
 3397 0ba5 01       		.byte	0x1
 3398 0ba6 5B       		.byte	0x5b
 3399 0ba7 83000000 		.4byte	0x83
 3400 0bab 05       		.uleb128 0x5
 3401 0bac 03       		.byte	0x3
 3402 0bad 00000000 		.4byte	CySysClkPumpConfig
 3403 0bb1 1F       		.uleb128 0x1f
 3404 0bb2 6F020000 		.4byte	.LASF112
 3405 0bb6 03       		.byte	0x3
 3406 0bb7 E5       		.byte	0xe5
 3407 0bb8 6B000000 		.4byte	0x6b
 3408 0bbc 20       		.uleb128 0x20
 3409 0bbd 87040000 		.4byte	.LASF113
 3410 0bc1 03       		.byte	0x3
 3411 0bc2 E6       		.byte	0xe6
 3412 0bc3 CD0B0000 		.4byte	0xbcd
 3413 0bc7 21       		.uleb128 0x21
 3414 0bc8 6B000000 		.4byte	0x6b
 3415 0bcc 00       		.byte	0
 3416 0bcd 22       		.uleb128 0x22
 3417 0bce DA040000 		.4byte	.LASF114
 3418 0bd2 03       		.byte	0x3
 3419 0bd3 DC       		.byte	0xdc
 3420 0bd4 21       		.uleb128 0x21
 3421 0bd5 83000000 		.4byte	0x83
 3422 0bd9 00       		.byte	0
 3423 0bda 00       		.byte	0
 3424              		.section	.debug_abbrev,"",%progbits
 3425              	.Ldebug_abbrev0:
 3426 0000 01       		.uleb128 0x1
 3427 0001 11       		.uleb128 0x11
 3428 0002 01       		.byte	0x1
 3429 0003 25       		.uleb128 0x25
 3430 0004 0E       		.uleb128 0xe
 3431 0005 13       		.uleb128 0x13
 3432 0006 0B       		.uleb128 0xb
 3433 0007 03       		.uleb128 0x3
 3434 0008 0E       		.uleb128 0xe
 3435 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 116


 3436 000a 0E       		.uleb128 0xe
 3437 000b 55       		.uleb128 0x55
 3438 000c 17       		.uleb128 0x17
 3439 000d 11       		.uleb128 0x11
 3440 000e 01       		.uleb128 0x1
 3441 000f 10       		.uleb128 0x10
 3442 0010 17       		.uleb128 0x17
 3443 0011 00       		.byte	0
 3444 0012 00       		.byte	0
 3445 0013 02       		.uleb128 0x2
 3446 0014 24       		.uleb128 0x24
 3447 0015 00       		.byte	0
 3448 0016 0B       		.uleb128 0xb
 3449 0017 0B       		.uleb128 0xb
 3450 0018 3E       		.uleb128 0x3e
 3451 0019 0B       		.uleb128 0xb
 3452 001a 03       		.uleb128 0x3
 3453 001b 0E       		.uleb128 0xe
 3454 001c 00       		.byte	0
 3455 001d 00       		.byte	0
 3456 001e 03       		.uleb128 0x3
 3457 001f 24       		.uleb128 0x24
 3458 0020 00       		.byte	0
 3459 0021 0B       		.uleb128 0xb
 3460 0022 0B       		.uleb128 0xb
 3461 0023 3E       		.uleb128 0x3e
 3462 0024 0B       		.uleb128 0xb
 3463 0025 03       		.uleb128 0x3
 3464 0026 08       		.uleb128 0x8
 3465 0027 00       		.byte	0
 3466 0028 00       		.byte	0
 3467 0029 04       		.uleb128 0x4
 3468 002a 16       		.uleb128 0x16
 3469 002b 00       		.byte	0
 3470 002c 03       		.uleb128 0x3
 3471 002d 0E       		.uleb128 0xe
 3472 002e 3A       		.uleb128 0x3a
 3473 002f 0B       		.uleb128 0xb
 3474 0030 3B       		.uleb128 0x3b
 3475 0031 05       		.uleb128 0x5
 3476 0032 49       		.uleb128 0x49
 3477 0033 13       		.uleb128 0x13
 3478 0034 00       		.byte	0
 3479 0035 00       		.byte	0
 3480 0036 05       		.uleb128 0x5
 3481 0037 35       		.uleb128 0x35
 3482 0038 00       		.byte	0
 3483 0039 49       		.uleb128 0x49
 3484 003a 13       		.uleb128 0x13
 3485 003b 00       		.byte	0
 3486 003c 00       		.byte	0
 3487 003d 06       		.uleb128 0x6
 3488 003e 0F       		.uleb128 0xf
 3489 003f 00       		.byte	0
 3490 0040 0B       		.uleb128 0xb
 3491 0041 0B       		.uleb128 0xb
 3492 0042 49       		.uleb128 0x49
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 117


 3493 0043 13       		.uleb128 0x13
 3494 0044 00       		.byte	0
 3495 0045 00       		.byte	0
 3496 0046 07       		.uleb128 0x7
 3497 0047 15       		.uleb128 0x15
 3498 0048 00       		.byte	0
 3499 0049 27       		.uleb128 0x27
 3500 004a 19       		.uleb128 0x19
 3501 004b 00       		.byte	0
 3502 004c 00       		.byte	0
 3503 004d 08       		.uleb128 0x8
 3504 004e 16       		.uleb128 0x16
 3505 004f 00       		.byte	0
 3506 0050 03       		.uleb128 0x3
 3507 0051 0E       		.uleb128 0xe
 3508 0052 3A       		.uleb128 0x3a
 3509 0053 0B       		.uleb128 0xb
 3510 0054 3B       		.uleb128 0x3b
 3511 0055 0B       		.uleb128 0xb
 3512 0056 49       		.uleb128 0x49
 3513 0057 13       		.uleb128 0x13
 3514 0058 00       		.byte	0
 3515 0059 00       		.byte	0
 3516 005a 09       		.uleb128 0x9
 3517 005b 01       		.uleb128 0x1
 3518 005c 01       		.byte	0x1
 3519 005d 49       		.uleb128 0x49
 3520 005e 13       		.uleb128 0x13
 3521 005f 01       		.uleb128 0x1
 3522 0060 13       		.uleb128 0x13
 3523 0061 00       		.byte	0
 3524 0062 00       		.byte	0
 3525 0063 0A       		.uleb128 0xa
 3526 0064 21       		.uleb128 0x21
 3527 0065 00       		.byte	0
 3528 0066 49       		.uleb128 0x49
 3529 0067 13       		.uleb128 0x13
 3530 0068 2F       		.uleb128 0x2f
 3531 0069 0B       		.uleb128 0xb
 3532 006a 00       		.byte	0
 3533 006b 00       		.byte	0
 3534 006c 0B       		.uleb128 0xb
 3535 006d 2E       		.uleb128 0x2e
 3536 006e 00       		.byte	0
 3537 006f 3F       		.uleb128 0x3f
 3538 0070 19       		.uleb128 0x19
 3539 0071 03       		.uleb128 0x3
 3540 0072 0E       		.uleb128 0xe
 3541 0073 3A       		.uleb128 0x3a
 3542 0074 0B       		.uleb128 0xb
 3543 0075 3B       		.uleb128 0x3b
 3544 0076 0B       		.uleb128 0xb
 3545 0077 27       		.uleb128 0x27
 3546 0078 19       		.uleb128 0x19
 3547 0079 11       		.uleb128 0x11
 3548 007a 01       		.uleb128 0x1
 3549 007b 12       		.uleb128 0x12
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 118


 3550 007c 06       		.uleb128 0x6
 3551 007d 40       		.uleb128 0x40
 3552 007e 18       		.uleb128 0x18
 3553 007f 9742     		.uleb128 0x2117
 3554 0081 19       		.uleb128 0x19
 3555 0082 00       		.byte	0
 3556 0083 00       		.byte	0
 3557 0084 0C       		.uleb128 0xc
 3558 0085 2E       		.uleb128 0x2e
 3559 0086 01       		.byte	0x1
 3560 0087 3F       		.uleb128 0x3f
 3561 0088 19       		.uleb128 0x19
 3562 0089 03       		.uleb128 0x3
 3563 008a 0E       		.uleb128 0xe
 3564 008b 3A       		.uleb128 0x3a
 3565 008c 0B       		.uleb128 0xb
 3566 008d 3B       		.uleb128 0x3b
 3567 008e 05       		.uleb128 0x5
 3568 008f 27       		.uleb128 0x27
 3569 0090 19       		.uleb128 0x19
 3570 0091 11       		.uleb128 0x11
 3571 0092 01       		.uleb128 0x1
 3572 0093 12       		.uleb128 0x12
 3573 0094 06       		.uleb128 0x6
 3574 0095 40       		.uleb128 0x40
 3575 0096 18       		.uleb128 0x18
 3576 0097 9742     		.uleb128 0x2117
 3577 0099 19       		.uleb128 0x19
 3578 009a 01       		.uleb128 0x1
 3579 009b 13       		.uleb128 0x13
 3580 009c 00       		.byte	0
 3581 009d 00       		.byte	0
 3582 009e 0D       		.uleb128 0xd
 3583 009f 05       		.uleb128 0x5
 3584 00a0 00       		.byte	0
 3585 00a1 03       		.uleb128 0x3
 3586 00a2 0E       		.uleb128 0xe
 3587 00a3 3A       		.uleb128 0x3a
 3588 00a4 0B       		.uleb128 0xb
 3589 00a5 3B       		.uleb128 0x3b
 3590 00a6 05       		.uleb128 0x5
 3591 00a7 49       		.uleb128 0x49
 3592 00a8 13       		.uleb128 0x13
 3593 00a9 02       		.uleb128 0x2
 3594 00aa 17       		.uleb128 0x17
 3595 00ab 00       		.byte	0
 3596 00ac 00       		.byte	0
 3597 00ad 0E       		.uleb128 0xe
 3598 00ae 34       		.uleb128 0x34
 3599 00af 00       		.byte	0
 3600 00b0 03       		.uleb128 0x3
 3601 00b1 0E       		.uleb128 0xe
 3602 00b2 3A       		.uleb128 0x3a
 3603 00b3 0B       		.uleb128 0xb
 3604 00b4 3B       		.uleb128 0x3b
 3605 00b5 05       		.uleb128 0x5
 3606 00b6 49       		.uleb128 0x49
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 119


 3607 00b7 13       		.uleb128 0x13
 3608 00b8 02       		.uleb128 0x2
 3609 00b9 17       		.uleb128 0x17
 3610 00ba 00       		.byte	0
 3611 00bb 00       		.byte	0
 3612 00bc 0F       		.uleb128 0xf
 3613 00bd 898201   		.uleb128 0x4109
 3614 00c0 00       		.byte	0
 3615 00c1 11       		.uleb128 0x11
 3616 00c2 01       		.uleb128 0x1
 3617 00c3 31       		.uleb128 0x31
 3618 00c4 13       		.uleb128 0x13
 3619 00c5 00       		.byte	0
 3620 00c6 00       		.byte	0
 3621 00c7 10       		.uleb128 0x10
 3622 00c8 05       		.uleb128 0x5
 3623 00c9 00       		.byte	0
 3624 00ca 03       		.uleb128 0x3
 3625 00cb 0E       		.uleb128 0xe
 3626 00cc 3A       		.uleb128 0x3a
 3627 00cd 0B       		.uleb128 0xb
 3628 00ce 3B       		.uleb128 0x3b
 3629 00cf 05       		.uleb128 0x5
 3630 00d0 49       		.uleb128 0x49
 3631 00d1 13       		.uleb128 0x13
 3632 00d2 02       		.uleb128 0x2
 3633 00d3 18       		.uleb128 0x18
 3634 00d4 00       		.byte	0
 3635 00d5 00       		.byte	0
 3636 00d6 11       		.uleb128 0x11
 3637 00d7 2E       		.uleb128 0x2e
 3638 00d8 01       		.byte	0x1
 3639 00d9 3F       		.uleb128 0x3f
 3640 00da 19       		.uleb128 0x19
 3641 00db 03       		.uleb128 0x3
 3642 00dc 0E       		.uleb128 0xe
 3643 00dd 3A       		.uleb128 0x3a
 3644 00de 0B       		.uleb128 0xb
 3645 00df 3B       		.uleb128 0x3b
 3646 00e0 05       		.uleb128 0x5
 3647 00e1 27       		.uleb128 0x27
 3648 00e2 19       		.uleb128 0x19
 3649 00e3 49       		.uleb128 0x49
 3650 00e4 13       		.uleb128 0x13
 3651 00e5 11       		.uleb128 0x11
 3652 00e6 01       		.uleb128 0x1
 3653 00e7 12       		.uleb128 0x12
 3654 00e8 06       		.uleb128 0x6
 3655 00e9 40       		.uleb128 0x40
 3656 00ea 18       		.uleb128 0x18
 3657 00eb 9742     		.uleb128 0x2117
 3658 00ed 19       		.uleb128 0x19
 3659 00ee 01       		.uleb128 0x1
 3660 00ef 13       		.uleb128 0x13
 3661 00f0 00       		.byte	0
 3662 00f1 00       		.byte	0
 3663 00f2 12       		.uleb128 0x12
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 120


 3664 00f3 34       		.uleb128 0x34
 3665 00f4 00       		.byte	0
 3666 00f5 03       		.uleb128 0x3
 3667 00f6 0E       		.uleb128 0xe
 3668 00f7 3A       		.uleb128 0x3a
 3669 00f8 0B       		.uleb128 0xb
 3670 00f9 3B       		.uleb128 0x3b
 3671 00fa 05       		.uleb128 0x5
 3672 00fb 49       		.uleb128 0x49
 3673 00fc 13       		.uleb128 0x13
 3674 00fd 02       		.uleb128 0x2
 3675 00fe 18       		.uleb128 0x18
 3676 00ff 00       		.byte	0
 3677 0100 00       		.byte	0
 3678 0101 13       		.uleb128 0x13
 3679 0102 2E       		.uleb128 0x2e
 3680 0103 00       		.byte	0
 3681 0104 3F       		.uleb128 0x3f
 3682 0105 19       		.uleb128 0x19
 3683 0106 03       		.uleb128 0x3
 3684 0107 0E       		.uleb128 0xe
 3685 0108 3A       		.uleb128 0x3a
 3686 0109 0B       		.uleb128 0xb
 3687 010a 3B       		.uleb128 0x3b
 3688 010b 05       		.uleb128 0x5
 3689 010c 27       		.uleb128 0x27
 3690 010d 19       		.uleb128 0x19
 3691 010e 11       		.uleb128 0x11
 3692 010f 01       		.uleb128 0x1
 3693 0110 12       		.uleb128 0x12
 3694 0111 06       		.uleb128 0x6
 3695 0112 40       		.uleb128 0x40
 3696 0113 18       		.uleb128 0x18
 3697 0114 9742     		.uleb128 0x2117
 3698 0116 19       		.uleb128 0x19
 3699 0117 00       		.byte	0
 3700 0118 00       		.byte	0
 3701 0119 14       		.uleb128 0x14
 3702 011a 2E       		.uleb128 0x2e
 3703 011b 00       		.byte	0
 3704 011c 3F       		.uleb128 0x3f
 3705 011d 19       		.uleb128 0x19
 3706 011e 03       		.uleb128 0x3
 3707 011f 0E       		.uleb128 0xe
 3708 0120 3A       		.uleb128 0x3a
 3709 0121 0B       		.uleb128 0xb
 3710 0122 3B       		.uleb128 0x3b
 3711 0123 05       		.uleb128 0x5
 3712 0124 27       		.uleb128 0x27
 3713 0125 19       		.uleb128 0x19
 3714 0126 49       		.uleb128 0x49
 3715 0127 13       		.uleb128 0x13
 3716 0128 11       		.uleb128 0x11
 3717 0129 01       		.uleb128 0x1
 3718 012a 12       		.uleb128 0x12
 3719 012b 06       		.uleb128 0x6
 3720 012c 40       		.uleb128 0x40
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 121


 3721 012d 18       		.uleb128 0x18
 3722 012e 9742     		.uleb128 0x2117
 3723 0130 19       		.uleb128 0x19
 3724 0131 00       		.byte	0
 3725 0132 00       		.byte	0
 3726 0133 15       		.uleb128 0x15
 3727 0134 898201   		.uleb128 0x4109
 3728 0137 01       		.byte	0x1
 3729 0138 11       		.uleb128 0x11
 3730 0139 01       		.uleb128 0x1
 3731 013a 31       		.uleb128 0x31
 3732 013b 13       		.uleb128 0x13
 3733 013c 00       		.byte	0
 3734 013d 00       		.byte	0
 3735 013e 16       		.uleb128 0x16
 3736 013f 8A8201   		.uleb128 0x410a
 3737 0142 00       		.byte	0
 3738 0143 02       		.uleb128 0x2
 3739 0144 18       		.uleb128 0x18
 3740 0145 9142     		.uleb128 0x2111
 3741 0147 18       		.uleb128 0x18
 3742 0148 00       		.byte	0
 3743 0149 00       		.byte	0
 3744 014a 17       		.uleb128 0x17
 3745 014b 34       		.uleb128 0x34
 3746 014c 00       		.byte	0
 3747 014d 03       		.uleb128 0x3
 3748 014e 0E       		.uleb128 0xe
 3749 014f 3A       		.uleb128 0x3a
 3750 0150 0B       		.uleb128 0xb
 3751 0151 3B       		.uleb128 0x3b
 3752 0152 05       		.uleb128 0x5
 3753 0153 49       		.uleb128 0x49
 3754 0154 13       		.uleb128 0x13
 3755 0155 1C       		.uleb128 0x1c
 3756 0156 06       		.uleb128 0x6
 3757 0157 00       		.byte	0
 3758 0158 00       		.byte	0
 3759 0159 18       		.uleb128 0x18
 3760 015a 898201   		.uleb128 0x4109
 3761 015d 01       		.byte	0x1
 3762 015e 11       		.uleb128 0x11
 3763 015f 01       		.uleb128 0x1
 3764 0160 31       		.uleb128 0x31
 3765 0161 13       		.uleb128 0x13
 3766 0162 01       		.uleb128 0x1
 3767 0163 13       		.uleb128 0x13
 3768 0164 00       		.byte	0
 3769 0165 00       		.byte	0
 3770 0166 19       		.uleb128 0x19
 3771 0167 2E       		.uleb128 0x2e
 3772 0168 01       		.byte	0x1
 3773 0169 3F       		.uleb128 0x3f
 3774 016a 19       		.uleb128 0x19
 3775 016b 03       		.uleb128 0x3
 3776 016c 0E       		.uleb128 0xe
 3777 016d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 122


 3778 016e 0B       		.uleb128 0xb
 3779 016f 3B       		.uleb128 0x3b
 3780 0170 05       		.uleb128 0x5
 3781 0171 27       		.uleb128 0x27
 3782 0172 19       		.uleb128 0x19
 3783 0173 11       		.uleb128 0x11
 3784 0174 01       		.uleb128 0x1
 3785 0175 12       		.uleb128 0x12
 3786 0176 06       		.uleb128 0x6
 3787 0177 40       		.uleb128 0x40
 3788 0178 18       		.uleb128 0x18
 3789 0179 9642     		.uleb128 0x2116
 3790 017b 19       		.uleb128 0x19
 3791 017c 01       		.uleb128 0x1
 3792 017d 13       		.uleb128 0x13
 3793 017e 00       		.byte	0
 3794 017f 00       		.byte	0
 3795 0180 1A       		.uleb128 0x1a
 3796 0181 2E       		.uleb128 0x2e
 3797 0182 01       		.byte	0x1
 3798 0183 03       		.uleb128 0x3
 3799 0184 0E       		.uleb128 0xe
 3800 0185 3A       		.uleb128 0x3a
 3801 0186 0B       		.uleb128 0xb
 3802 0187 3B       		.uleb128 0x3b
 3803 0188 05       		.uleb128 0x5
 3804 0189 27       		.uleb128 0x27
 3805 018a 19       		.uleb128 0x19
 3806 018b 11       		.uleb128 0x11
 3807 018c 01       		.uleb128 0x1
 3808 018d 12       		.uleb128 0x12
 3809 018e 06       		.uleb128 0x6
 3810 018f 40       		.uleb128 0x40
 3811 0190 18       		.uleb128 0x18
 3812 0191 9642     		.uleb128 0x2116
 3813 0193 19       		.uleb128 0x19
 3814 0194 01       		.uleb128 0x1
 3815 0195 13       		.uleb128 0x13
 3816 0196 00       		.byte	0
 3817 0197 00       		.byte	0
 3818 0198 1B       		.uleb128 0x1b
 3819 0199 34       		.uleb128 0x34
 3820 019a 00       		.byte	0
 3821 019b 03       		.uleb128 0x3
 3822 019c 08       		.uleb128 0x8
 3823 019d 3A       		.uleb128 0x3a
 3824 019e 0B       		.uleb128 0xb
 3825 019f 3B       		.uleb128 0x3b
 3826 01a0 05       		.uleb128 0x5
 3827 01a1 49       		.uleb128 0x49
 3828 01a2 13       		.uleb128 0x13
 3829 01a3 02       		.uleb128 0x2
 3830 01a4 17       		.uleb128 0x17
 3831 01a5 00       		.byte	0
 3832 01a6 00       		.byte	0
 3833 01a7 1C       		.uleb128 0x1c
 3834 01a8 34       		.uleb128 0x34
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 123


 3835 01a9 00       		.byte	0
 3836 01aa 03       		.uleb128 0x3
 3837 01ab 0E       		.uleb128 0xe
 3838 01ac 3A       		.uleb128 0x3a
 3839 01ad 0B       		.uleb128 0xb
 3840 01ae 3B       		.uleb128 0x3b
 3841 01af 0B       		.uleb128 0xb
 3842 01b0 49       		.uleb128 0x49
 3843 01b1 13       		.uleb128 0x13
 3844 01b2 02       		.uleb128 0x2
 3845 01b3 18       		.uleb128 0x18
 3846 01b4 00       		.byte	0
 3847 01b5 00       		.byte	0
 3848 01b6 1D       		.uleb128 0x1d
 3849 01b7 34       		.uleb128 0x34
 3850 01b8 00       		.byte	0
 3851 01b9 03       		.uleb128 0x3
 3852 01ba 0E       		.uleb128 0xe
 3853 01bb 3A       		.uleb128 0x3a
 3854 01bc 0B       		.uleb128 0xb
 3855 01bd 3B       		.uleb128 0x3b
 3856 01be 0B       		.uleb128 0xb
 3857 01bf 49       		.uleb128 0x49
 3858 01c0 13       		.uleb128 0x13
 3859 01c1 3F       		.uleb128 0x3f
 3860 01c2 19       		.uleb128 0x19
 3861 01c3 02       		.uleb128 0x2
 3862 01c4 18       		.uleb128 0x18
 3863 01c5 00       		.byte	0
 3864 01c6 00       		.byte	0
 3865 01c7 1E       		.uleb128 0x1e
 3866 01c8 26       		.uleb128 0x26
 3867 01c9 00       		.byte	0
 3868 01ca 49       		.uleb128 0x49
 3869 01cb 13       		.uleb128 0x13
 3870 01cc 00       		.byte	0
 3871 01cd 00       		.byte	0
 3872 01ce 1F       		.uleb128 0x1f
 3873 01cf 2E       		.uleb128 0x2e
 3874 01d0 00       		.byte	0
 3875 01d1 3F       		.uleb128 0x3f
 3876 01d2 19       		.uleb128 0x19
 3877 01d3 03       		.uleb128 0x3
 3878 01d4 0E       		.uleb128 0xe
 3879 01d5 3A       		.uleb128 0x3a
 3880 01d6 0B       		.uleb128 0xb
 3881 01d7 3B       		.uleb128 0x3b
 3882 01d8 0B       		.uleb128 0xb
 3883 01d9 27       		.uleb128 0x27
 3884 01da 19       		.uleb128 0x19
 3885 01db 49       		.uleb128 0x49
 3886 01dc 13       		.uleb128 0x13
 3887 01dd 3C       		.uleb128 0x3c
 3888 01de 19       		.uleb128 0x19
 3889 01df 00       		.byte	0
 3890 01e0 00       		.byte	0
 3891 01e1 20       		.uleb128 0x20
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 124


 3892 01e2 2E       		.uleb128 0x2e
 3893 01e3 01       		.byte	0x1
 3894 01e4 3F       		.uleb128 0x3f
 3895 01e5 19       		.uleb128 0x19
 3896 01e6 03       		.uleb128 0x3
 3897 01e7 0E       		.uleb128 0xe
 3898 01e8 3A       		.uleb128 0x3a
 3899 01e9 0B       		.uleb128 0xb
 3900 01ea 3B       		.uleb128 0x3b
 3901 01eb 0B       		.uleb128 0xb
 3902 01ec 27       		.uleb128 0x27
 3903 01ed 19       		.uleb128 0x19
 3904 01ee 3C       		.uleb128 0x3c
 3905 01ef 19       		.uleb128 0x19
 3906 01f0 01       		.uleb128 0x1
 3907 01f1 13       		.uleb128 0x13
 3908 01f2 00       		.byte	0
 3909 01f3 00       		.byte	0
 3910 01f4 21       		.uleb128 0x21
 3911 01f5 05       		.uleb128 0x5
 3912 01f6 00       		.byte	0
 3913 01f7 49       		.uleb128 0x49
 3914 01f8 13       		.uleb128 0x13
 3915 01f9 00       		.byte	0
 3916 01fa 00       		.byte	0
 3917 01fb 22       		.uleb128 0x22
 3918 01fc 2E       		.uleb128 0x2e
 3919 01fd 01       		.byte	0x1
 3920 01fe 3F       		.uleb128 0x3f
 3921 01ff 19       		.uleb128 0x19
 3922 0200 03       		.uleb128 0x3
 3923 0201 0E       		.uleb128 0xe
 3924 0202 3A       		.uleb128 0x3a
 3925 0203 0B       		.uleb128 0xb
 3926 0204 3B       		.uleb128 0x3b
 3927 0205 0B       		.uleb128 0xb
 3928 0206 27       		.uleb128 0x27
 3929 0207 19       		.uleb128 0x19
 3930 0208 3C       		.uleb128 0x3c
 3931 0209 19       		.uleb128 0x19
 3932 020a 00       		.byte	0
 3933 020b 00       		.byte	0
 3934 020c 00       		.byte	0
 3935              		.section	.debug_loc,"",%progbits
 3936              	.Ldebug_loc0:
 3937              	.LLST0:
 3938 0000 00000000 		.4byte	.LVL0
 3939 0004 07000000 		.4byte	.LVL1-1
 3940 0008 0100     		.2byte	0x1
 3941 000a 50       		.byte	0x50
 3942 000b 07000000 		.4byte	.LVL1-1
 3943 000f 1A000000 		.4byte	.LVL5
 3944 0013 0100     		.2byte	0x1
 3945 0015 54       		.byte	0x54
 3946 0016 1A000000 		.4byte	.LVL5
 3947 001a 20000000 		.4byte	.LFE4
 3948 001e 0400     		.2byte	0x4
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 125


 3949 0020 F3       		.byte	0xf3
 3950 0021 01       		.uleb128 0x1
 3951 0022 50       		.byte	0x50
 3952 0023 9F       		.byte	0x9f
 3953 0024 00000000 		.4byte	0
 3954 0028 00000000 		.4byte	0
 3955              	.LLST1:
 3956 002c 08000000 		.4byte	.LVL1
 3957 0030 19000000 		.4byte	.LVL4-1
 3958 0034 0100     		.2byte	0x1
 3959 0036 50       		.byte	0x50
 3960 0037 00000000 		.4byte	0
 3961 003b 00000000 		.4byte	0
 3962              	.LLST2:
 3963 003f 10000000 		.4byte	.LVL2
 3964 0043 14000000 		.4byte	.LVL3
 3965 0047 0100     		.2byte	0x1
 3966 0049 52       		.byte	0x52
 3967 004a 14000000 		.4byte	.LVL3
 3968 004e 19000000 		.4byte	.LVL4-1
 3969 0052 0100     		.2byte	0x1
 3970 0054 53       		.byte	0x53
 3971 0055 00000000 		.4byte	0
 3972 0059 00000000 		.4byte	0
 3973              	.LLST3:
 3974 005d 06000000 		.4byte	.LVL7
 3975 0061 11000000 		.4byte	.LVL9-1
 3976 0065 0100     		.2byte	0x1
 3977 0067 50       		.byte	0x50
 3978 0068 00000000 		.4byte	0
 3979 006c 00000000 		.4byte	0
 3980              	.LLST4:
 3981 0070 0E000000 		.4byte	.LVL8
 3982 0074 14000000 		.4byte	.LVL10
 3983 0078 0100     		.2byte	0x1
 3984 007a 54       		.byte	0x54
 3985 007b 14000000 		.4byte	.LVL10
 3986 007f 1C000000 		.4byte	.LFE6
 3987 0083 0100     		.2byte	0x1
 3988 0085 50       		.byte	0x50
 3989 0086 00000000 		.4byte	0
 3990 008a 00000000 		.4byte	0
 3991              	.LLST5:
 3992 008e 00000000 		.4byte	.LVL11
 3993 0092 07000000 		.4byte	.LVL12-1
 3994 0096 0100     		.2byte	0x1
 3995 0098 50       		.byte	0x50
 3996 0099 07000000 		.4byte	.LVL12-1
 3997 009d 0C000000 		.4byte	.LVL13
 3998 00a1 0100     		.2byte	0x1
 3999 00a3 54       		.byte	0x54
 4000 00a4 0C000000 		.4byte	.LVL13
 4001 00a8 28000000 		.4byte	.LFE7
 4002 00ac 0400     		.2byte	0x4
 4003 00ae F3       		.byte	0xf3
 4004 00af 01       		.uleb128 0x1
 4005 00b0 50       		.byte	0x50
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 126


 4006 00b1 9F       		.byte	0x9f
 4007 00b2 00000000 		.4byte	0
 4008 00b6 00000000 		.4byte	0
 4009              	.LLST6:
 4010 00ba 08000000 		.4byte	.LVL12
 4011 00be 1D000000 		.4byte	.LVL14-1
 4012 00c2 0100     		.2byte	0x1
 4013 00c4 50       		.byte	0x50
 4014 00c5 00000000 		.4byte	0
 4015 00c9 00000000 		.4byte	0
 4016              	.LLST7:
 4017 00cd 00000000 		.4byte	.LVL15
 4018 00d1 09000000 		.4byte	.LVL16-1
 4019 00d5 0100     		.2byte	0x1
 4020 00d7 50       		.byte	0x50
 4021 00d8 09000000 		.4byte	.LVL16-1
 4022 00dc 18000000 		.4byte	.LVL17
 4023 00e0 0100     		.2byte	0x1
 4024 00e2 54       		.byte	0x54
 4025 00e3 18000000 		.4byte	.LVL17
 4026 00e7 40000000 		.4byte	.LVL19
 4027 00eb 0300     		.2byte	0x3
 4028 00ed 74       		.byte	0x74
 4029 00ee 03       		.sleb128 3
 4030 00ef 9F       		.byte	0x9f
 4031 00f0 40000000 		.4byte	.LVL19
 4032 00f4 64000000 		.4byte	.LFE8
 4033 00f8 0400     		.2byte	0x4
 4034 00fa F3       		.byte	0xf3
 4035 00fb 01       		.uleb128 0x1
 4036 00fc 50       		.byte	0x50
 4037 00fd 9F       		.byte	0x9f
 4038 00fe 00000000 		.4byte	0
 4039 0102 00000000 		.4byte	0
 4040              	.LLST8:
 4041 0106 0A000000 		.4byte	.LVL16
 4042 010a 3D000000 		.4byte	.LVL18-1
 4043 010e 0100     		.2byte	0x1
 4044 0110 50       		.byte	0x50
 4045 0111 00000000 		.4byte	0
 4046 0115 00000000 		.4byte	0
 4047              	.LLST9:
 4048 0119 00000000 		.4byte	.LVL21
 4049 011d 04000000 		.4byte	.LVL22
 4050 0121 0100     		.2byte	0x1
 4051 0123 50       		.byte	0x50
 4052 0124 04000000 		.4byte	.LVL22
 4053 0128 14000000 		.4byte	.LFE17
 4054 012c 0100     		.2byte	0x1
 4055 012e 52       		.byte	0x52
 4056 012f 00000000 		.4byte	0
 4057 0133 00000000 		.4byte	0
 4058              	.LLST10:
 4059 0137 00000000 		.4byte	.LVL27
 4060 013b 04000000 		.4byte	.LVL28
 4061 013f 0100     		.2byte	0x1
 4062 0141 50       		.byte	0x50
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 127


 4063 0142 04000000 		.4byte	.LVL28
 4064 0146 14000000 		.4byte	.LFE26
 4065 014a 0400     		.2byte	0x4
 4066 014c F3       		.byte	0xf3
 4067 014d 01       		.uleb128 0x1
 4068 014e 50       		.byte	0x50
 4069 014f 9F       		.byte	0x9f
 4070 0150 00000000 		.4byte	0
 4071 0154 00000000 		.4byte	0
 4072              	.LLST11:
 4073 0158 00000000 		.4byte	.LVL29
 4074 015c 08000000 		.4byte	.LVL30
 4075 0160 0100     		.2byte	0x1
 4076 0162 50       		.byte	0x50
 4077 0163 08000000 		.4byte	.LVL30
 4078 0167 18000000 		.4byte	.LFE27
 4079 016b 0400     		.2byte	0x4
 4080 016d F3       		.byte	0xf3
 4081 016e 01       		.uleb128 0x1
 4082 016f 50       		.byte	0x50
 4083 0170 9F       		.byte	0x9f
 4084 0171 00000000 		.4byte	0
 4085 0175 00000000 		.4byte	0
 4086              	.LLST12:
 4087 0179 00000000 		.4byte	.LVL31
 4088 017d 04000000 		.4byte	.LVL32
 4089 0181 0100     		.2byte	0x1
 4090 0183 50       		.byte	0x50
 4091 0184 04000000 		.4byte	.LVL32
 4092 0188 14000000 		.4byte	.LFE28
 4093 018c 0400     		.2byte	0x4
 4094 018e F3       		.byte	0xf3
 4095 018f 01       		.uleb128 0x1
 4096 0190 50       		.byte	0x50
 4097 0191 9F       		.byte	0x9f
 4098 0192 00000000 		.4byte	0
 4099 0196 00000000 		.4byte	0
 4100              	.LLST13:
 4101 019a 00000000 		.4byte	.LVL33
 4102 019e 04000000 		.4byte	.LVL34
 4103 01a2 0100     		.2byte	0x1
 4104 01a4 50       		.byte	0x50
 4105 01a5 04000000 		.4byte	.LVL34
 4106 01a9 14000000 		.4byte	.LFE29
 4107 01ad 0400     		.2byte	0x4
 4108 01af F3       		.byte	0xf3
 4109 01b0 01       		.uleb128 0x1
 4110 01b1 50       		.byte	0x50
 4111 01b2 9F       		.byte	0x9f
 4112 01b3 00000000 		.4byte	0
 4113 01b7 00000000 		.4byte	0
 4114              	.LLST14:
 4115 01bb 00000000 		.4byte	.LVL35
 4116 01bf 04000000 		.4byte	.LVL36
 4117 01c3 0100     		.2byte	0x1
 4118 01c5 50       		.byte	0x50
 4119 01c6 04000000 		.4byte	.LVL36
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 128


 4120 01ca 14000000 		.4byte	.LFE30
 4121 01ce 0400     		.2byte	0x4
 4122 01d0 F3       		.byte	0xf3
 4123 01d1 01       		.uleb128 0x1
 4124 01d2 50       		.byte	0x50
 4125 01d3 9F       		.byte	0x9f
 4126 01d4 00000000 		.4byte	0
 4127 01d8 00000000 		.4byte	0
 4128              	.LLST15:
 4129 01dc 00000000 		.4byte	.LVL38
 4130 01e0 13000000 		.4byte	.LVL39-1
 4131 01e4 0100     		.2byte	0x1
 4132 01e6 50       		.byte	0x50
 4133 01e7 13000000 		.4byte	.LVL39-1
 4134 01eb 18000000 		.4byte	.LVL40
 4135 01ef 0100     		.2byte	0x1
 4136 01f1 54       		.byte	0x54
 4137 01f2 18000000 		.4byte	.LVL40
 4138 01f6 28000000 		.4byte	.LVL42
 4139 01fa 0400     		.2byte	0x4
 4140 01fc F3       		.byte	0xf3
 4141 01fd 01       		.uleb128 0x1
 4142 01fe 50       		.byte	0x50
 4143 01ff 9F       		.byte	0x9f
 4144 0200 28000000 		.4byte	.LVL42
 4145 0204 2A000000 		.4byte	.LVL43
 4146 0208 0100     		.2byte	0x1
 4147 020a 50       		.byte	0x50
 4148 020b 2A000000 		.4byte	.LVL43
 4149 020f 2E000000 		.4byte	.LVL44
 4150 0213 0100     		.2byte	0x1
 4151 0215 54       		.byte	0x54
 4152 0216 2E000000 		.4byte	.LVL44
 4153 021a 38000000 		.4byte	.LFE12
 4154 021e 0400     		.2byte	0x4
 4155 0220 F3       		.byte	0xf3
 4156 0221 01       		.uleb128 0x1
 4157 0222 50       		.byte	0x50
 4158 0223 9F       		.byte	0x9f
 4159 0224 00000000 		.4byte	0
 4160 0228 00000000 		.4byte	0
 4161              	.LLST16:
 4162 022c 14000000 		.4byte	.LVL39
 4163 0230 25000000 		.4byte	.LVL41-1
 4164 0234 0100     		.2byte	0x1
 4165 0236 50       		.byte	0x50
 4166 0237 00000000 		.4byte	0
 4167 023b 00000000 		.4byte	0
 4168              	.LLST17:
 4169 023f 00000000 		.4byte	.LVL45
 4170 0243 0C000000 		.4byte	.LVL47
 4171 0247 0100     		.2byte	0x1
 4172 0249 50       		.byte	0x50
 4173 024a 0C000000 		.4byte	.LVL47
 4174 024e 20000000 		.4byte	.LFE20
 4175 0252 0400     		.2byte	0x4
 4176 0254 F3       		.byte	0xf3
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 129


 4177 0255 01       		.uleb128 0x1
 4178 0256 50       		.byte	0x50
 4179 0257 9F       		.byte	0x9f
 4180 0258 00000000 		.4byte	0
 4181 025c 00000000 		.4byte	0
 4182              	.LLST18:
 4183 0260 00000000 		.4byte	.LVL45
 4184 0264 0F000000 		.4byte	.LVL48-1
 4185 0268 0100     		.2byte	0x1
 4186 026a 51       		.byte	0x51
 4187 026b 0F000000 		.4byte	.LVL48-1
 4188 026f 1E000000 		.4byte	.LVL50
 4189 0273 0100     		.2byte	0x1
 4190 0275 55       		.byte	0x55
 4191 0276 1E000000 		.4byte	.LVL50
 4192 027a 20000000 		.4byte	.LFE20
 4193 027e 0400     		.2byte	0x4
 4194 0280 F3       		.byte	0xf3
 4195 0281 01       		.uleb128 0x1
 4196 0282 51       		.byte	0x51
 4197 0283 9F       		.byte	0x9f
 4198 0284 00000000 		.4byte	0
 4199 0288 00000000 		.4byte	0
 4200              	.LLST19:
 4201 028c 00000000 		.4byte	.LVL51
 4202 0290 0A000000 		.4byte	.LVL53
 4203 0294 0100     		.2byte	0x1
 4204 0296 50       		.byte	0x50
 4205 0297 0A000000 		.4byte	.LVL53
 4206 029b 1C000000 		.4byte	.LFE21
 4207 029f 0400     		.2byte	0x4
 4208 02a1 F3       		.byte	0xf3
 4209 02a2 01       		.uleb128 0x1
 4210 02a3 50       		.byte	0x50
 4211 02a4 9F       		.byte	0x9f
 4212 02a5 00000000 		.4byte	0
 4213 02a9 00000000 		.4byte	0
 4214              	.LLST20:
 4215 02ad 00000000 		.4byte	.LVL55
 4216 02b1 0C000000 		.4byte	.LVL57
 4217 02b5 0100     		.2byte	0x1
 4218 02b7 50       		.byte	0x50
 4219 02b8 0C000000 		.4byte	.LVL57
 4220 02bc 24000000 		.4byte	.LFE22
 4221 02c0 0400     		.2byte	0x4
 4222 02c2 F3       		.byte	0xf3
 4223 02c3 01       		.uleb128 0x1
 4224 02c4 50       		.byte	0x50
 4225 02c5 9F       		.byte	0x9f
 4226 02c6 00000000 		.4byte	0
 4227 02ca 00000000 		.4byte	0
 4228              	.LLST21:
 4229 02ce 00000000 		.4byte	.LVL55
 4230 02d2 0F000000 		.4byte	.LVL58-1
 4231 02d6 0100     		.2byte	0x1
 4232 02d8 51       		.byte	0x51
 4233 02d9 0F000000 		.4byte	.LVL58-1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 130


 4234 02dd 1C000000 		.4byte	.LVL60
 4235 02e1 0100     		.2byte	0x1
 4236 02e3 55       		.byte	0x55
 4237 02e4 1C000000 		.4byte	.LVL60
 4238 02e8 24000000 		.4byte	.LFE22
 4239 02ec 0400     		.2byte	0x4
 4240 02ee F3       		.byte	0xf3
 4241 02ef 01       		.uleb128 0x1
 4242 02f0 51       		.byte	0x51
 4243 02f1 9F       		.byte	0x9f
 4244 02f2 00000000 		.4byte	0
 4245 02f6 00000000 		.4byte	0
 4246              	.LLST22:
 4247 02fa 00000000 		.4byte	.LVL61
 4248 02fe 0A000000 		.4byte	.LVL63
 4249 0302 0100     		.2byte	0x1
 4250 0304 50       		.byte	0x50
 4251 0305 0A000000 		.4byte	.LVL63
 4252 0309 20000000 		.4byte	.LFE23
 4253 030d 0400     		.2byte	0x4
 4254 030f F3       		.byte	0xf3
 4255 0310 01       		.uleb128 0x1
 4256 0311 50       		.byte	0x50
 4257 0312 9F       		.byte	0x9f
 4258 0313 00000000 		.4byte	0
 4259 0317 00000000 		.4byte	0
 4260              	.LLST23:
 4261 031b 00000000 		.4byte	.LVL65
 4262 031f 0C000000 		.4byte	.LVL66
 4263 0323 0100     		.2byte	0x1
 4264 0325 50       		.byte	0x50
 4265 0326 0C000000 		.4byte	.LVL66
 4266 032a 4C000000 		.4byte	.LFE24
 4267 032e 0400     		.2byte	0x4
 4268 0330 F3       		.byte	0xf3
 4269 0331 01       		.uleb128 0x1
 4270 0332 50       		.byte	0x50
 4271 0333 9F       		.byte	0x9f
 4272 0334 00000000 		.4byte	0
 4273 0338 00000000 		.4byte	0
 4274              	.LLST24:
 4275 033c 00000000 		.4byte	.LVL65
 4276 0340 0F000000 		.4byte	.LVL67-1
 4277 0344 0100     		.2byte	0x1
 4278 0346 51       		.byte	0x51
 4279 0347 0F000000 		.4byte	.LVL67-1
 4280 034b 4C000000 		.4byte	.LFE24
 4281 034f 0400     		.2byte	0x4
 4282 0351 F3       		.byte	0xf3
 4283 0352 01       		.uleb128 0x1
 4284 0353 51       		.byte	0x51
 4285 0354 9F       		.byte	0x9f
 4286 0355 00000000 		.4byte	0
 4287 0359 00000000 		.4byte	0
 4288              	.LLST25:
 4289 035d 26000000 		.4byte	.LVL70
 4290 0361 43000000 		.4byte	.LVL75-1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 131


 4291 0365 0100     		.2byte	0x1
 4292 0367 50       		.byte	0x50
 4293 0368 00000000 		.4byte	0
 4294 036c 00000000 		.4byte	0
 4295              	.LLST26:
 4296 0370 22000000 		.4byte	.LVL69
 4297 0374 3C000000 		.4byte	.LVL73
 4298 0378 0100     		.2byte	0x1
 4299 037a 55       		.byte	0x55
 4300 037b 00000000 		.4byte	0
 4301 037f 00000000 		.4byte	0
 4302              	.LLST27:
 4303 0383 32000000 		.4byte	.LVL71
 4304 0387 3E000000 		.4byte	.LVL74
 4305 038b 0100     		.2byte	0x1
 4306 038d 53       		.byte	0x53
 4307 038e 3E000000 		.4byte	.LVL74
 4308 0392 44000000 		.4byte	.LVL76
 4309 0396 0100     		.2byte	0x1
 4310 0398 55       		.byte	0x55
 4311 0399 00000000 		.4byte	0
 4312 039d 00000000 		.4byte	0
 4313              	.LLST28:
 4314 03a1 00000000 		.4byte	.LVL77
 4315 03a5 0A000000 		.4byte	.LVL78
 4316 03a9 0100     		.2byte	0x1
 4317 03ab 50       		.byte	0x50
 4318 03ac 0A000000 		.4byte	.LVL78
 4319 03b0 2C000000 		.4byte	.LFE25
 4320 03b4 0400     		.2byte	0x4
 4321 03b6 F3       		.byte	0xf3
 4322 03b7 01       		.uleb128 0x1
 4323 03b8 50       		.byte	0x50
 4324 03b9 9F       		.byte	0x9f
 4325 03ba 00000000 		.4byte	0
 4326 03be 00000000 		.4byte	0
 4327              	.LLST29:
 4328 03c2 24000000 		.4byte	.LVL80
 4329 03c6 26000000 		.4byte	.LVL81
 4330 03ca 0100     		.2byte	0x1
 4331 03cc 50       		.byte	0x50
 4332 03cd 00000000 		.4byte	0
 4333 03d1 00000000 		.4byte	0
 4334              	.LLST30:
 4335 03d5 00000000 		.4byte	.LVL82
 4336 03d9 06000000 		.4byte	.LVL83
 4337 03dd 0100     		.2byte	0x1
 4338 03df 50       		.byte	0x50
 4339 03e0 06000000 		.4byte	.LVL83
 4340 03e4 26000000 		.4byte	.LVL87
 4341 03e8 0100     		.2byte	0x1
 4342 03ea 54       		.byte	0x54
 4343 03eb 00000000 		.4byte	0
 4344 03ef 00000000 		.4byte	0
 4345              	.LLST31:
 4346 03f3 00000000 		.4byte	.LVL88
 4347 03f7 08000000 		.4byte	.LVL89
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 132


 4348 03fb 0100     		.2byte	0x1
 4349 03fd 50       		.byte	0x50
 4350 03fe 08000000 		.4byte	.LVL89
 4351 0402 14000000 		.4byte	.LFE34
 4352 0406 0400     		.2byte	0x4
 4353 0408 F3       		.byte	0xf3
 4354 0409 01       		.uleb128 0x1
 4355 040a 50       		.byte	0x50
 4356 040b 9F       		.byte	0x9f
 4357 040c 00000000 		.4byte	0
 4358 0410 00000000 		.4byte	0
 4359              	.LLST32:
 4360 0414 00000000 		.4byte	.LVL91
 4361 0418 26000000 		.4byte	.LVL93
 4362 041c 0100     		.2byte	0x1
 4363 041e 50       		.byte	0x50
 4364 041f 26000000 		.4byte	.LVL93
 4365 0423 42000000 		.4byte	.LVL98
 4366 0427 0100     		.2byte	0x1
 4367 0429 54       		.byte	0x54
 4368 042a 00000000 		.4byte	0
 4369 042e 00000000 		.4byte	0
 4370              	.LLST33:
 4371 0432 04000000 		.4byte	.LVL92
 4372 0436 42000000 		.4byte	.LVL97
 4373 043a 0200     		.2byte	0x2
 4374 043c 30       		.byte	0x30
 4375 043d 9F       		.byte	0x9f
 4376 043e 42000000 		.4byte	.LVL97
 4377 0442 54000000 		.4byte	.LFE9
 4378 0446 0100     		.2byte	0x1
 4379 0448 50       		.byte	0x50
 4380 0449 00000000 		.4byte	0
 4381 044d 00000000 		.4byte	0
 4382              	.LLST34:
 4383 0451 00000000 		.4byte	.LVL99
 4384 0455 14000000 		.4byte	.LVL100
 4385 0459 0100     		.2byte	0x1
 4386 045b 50       		.byte	0x50
 4387 045c 14000000 		.4byte	.LVL100
 4388 0460 18000000 		.4byte	.LVL101
 4389 0464 0100     		.2byte	0x1
 4390 0466 53       		.byte	0x53
 4391 0467 18000000 		.4byte	.LVL101
 4392 046b 44000000 		.4byte	.LFE13
 4393 046f 0400     		.2byte	0x4
 4394 0471 F3       		.byte	0xf3
 4395 0472 01       		.uleb128 0x1
 4396 0473 50       		.byte	0x50
 4397 0474 9F       		.byte	0x9f
 4398 0475 00000000 		.4byte	0
 4399 0479 00000000 		.4byte	0
 4400              	.LLST35:
 4401 047d 00000000 		.4byte	.LVL104
 4402 0481 1A000000 		.4byte	.LVL105
 4403 0485 0100     		.2byte	0x1
 4404 0487 50       		.byte	0x50
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 133


 4405 0488 1A000000 		.4byte	.LVL105
 4406 048c 4C000000 		.4byte	.LFE35
 4407 0490 0400     		.2byte	0x4
 4408 0492 F3       		.byte	0xf3
 4409 0493 01       		.uleb128 0x1
 4410 0494 50       		.byte	0x50
 4411 0495 9F       		.byte	0x9f
 4412 0496 00000000 		.4byte	0
 4413 049a 00000000 		.4byte	0
 4414              	.LLST36:
 4415 049e 00000000 		.4byte	.LVL109
 4416 04a2 02000000 		.4byte	.LVL110
 4417 04a6 0100     		.2byte	0x1
 4418 04a8 50       		.byte	0x50
 4419 04a9 02000000 		.4byte	.LVL110
 4420 04ad 10000000 		.4byte	.LFE42
 4421 04b1 0400     		.2byte	0x4
 4422 04b3 F3       		.byte	0xf3
 4423 04b4 01       		.uleb128 0x1
 4424 04b5 50       		.byte	0x50
 4425 04b6 9F       		.byte	0x9f
 4426 04b7 00000000 		.4byte	0
 4427 04bb 00000000 		.4byte	0
 4428              	.LLST37:
 4429 04bf 0C000000 		.4byte	.LVL113
 4430 04c3 1C000000 		.4byte	.LVL116
 4431 04c7 0100     		.2byte	0x1
 4432 04c9 54       		.byte	0x54
 4433 04ca 1E000000 		.4byte	.LVL117
 4434 04ce 22000000 		.4byte	.LVL118
 4435 04d2 0100     		.2byte	0x1
 4436 04d4 54       		.byte	0x54
 4437 04d5 00000000 		.4byte	0
 4438 04d9 00000000 		.4byte	0
 4439              	.LLST38:
 4440 04dd 02000000 		.4byte	.LVL119
 4441 04e1 06000000 		.4byte	.LVL120
 4442 04e5 0200     		.2byte	0x2
 4443 04e7 30       		.byte	0x30
 4444 04e8 9F       		.byte	0x9f
 4445 04e9 06000000 		.4byte	.LVL120
 4446 04ed 1B000000 		.4byte	.LVL122-1
 4447 04f1 0100     		.2byte	0x1
 4448 04f3 53       		.byte	0x53
 4449 04f4 00000000 		.4byte	0
 4450 04f8 00000000 		.4byte	0
 4451              	.LLST39:
 4452 04fc 00000000 		.4byte	.LVL130
 4453 0500 06000000 		.4byte	.LVL131
 4454 0504 0100     		.2byte	0x1
 4455 0506 50       		.byte	0x50
 4456 0507 06000000 		.4byte	.LVL131
 4457 050b 10000000 		.4byte	.LFE49
 4458 050f 0400     		.2byte	0x4
 4459 0511 F3       		.byte	0xf3
 4460 0512 01       		.uleb128 0x1
 4461 0513 50       		.byte	0x50
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 134


 4462 0514 9F       		.byte	0x9f
 4463 0515 00000000 		.4byte	0
 4464 0519 00000000 		.4byte	0
 4465              	.LLST40:
 4466 051d 00000000 		.4byte	.LVL132
 4467 0521 02000000 		.4byte	.LVL133
 4468 0525 0100     		.2byte	0x1
 4469 0527 50       		.byte	0x50
 4470 0528 02000000 		.4byte	.LVL133
 4471 052c 0C000000 		.4byte	.LFE50
 4472 0530 0400     		.2byte	0x4
 4473 0532 F3       		.byte	0xf3
 4474 0533 01       		.uleb128 0x1
 4475 0534 50       		.byte	0x50
 4476 0535 9F       		.byte	0x9f
 4477 0536 00000000 		.4byte	0
 4478 053a 00000000 		.4byte	0
 4479              		.section	.debug_aranges,"",%progbits
 4480 0000 AC010000 		.4byte	0x1ac
 4481 0004 0200     		.2byte	0x2
 4482 0006 00000000 		.4byte	.Ldebug_info0
 4483 000a 04       		.byte	0x4
 4484 000b 00       		.byte	0
 4485 000c 0000     		.2byte	0
 4486 000e 0000     		.2byte	0
 4487 0010 00000000 		.4byte	.LFB2
 4488 0014 14000000 		.4byte	.LFE2-.LFB2
 4489 0018 00000000 		.4byte	.LFB3
 4490 001c 10000000 		.4byte	.LFE3-.LFB3
 4491 0020 00000000 		.4byte	.LFB4
 4492 0024 20000000 		.4byte	.LFE4-.LFB4
 4493 0028 00000000 		.4byte	.LFB5
 4494 002c 38000000 		.4byte	.LFE5-.LFB5
 4495 0030 00000000 		.4byte	.LFB6
 4496 0034 1C000000 		.4byte	.LFE6-.LFB6
 4497 0038 00000000 		.4byte	.LFB7
 4498 003c 28000000 		.4byte	.LFE7-.LFB7
 4499 0040 00000000 		.4byte	.LFB8
 4500 0044 64000000 		.4byte	.LFE8-.LFB8
 4501 0048 00000000 		.4byte	.LFB10
 4502 004c 24000000 		.4byte	.LFE10-.LFB10
 4503 0050 00000000 		.4byte	.LFB11
 4504 0054 10000000 		.4byte	.LFE11-.LFB11
 4505 0058 00000000 		.4byte	.LFB14
 4506 005c 20000000 		.4byte	.LFE14-.LFB14
 4507 0060 00000000 		.4byte	.LFB15
 4508 0064 10000000 		.4byte	.LFE15-.LFB15
 4509 0068 00000000 		.4byte	.LFB16
 4510 006c 0C000000 		.4byte	.LFE16-.LFB16
 4511 0070 00000000 		.4byte	.LFB17
 4512 0074 14000000 		.4byte	.LFE17-.LFB17
 4513 0078 00000000 		.4byte	.LFB18
 4514 007c 10000000 		.4byte	.LFE18-.LFB18
 4515 0080 00000000 		.4byte	.LFB19
 4516 0084 0C000000 		.4byte	.LFE19-.LFB19
 4517 0088 00000000 		.4byte	.LFB26
 4518 008c 14000000 		.4byte	.LFE26-.LFB26
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 135


 4519 0090 00000000 		.4byte	.LFB27
 4520 0094 18000000 		.4byte	.LFE27-.LFB27
 4521 0098 00000000 		.4byte	.LFB28
 4522 009c 14000000 		.4byte	.LFE28-.LFB28
 4523 00a0 00000000 		.4byte	.LFB29
 4524 00a4 14000000 		.4byte	.LFE29-.LFB29
 4525 00a8 00000000 		.4byte	.LFB30
 4526 00ac 14000000 		.4byte	.LFE30-.LFB30
 4527 00b0 00000000 		.4byte	.LFB31
 4528 00b4 04000000 		.4byte	.LFE31-.LFB31
 4529 00b8 00000000 		.4byte	.LFB12
 4530 00bc 38000000 		.4byte	.LFE12-.LFB12
 4531 00c0 00000000 		.4byte	.LFB20
 4532 00c4 20000000 		.4byte	.LFE20-.LFB20
 4533 00c8 00000000 		.4byte	.LFB21
 4534 00cc 1C000000 		.4byte	.LFE21-.LFB21
 4535 00d0 00000000 		.4byte	.LFB22
 4536 00d4 24000000 		.4byte	.LFE22-.LFB22
 4537 00d8 00000000 		.4byte	.LFB23
 4538 00dc 20000000 		.4byte	.LFE23-.LFB23
 4539 00e0 00000000 		.4byte	.LFB24
 4540 00e4 4C000000 		.4byte	.LFE24-.LFB24
 4541 00e8 00000000 		.4byte	.LFB25
 4542 00ec 2C000000 		.4byte	.LFE25-.LFB25
 4543 00f0 00000000 		.4byte	.LFB32
 4544 00f4 18000000 		.4byte	.LFE32-.LFB32
 4545 00f8 00000000 		.4byte	.LFB33
 4546 00fc 30000000 		.4byte	.LFE33-.LFB33
 4547 0100 00000000 		.4byte	.LFB34
 4548 0104 14000000 		.4byte	.LFE34-.LFB34
 4549 0108 00000000 		.4byte	.LFB9
 4550 010c 54000000 		.4byte	.LFE9-.LFB9
 4551 0110 00000000 		.4byte	.LFB13
 4552 0114 44000000 		.4byte	.LFE13-.LFB13
 4553 0118 00000000 		.4byte	.LFB35
 4554 011c 4C000000 		.4byte	.LFE35-.LFB35
 4555 0120 00000000 		.4byte	.LFB39
 4556 0124 10000000 		.4byte	.LFE39-.LFB39
 4557 0128 00000000 		.4byte	.LFB40
 4558 012c 10000000 		.4byte	.LFE40-.LFB40
 4559 0130 00000000 		.4byte	.LFB38
 4560 0134 18000000 		.4byte	.LFE38-.LFB38
 4561 0138 00000000 		.4byte	.LFB41
 4562 013c 10000000 		.4byte	.LFE41-.LFB41
 4563 0140 00000000 		.4byte	.LFB42
 4564 0144 10000000 		.4byte	.LFE42-.LFB42
 4565 0148 00000000 		.4byte	.LFB43
 4566 014c 10000000 		.4byte	.LFE43-.LFB43
 4567 0150 00000000 		.4byte	.LFB44
 4568 0154 10000000 		.4byte	.LFE44-.LFB44
 4569 0158 00000000 		.4byte	.LFB45
 4570 015c 20000000 		.4byte	.LFE45-.LFB45
 4571 0160 00000000 		.4byte	.LFB46
 4572 0164 10000000 		.4byte	.LFE46-.LFB46
 4573 0168 00000000 		.4byte	.LFB47
 4574 016c 10000000 		.4byte	.LFE47-.LFB47
 4575 0170 00000000 		.4byte	.LFB51
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 136


 4576 0174 28000000 		.4byte	.LFE51-.LFB51
 4577 0178 00000000 		.4byte	.LFB48
 4578 017c 0C000000 		.4byte	.LFE48-.LFB48
 4579 0180 00000000 		.4byte	.LFB37
 4580 0184 4C000000 		.4byte	.LFE37-.LFB37
 4581 0188 00000000 		.4byte	.LFB36
 4582 018c 20000000 		.4byte	.LFE36-.LFB36
 4583 0190 00000000 		.4byte	.LFB49
 4584 0194 10000000 		.4byte	.LFE49-.LFB49
 4585 0198 00000000 		.4byte	.LFB50
 4586 019c 0C000000 		.4byte	.LFE50-.LFB50
 4587 01a0 00000000 		.4byte	.LFB52
 4588 01a4 70000000 		.4byte	.LFE52-.LFB52
 4589 01a8 00000000 		.4byte	0
 4590 01ac 00000000 		.4byte	0
 4591              		.section	.debug_ranges,"",%progbits
 4592              	.Ldebug_ranges0:
 4593 0000 00000000 		.4byte	.LFB2
 4594 0004 14000000 		.4byte	.LFE2
 4595 0008 00000000 		.4byte	.LFB3
 4596 000c 10000000 		.4byte	.LFE3
 4597 0010 00000000 		.4byte	.LFB4
 4598 0014 20000000 		.4byte	.LFE4
 4599 0018 00000000 		.4byte	.LFB5
 4600 001c 38000000 		.4byte	.LFE5
 4601 0020 00000000 		.4byte	.LFB6
 4602 0024 1C000000 		.4byte	.LFE6
 4603 0028 00000000 		.4byte	.LFB7
 4604 002c 28000000 		.4byte	.LFE7
 4605 0030 00000000 		.4byte	.LFB8
 4606 0034 64000000 		.4byte	.LFE8
 4607 0038 00000000 		.4byte	.LFB10
 4608 003c 24000000 		.4byte	.LFE10
 4609 0040 00000000 		.4byte	.LFB11
 4610 0044 10000000 		.4byte	.LFE11
 4611 0048 00000000 		.4byte	.LFB14
 4612 004c 20000000 		.4byte	.LFE14
 4613 0050 00000000 		.4byte	.LFB15
 4614 0054 10000000 		.4byte	.LFE15
 4615 0058 00000000 		.4byte	.LFB16
 4616 005c 0C000000 		.4byte	.LFE16
 4617 0060 00000000 		.4byte	.LFB17
 4618 0064 14000000 		.4byte	.LFE17
 4619 0068 00000000 		.4byte	.LFB18
 4620 006c 10000000 		.4byte	.LFE18
 4621 0070 00000000 		.4byte	.LFB19
 4622 0074 0C000000 		.4byte	.LFE19
 4623 0078 00000000 		.4byte	.LFB26
 4624 007c 14000000 		.4byte	.LFE26
 4625 0080 00000000 		.4byte	.LFB27
 4626 0084 18000000 		.4byte	.LFE27
 4627 0088 00000000 		.4byte	.LFB28
 4628 008c 14000000 		.4byte	.LFE28
 4629 0090 00000000 		.4byte	.LFB29
 4630 0094 14000000 		.4byte	.LFE29
 4631 0098 00000000 		.4byte	.LFB30
 4632 009c 14000000 		.4byte	.LFE30
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 137


 4633 00a0 00000000 		.4byte	.LFB31
 4634 00a4 04000000 		.4byte	.LFE31
 4635 00a8 00000000 		.4byte	.LFB12
 4636 00ac 38000000 		.4byte	.LFE12
 4637 00b0 00000000 		.4byte	.LFB20
 4638 00b4 20000000 		.4byte	.LFE20
 4639 00b8 00000000 		.4byte	.LFB21
 4640 00bc 1C000000 		.4byte	.LFE21
 4641 00c0 00000000 		.4byte	.LFB22
 4642 00c4 24000000 		.4byte	.LFE22
 4643 00c8 00000000 		.4byte	.LFB23
 4644 00cc 20000000 		.4byte	.LFE23
 4645 00d0 00000000 		.4byte	.LFB24
 4646 00d4 4C000000 		.4byte	.LFE24
 4647 00d8 00000000 		.4byte	.LFB25
 4648 00dc 2C000000 		.4byte	.LFE25
 4649 00e0 00000000 		.4byte	.LFB32
 4650 00e4 18000000 		.4byte	.LFE32
 4651 00e8 00000000 		.4byte	.LFB33
 4652 00ec 30000000 		.4byte	.LFE33
 4653 00f0 00000000 		.4byte	.LFB34
 4654 00f4 14000000 		.4byte	.LFE34
 4655 00f8 00000000 		.4byte	.LFB9
 4656 00fc 54000000 		.4byte	.LFE9
 4657 0100 00000000 		.4byte	.LFB13
 4658 0104 44000000 		.4byte	.LFE13
 4659 0108 00000000 		.4byte	.LFB35
 4660 010c 4C000000 		.4byte	.LFE35
 4661 0110 00000000 		.4byte	.LFB39
 4662 0114 10000000 		.4byte	.LFE39
 4663 0118 00000000 		.4byte	.LFB40
 4664 011c 10000000 		.4byte	.LFE40
 4665 0120 00000000 		.4byte	.LFB38
 4666 0124 18000000 		.4byte	.LFE38
 4667 0128 00000000 		.4byte	.LFB41
 4668 012c 10000000 		.4byte	.LFE41
 4669 0130 00000000 		.4byte	.LFB42
 4670 0134 10000000 		.4byte	.LFE42
 4671 0138 00000000 		.4byte	.LFB43
 4672 013c 10000000 		.4byte	.LFE43
 4673 0140 00000000 		.4byte	.LFB44
 4674 0144 10000000 		.4byte	.LFE44
 4675 0148 00000000 		.4byte	.LFB45
 4676 014c 20000000 		.4byte	.LFE45
 4677 0150 00000000 		.4byte	.LFB46
 4678 0154 10000000 		.4byte	.LFE46
 4679 0158 00000000 		.4byte	.LFB47
 4680 015c 10000000 		.4byte	.LFE47
 4681 0160 00000000 		.4byte	.LFB51
 4682 0164 28000000 		.4byte	.LFE51
 4683 0168 00000000 		.4byte	.LFB48
 4684 016c 0C000000 		.4byte	.LFE48
 4685 0170 00000000 		.4byte	.LFB37
 4686 0174 4C000000 		.4byte	.LFE37
 4687 0178 00000000 		.4byte	.LFB36
 4688 017c 20000000 		.4byte	.LFE36
 4689 0180 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 138


 4690 0184 10000000 		.4byte	.LFE49
 4691 0188 00000000 		.4byte	.LFB50
 4692 018c 0C000000 		.4byte	.LFE50
 4693 0190 00000000 		.4byte	.LFB52
 4694 0194 70000000 		.4byte	.LFE52
 4695 0198 00000000 		.4byte	0
 4696 019c 00000000 		.4byte	0
 4697              		.section	.debug_line,"",%progbits
 4698              	.Ldebug_line0:
 4699 0000 C9040000 		.section	.debug_str,"MS",%progbits,1
 4699      02004D00 
 4699      00000201 
 4699      FB0E0D00 
 4699      01010101 
 4700              	.LASF60:
 4701 0000 72616D56 		.ascii	"ramVectorTable\000"
 4701      6563746F 
 4701      72546162 
 4701      6C6500
 4702              	.LASF10:
 4703 000f 75696E74 		.ascii	"uint16\000"
 4703      313600
 4704              	.LASF46:
 4705 0016 696E7453 		.ascii	"intState\000"
 4705      74617465 
 4705      00
 4706              	.LASF25:
 4707 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4707      73436C6B 
 4707      57726974 
 4707      65486663 
 4707      6C6B4469 
 4708              	.LASF107:
 4709 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4709      73436C6B 
 4709      50756D70 
 4709      436F6E66 
 4709      696700
 4710              	.LASF59:
 4711 004b 6F6C6449 		.ascii	"oldIsr\000"
 4711      737200
 4712              	.LASF96:
 4713 0052 72657456 		.ascii	"retVal\000"
 4713      616C00
 4714              	.LASF45:
 4715 0059 43794469 		.ascii	"CyDisableInts\000"
 4715      7361626C 
 4715      65496E74 
 4715      7300
 4716              	.LASF7:
 4717 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 4717      206C6F6E 
 4717      6720756E 
 4717      7369676E 
 4717      65642069 
 4718              	.LASF34:
 4719 007e 70617261 		.ascii	"parameters\000"
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 139


 4719      6D657465 
 4719      727300
 4720              	.LASF47:
 4721 0089 4379456E 		.ascii	"CyEnableInts\000"
 4721      61626C65 
 4721      496E7473 
 4721      00
 4722              	.LASF69:
 4723 0096 4379536F 		.ascii	"CySoftwareReset\000"
 4723      66747761 
 4723      72655265 
 4723      73657400 
 4724              	.LASF80:
 4725 00a6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4725      73546963 
 4725      6B456E61 
 4725      626C6549 
 4725      6E746572 
 4726              	.LASF51:
 4727 00bf 4379496E 		.ascii	"CyIntGetState\000"
 4727      74476574 
 4727      53746174 
 4727      6500
 4728              	.LASF6:
 4729 00cd 6C6F6E67 		.ascii	"long long int\000"
 4729      206C6F6E 
 4729      6720696E 
 4729      7400
 4730              	.LASF0:
 4731 00db 7369676E 		.ascii	"signed char\000"
 4731      65642063 
 4731      68617200 
 4732              	.LASF33:
 4733 00e7 66726571 		.ascii	"freq\000"
 4733      00
 4734              	.LASF78:
 4735 00ec 43794465 		.ascii	"CyDelayFreq\000"
 4735      6C617946 
 4735      72657100 
 4736              	.LASF23:
 4737 00f8 696E7465 		.ascii	"interruptState\000"
 4737      72727570 
 4737      74537461 
 4737      746500
 4738              	.LASF85:
 4739 0107 43795379 		.ascii	"CySysTickGetReload\000"
 4739      73546963 
 4739      6B476574 
 4739      52656C6F 
 4739      616400
 4740              	.LASF4:
 4741 011a 6C6F6E67 		.ascii	"long int\000"
 4741      20696E74 
 4741      00
 4742              	.LASF52:
 4743 0123 4379496E 		.ascii	"CyIntDisable\000"
 4743      74446973 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 140


 4743      61626C65 
 4743      00
 4744              	.LASF35:
 4745 0130 72656756 		.ascii	"regValues\000"
 4745      616C7565 
 4745      7300
 4746              	.LASF9:
 4747 013a 75696E74 		.ascii	"uint8\000"
 4747      3800
 4748              	.LASF102:
 4749 0140 63796465 		.ascii	"cydelayFreqKhz\000"
 4749      6C617946 
 4749      7265714B 
 4749      687A00
 4750              	.LASF28:
 4751 014f 656E6162 		.ascii	"enable\000"
 4751      6C6500
 4752              	.LASF13:
 4753 0156 646F7562 		.ascii	"double\000"
 4753      6C6500
 4754              	.LASF66:
 4755 015d 73686966 		.ascii	"shift\000"
 4755      7400
 4756              	.LASF41:
 4757 0163 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4757      734C7664 
 4757      436C6561 
 4757      72496E74 
 4757      65727275 
 4758              	.LASF11:
 4759 017a 75696E74 		.ascii	"uint32\000"
 4759      333200
 4760              	.LASF38:
 4761 0181 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4761      73436C6B 
 4761      45636F52 
 4761      65616453 
 4761      74617475 
 4762              	.LASF48:
 4763 0197 6D61736B 		.ascii	"mask\000"
 4763      00
 4764              	.LASF37:
 4765 019c 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4765      73436C6B 
 4765      47657453 
 4765      7973636C 
 4765      6B536F75 
 4766              	.LASF68:
 4767 01b4 4379496E 		.ascii	"CyIntGetPriority\000"
 4767      74476574 
 4767      5072696F 
 4767      72697479 
 4767      00
 4768              	.LASF104:
 4769 01c5 63796465 		.ascii	"cydelay32kMs\000"
 4769      6C617933 
 4769      326B4D73 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 141


 4769      00
 4770              	.LASF92:
 4771 01d2 43795379 		.ascii	"CySysTickInit\000"
 4771      73546963 
 4771      6B496E69 
 4771      7400
 4772              	.LASF67:
 4773 01e0 76616C75 		.ascii	"value\000"
 4773      6500
 4774              	.LASF88:
 4775 01e6 636C6F63 		.ascii	"clockSource\000"
 4775      6B536F75 
 4775      72636500 
 4776              	.LASF98:
 4777 01f2 43794765 		.ascii	"CyGetUniqueId\000"
 4777      74556E69 
 4777      71756549 
 4777      6400
 4778              	.LASF90:
 4779 0200 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4779      73546963 
 4779      6B476574 
 4779      436F756E 
 4779      74466C61 
 4780              	.LASF8:
 4781 0216 756E7369 		.ascii	"unsigned int\000"
 4781      676E6564 
 4781      20696E74 
 4781      00
 4782              	.LASF91:
 4783 0223 43795379 		.ascii	"CySysTickClear\000"
 4783      73546963 
 4783      6B436C65 
 4783      617200
 4784              	.LASF5:
 4785 0232 6C6F6E67 		.ascii	"long unsigned int\000"
 4785      20756E73 
 4785      69676E65 
 4785      6420696E 
 4785      7400
 4786              	.LASF84:
 4787 0244 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4787      734C7664 
 4787      47657449 
 4787      6E746572 
 4787      72757074 
 4788              	.LASF22:
 4789 025f 43795379 		.ascii	"CySysClkImoStop\000"
 4789      73436C6B 
 4789      496D6F53 
 4789      746F7000 
 4790              	.LASF112:
 4791 026f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4791      74657243 
 4791      72697469 
 4791      63616C53 
 4791      65637469 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 142


 4792              	.LASF53:
 4793 0286 4379496E 		.ascii	"CyIntSetPending\000"
 4793      74536574 
 4793      50656E64 
 4793      696E6700 
 4794              	.LASF97:
 4795 0296 43795379 		.ascii	"CySysTickGetCallback\000"
 4795      73546963 
 4795      6B476574 
 4795      43616C6C 
 4795      6261636B 
 4796              	.LASF42:
 4797 02ab 43795379 		.ascii	"CySysGetResetReason\000"
 4797      73476574 
 4797      52657365 
 4797      74526561 
 4797      736F6E00 
 4798              	.LASF3:
 4799 02bf 73686F72 		.ascii	"short unsigned int\000"
 4799      7420756E 
 4799      7369676E 
 4799      65642069 
 4799      6E7400
 4800              	.LASF87:
 4801 02d2 43795379 		.ascii	"CySysTickSetClockSource\000"
 4801      73546963 
 4801      6B536574 
 4801      436C6F63 
 4801      6B536F75 
 4802              	.LASF62:
 4803 02ea 4379496E 		.ascii	"CyIntSetVector\000"
 4803      74536574 
 4803      56656374 
 4803      6F7200
 4804              	.LASF50:
 4805 02f9 6E756D62 		.ascii	"number\000"
 4805      657200
 4806              	.LASF65:
 4807 0300 7072696F 		.ascii	"priority\000"
 4807      72697479 
 4807      00
 4808              	.LASF32:
 4809 0309 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4809      73436C6B 
 4809      57726974 
 4809      65496D6F 
 4809      46726571 
 4810              	.LASF57:
 4811 031e 4379496E 		.ascii	"CyIntSetSysVector\000"
 4811      74536574 
 4811      53797356 
 4811      6563746F 
 4811      7200
 4812              	.LASF26:
 4813 0330 43795379 		.ascii	"CySysEnablePumpClock\000"
 4813      73456E61 
 4813      626C6550 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 143


 4813      756D7043 
 4813      6C6F636B 
 4814              	.LASF17:
 4815 0345 72656733 		.ascii	"reg32\000"
 4815      3200
 4816              	.LASF93:
 4817 034b 43795379 		.ascii	"CySysTickStart\000"
 4817      73546963 
 4817      6B537461 
 4817      727400
 4818              	.LASF44:
 4819 035a 72657475 		.ascii	"returnStatus\000"
 4819      726E5374 
 4819      61747573 
 4819      00
 4820              	.LASF19:
 4821 0367 73697A65 		.ascii	"sizetype\000"
 4821      74797065 
 4821      00
 4822              	.LASF105:
 4823 0370 43795379 		.ascii	"CySysTickInitVar\000"
 4823      73546963 
 4823      6B496E69 
 4823      74566172 
 4823      00
 4824              	.LASF54:
 4825 0381 4379496E 		.ascii	"CyIntClearPending\000"
 4825      74436C65 
 4825      61725065 
 4825      6E64696E 
 4825      6700
 4826              	.LASF58:
 4827 0393 61646472 		.ascii	"address\000"
 4827      65737300 
 4828              	.LASF29:
 4829 039b 73797363 		.ascii	"sysclkSource\000"
 4829      6C6B536F 
 4829      75726365 
 4829      00
 4830              	.LASF95:
 4831 03a8 66756E63 		.ascii	"function\000"
 4831      74696F6E 
 4831      00
 4832              	.LASF106:
 4833 03b1 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4833      6F467265 
 4833      714D687A 
 4833      32526567 
 4833      00
 4834              	.LASF86:
 4835 03c2 43795379 		.ascii	"CySysTickGetValue\000"
 4835      73546963 
 4835      6B476574 
 4835      56616C75 
 4835      6500
 4836              	.LASF108:
 4837 03d4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 144


 4837      4320342E 
 4837      392E3320 
 4837      32303135 
 4837      30333033 
 4838 0407 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4838      20726576 
 4838      6973696F 
 4838      6E203232 
 4838      31323230 
 4839 043a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4839      66756E63 
 4839      74696F6E 
 4839      2D736563 
 4839      74696F6E 
 4840              	.LASF101:
 4841 0462 63796465 		.ascii	"cydelayFreqHz\000"
 4841      6C617946 
 4841      72657148 
 4841      7A00
 4842              	.LASF64:
 4843 0470 4379496E 		.ascii	"CyIntSetPriority\000"
 4843      74536574 
 4843      5072696F 
 4843      72697479 
 4843      00
 4844              	.LASF12:
 4845 0481 666C6F61 		.ascii	"float\000"
 4845      7400
 4846              	.LASF113:
 4847 0487 43794578 		.ascii	"CyExitCriticalSection\000"
 4847      69744372 
 4847      69746963 
 4847      616C5365 
 4847      6374696F 
 4848              	.LASF76:
 4849 049d 43795379 		.ascii	"CySysLvdEnable\000"
 4849      734C7664 
 4849      456E6162 
 4849      6C6500
 4850              	.LASF20:
 4851 04ac 63795379 		.ascii	"cySysTickCallback\000"
 4851      73546963 
 4851      6B43616C 
 4851      6C626163 
 4851      6B00
 4852              	.LASF63:
 4853 04be 4379496E 		.ascii	"CyIntGetVector\000"
 4853      74476574 
 4853      56656374 
 4853      6F7200
 4854              	.LASF71:
 4855 04cd 6D696C6C 		.ascii	"milliseconds\000"
 4855      69736563 
 4855      6F6E6473 
 4855      00
 4856              	.LASF114:
 4857 04da 43794465 		.ascii	"CyDelayCycles\000"
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 145


 4857      6C617943 
 4857      79636C65 
 4857      7300
 4858              	.LASF16:
 4859 04e8 72656738 		.ascii	"reg8\000"
 4859      00
 4860              	.LASF77:
 4861 04ed 74687265 		.ascii	"threshold\000"
 4861      73686F6C 
 4861      6400
 4862              	.LASF55:
 4863 04f7 43794861 		.ascii	"CyHalt\000"
 4863      6C7400
 4864              	.LASF1:
 4865 04fe 756E7369 		.ascii	"unsigned char\000"
 4865      676E6564 
 4865      20636861 
 4865      7200
 4866              	.LASF2:
 4867 050c 73686F72 		.ascii	"short int\000"
 4867      7420696E 
 4867      7400
 4868              	.LASF49:
 4869 0516 4379496E 		.ascii	"CyIntEnable\000"
 4869      74456E61 
 4869      626C6500 
 4870              	.LASF61:
 4871 0522 4379496E 		.ascii	"CyIntGetSysVector\000"
 4871      74476574 
 4871      53797356 
 4871      6563746F 
 4871      7200
 4872              	.LASF27:
 4873 0534 636C6B53 		.ascii	"clkSelect\000"
 4873      656C6563 
 4873      7400
 4874              	.LASF74:
 4875 053e 43795379 		.ascii	"CySysClkEcoStart\000"
 4875      73436C6B 
 4875      45636F53 
 4875      74617274 
 4875      00
 4876              	.LASF72:
 4877 054f 43794465 		.ascii	"CyDelayUs\000"
 4877      6C617955 
 4877      7300
 4878              	.LASF43:
 4879 0559 72656173 		.ascii	"reason\000"
 4879      6F6E00
 4880              	.LASF14:
 4881 0560 63686172 		.ascii	"char\000"
 4881      00
 4882              	.LASF18:
 4883 0565 63796973 		.ascii	"cyisraddress\000"
 4883      72616464 
 4883      72657373 
 4883      00
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 146


 4884              	.LASF81:
 4885 0572 43795379 		.ascii	"CySysTickEnable\000"
 4885      73546963 
 4885      6B456E61 
 4885      626C6500 
 4886              	.LASF110:
 4887 0582 443A5C43 		.ascii	"D:\\Chau Nguyen\\OneDrive\\Arrow\\RangDong\\RangDon"
 4887      68617520 
 4887      4E677579 
 4887      656E5C4F 
 4887      6E654472 
 4888 05b0 6744656D 		.ascii	"gDemo\\BLE_RGB_TOUCH.cydsn\000"
 4888      6F5C424C 
 4888      455F5247 
 4888      425F544F 
 4888      5543482E 
 4889              	.LASF30:
 4890 05ca 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4890      73436C6B 
 4890      57726974 
 4890      65537973 
 4890      636C6B44 
 4891              	.LASF94:
 4892 05e1 43795379 		.ascii	"CySysTickSetCallback\000"
 4892      73546963 
 4892      6B536574 
 4892      43616C6C 
 4892      6261636B 
 4893              	.LASF100:
 4894 05f6 43795379 		.ascii	"CySysTickCallbacks\000"
 4894      73546963 
 4894      6B43616C 
 4894      6C626163 
 4894      6B7300
 4895              	.LASF99:
 4896 0609 756E6971 		.ascii	"uniqueId\000"
 4896      75654964 
 4896      00
 4897              	.LASF70:
 4898 0612 43794465 		.ascii	"CyDelay\000"
 4898      6C617900 
 4899              	.LASF89:
 4900 061a 43795379 		.ascii	"CySysTickGetClockSource\000"
 4900      73546963 
 4900      6B476574 
 4900      436C6F63 
 4900      6B536F75 
 4901              	.LASF82:
 4902 0632 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4902      73546963 
 4902      6B446973 
 4902      61626C65 
 4902      496E7465 
 4903              	.LASF40:
 4904 064c 43795379 		.ascii	"CySysLvdDisable\000"
 4904      734C7664 
 4904      44697361 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 147


 4904      626C6500 
 4905              	.LASF103:
 4906 065c 63796465 		.ascii	"cydelayFreqMhz\000"
 4906      6C617946 
 4906      7265714D 
 4906      687A00
 4907              	.LASF36:
 4908 066b 43795379 		.ascii	"CySysClkEcoStop\000"
 4908      73436C6B 
 4908      45636F53 
 4908      746F7000 
 4909              	.LASF79:
 4910 067b 43795379 		.ascii	"CySysTickStop\000"
 4910      73546963 
 4910      6B53746F 
 4910      7000
 4911              	.LASF75:
 4912 0689 74696D65 		.ascii	"timeoutUs\000"
 4912      6F757455 
 4912      7300
 4913              	.LASF31:
 4914 0693 64697669 		.ascii	"divider\000"
 4914      64657200 
 4915              	.LASF56:
 4916 069b 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 4916      73436C6B 
 4916      57726974 
 4916      6545636F 
 4916      44697600 
 4917              	.LASF15:
 4918 06af 63797374 		.ascii	"cystatus\000"
 4918      61747573 
 4918      00
 4919              	.LASF21:
 4920 06b8 43795379 		.ascii	"CySysClkImoStart\000"
 4920      73436C6B 
 4920      496D6F53 
 4920      74617274 
 4920      00
 4921              	.LASF109:
 4922 06c9 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4922      72617465 
 4922      645F536F 
 4922      75726365 
 4922      5C50536F 
 4923              	.LASF73:
 4924 06e8 6D696372 		.ascii	"microseconds\000"
 4924      6F736563 
 4924      6F6E6473 
 4924      00
 4925              	.LASF24:
 4926 06f5 746D7052 		.ascii	"tmpReg\000"
 4926      656700
 4927              	.LASF83:
 4928 06fc 43795379 		.ascii	"CySysTickSetReload\000"
 4928      73546963 
 4928      6B536574 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccjvFRei.s 			page 148


 4928      52656C6F 
 4928      616400
 4929              	.LASF111:
 4930 070f 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4930      73546963 
 4930      6B536572 
 4930      76696365 
 4930      43616C6C 
 4931              	.LASF39:
 4932 0729 72657475 		.ascii	"returnValue\000"
 4932      726E5661 
 4932      6C756500 
 4933              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
