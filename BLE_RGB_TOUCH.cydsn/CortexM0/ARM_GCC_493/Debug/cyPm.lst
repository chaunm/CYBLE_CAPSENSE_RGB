ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"cyPm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysPmSleep,"ax",%progbits
  18              		.align	2
  19              		.global	CySysPmSleep
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysPmSleep, %function
  23              	CySysPmSleep:
  24              	.LFB3:
  25              		.file 1 "Generated_Source\\PSoC4\\cyPm.c"
   1:Generated_Source\PSoC4/cyPm.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.c **** * \file cyPm.c
   3:Generated_Source\PSoC4/cyPm.c **** * \version 5.50
   4:Generated_Source\PSoC4/cyPm.c **** *
   5:Generated_Source\PSoC4/cyPm.c **** * \brief Provides an API for the power management.
   6:Generated_Source\PSoC4/cyPm.c **** *
   7:Generated_Source\PSoC4/cyPm.c **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.c **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.c **** *
  10:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.c **** * \copyright
  12:Generated_Source\PSoC4/cyPm.c **** * Copyright 2011-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.c **** 
  18:Generated_Source\PSoC4/cyPm.c **** #include "cyPm.h"
  19:Generated_Source\PSoC4/cyPm.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/cyPm.c **** 
  21:Generated_Source\PSoC4/cyPm.c **** 
  22:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  23:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmSleep
  24:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  25:Generated_Source\PSoC4/cyPm.c **** *
  26:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Sleep state. This is a CPU-centric power mode.
  27:Generated_Source\PSoC4/cyPm.c **** * It means that the CPU has indicated that it is in the sleep mode and
  28:Generated_Source\PSoC4/cyPm.c **** * its main clock can be removed. It is identical to Active from a peripheral
  29:Generated_Source\PSoC4/cyPm.c **** * point of view. Any enabled interrupts can cause wakeup from the Sleep mode.
  30:Generated_Source\PSoC4/cyPm.c **** *
  31:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  32:Generated_Source\PSoC4/cyPm.c **** void CySysPmSleep(void)
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 2


  33:Generated_Source\PSoC4/cyPm.c **** {
  26              		.loc 1 33 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  34:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  35:Generated_Source\PSoC4/cyPm.c **** 
  36:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  32              		.loc 1 36 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
  37:Generated_Source\PSoC4/cyPm.c **** 
  38:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters Sleep mode upon execution of WFI */
  39:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG &= (uint32) (~CY_PM_CPU_SCR_SLEEPDEEP);
  35              		.loc 1 39 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0421     		mov	r1, #4
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
  40:Generated_Source\PSoC4/cyPm.c **** 
  41:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  42:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
  41              		.loc 1 42 0
  42              	@ 42 "Generated_Source\PSoC4\cyPm.c" 1
  43 0010 30BF     		WFI 
  44              	
  45              	@ 0 "" 2
  43:Generated_Source\PSoC4/cyPm.c **** 
  44:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
  46              		.loc 1 44 0
  47              		.code	16
  48 0012 FFF7FEFF 		bl	CyExitCriticalSection
  49              	.LVL1:
  45:Generated_Source\PSoC4/cyPm.c **** }
  50              		.loc 1 45 0
  51              		@ sp needed
  52 0016 08BD     		pop	{r3, pc}
  53              	.L3:
  54              		.align	2
  55              	.L2:
  56 0018 10ED00E0 		.word	-536810224
  57              		.cfi_endproc
  58              	.LFE3:
  59              		.size	CySysPmSleep, .-CySysPmSleep
  60              		.section	.text.CySysPmDeepSleep,"ax",%progbits
  61              		.align	2
  62              		.global	CySysPmDeepSleep
  63              		.code	16
  64              		.thumb_func
  65              		.type	CySysPmDeepSleep, %function
  66              	CySysPmDeepSleep:
  67              	.LFB4:
  46:Generated_Source\PSoC4/cyPm.c **** 
  47:Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 3


  48:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  49:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmDeepSleep
  50:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  51:Generated_Source\PSoC4/cyPm.c **** *
  52:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Deep Sleep state. If the firmware attempts to enter
  53:Generated_Source\PSoC4/cyPm.c **** * this mode before the system is ready (that is, when
  54:Generated_Source\PSoC4/cyPm.c **** * PWR_CONTROL.LPM_READY = 0), then the device will go into the Sleep mode
  55:Generated_Source\PSoC4/cyPm.c **** * instead and automatically enter the originally intended mode when the
  56:Generated_Source\PSoC4/cyPm.c **** * holdoff expires.
  57:Generated_Source\PSoC4/cyPm.c **** *
  58:Generated_Source\PSoC4/cyPm.c **** * The wakeup occurs when an interrupt is received from a DeepSleep or
  59:Generated_Source\PSoC4/cyPm.c **** * Hibernate peripheral. For more details, see a corresponding
  60:Generated_Source\PSoC4/cyPm.c **** * peripheral's datasheet.
  61:Generated_Source\PSoC4/cyPm.c **** *
  62:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/cyPm.c **** void CySysPmDeepSleep(void)
  64:Generated_Source\PSoC4/cyPm.c **** {
  68              		.loc 1 64 0
  69              		.cfi_startproc
  70 0000 30B5     		push	{r4, r5, lr}
  71              		.cfi_def_cfa_offset 12
  72              		.cfi_offset 4, -12
  73              		.cfi_offset 5, -8
  74              		.cfi_offset 14, -4
  75 0002 83B0     		sub	sp, sp, #12
  76              		.cfi_def_cfa_offset 24
  65:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  66:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  67:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 clkSelectReg;
  68:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  69:Generated_Source\PSoC4/cyPm.c **** 
  70:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  77              		.loc 1 70 0
  78 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  79              	.LVL2:
  80 0008 041C     		mov	r4, r0
  81              	.LVL3:
  71:Generated_Source\PSoC4/cyPm.c **** 
  72:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  73:Generated_Source\PSoC4/cyPm.c ****         /* Device enters DeepSleep mode when CPU asserts SLEEPDEEP signal */
  74:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG &= (uint32) (~CY_PM_PWR_CONTROL_HIBERNATE);
  82              		.loc 1 74 0
  83 000a 0E4A     		ldr	r2, .L5
  84 000c 1368     		ldr	r3, [r2]
  85 000e 5B00     		lsl	r3, r3, #1
  86 0010 5B08     		lsr	r3, r3, #1
  87 0012 1360     		str	r3, [r2]
  75:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  76:Generated_Source\PSoC4/cyPm.c **** 
  77:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
  78:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG |= CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS;
  79:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
  80:Generated_Source\PSoC4/cyPm.c **** 
  81:Generated_Source\PSoC4/cyPm.c ****     /* Adjust delay to wait for references to settle on wakeup from Deep Sleep */
  82:Generated_Source\PSoC4/cyPm.c ****     CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_DPSLP_KEY_DELAY_REG;
  88              		.loc 1 82 0
  89 0014 0C4B     		ldr	r3, .L5+4
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 4


  90 0016 1B88     		ldrh	r3, [r3]
  91 0018 9BB2     		uxth	r3, r3
  92 001a 0C4A     		ldr	r2, .L5+8
  93 001c 1360     		str	r3, [r2]
  83:Generated_Source\PSoC4/cyPm.c **** 
  84:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
  85:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
  94              		.loc 1 85 0
  95 001e 0C4A     		ldr	r2, .L5+12
  96 0020 1168     		ldr	r1, [r2]
  97 0022 0423     		mov	r3, #4
  98 0024 0B43     		orr	r3, r1
  99 0026 1360     		str	r3, [r2]
  86:Generated_Source\PSoC4/cyPm.c **** 
  87:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  88:Generated_Source\PSoC4/cyPm.c ****         /* Preserve system clock configuration and
  89:Generated_Source\PSoC4/cyPm.c ****         * reduce sysclk to <=12 MHz (Cypress ID #158710, #179888).
  90:Generated_Source\PSoC4/cyPm.c ****         */
  91:Generated_Source\PSoC4/cyPm.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
 100              		.loc 1 91 0
 101 0028 0A4D     		ldr	r5, .L5+16
 102 002a 2B68     		ldr	r3, [r5]
 103 002c 0193     		str	r3, [sp, #4]
  92:Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
 104              		.loc 1 92 0
 105 002e 0220     		mov	r0, #2
 106 0030 FFF7FEFF 		bl	CySysClkWriteSysclkDiv
 107              	.LVL4:
  93:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  94:Generated_Source\PSoC4/cyPm.c **** 
  95:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  96:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
 108              		.loc 1 96 0
 109              	@ 96 "Generated_Source\PSoC4\cyPm.c" 1
 110 0034 30BF     		WFI 
 111              	
 112              	@ 0 "" 2
  97:Generated_Source\PSoC4/cyPm.c **** 
  98:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  99:Generated_Source\PSoC4/cyPm.c ****         /* Restore system clock configuration */
 100:Generated_Source\PSoC4/cyPm.c ****         CY_SYS_CLK_SELECT_REG = clkSelectReg;
 113              		.loc 1 100 0
 114              		.code	16
 115 0036 019B     		ldr	r3, [sp, #4]
 116 0038 2B60     		str	r3, [r5]
 101:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 102:Generated_Source\PSoC4/cyPm.c **** 
 103:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
 104:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG &= (uint32) (~CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS);
 105:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
 106:Generated_Source\PSoC4/cyPm.c **** 
 107:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
 117              		.loc 1 107 0
 118 003a 201C     		mov	r0, r4
 119 003c FFF7FEFF 		bl	CyExitCriticalSection
 120              	.LVL5:
 108:Generated_Source\PSoC4/cyPm.c **** }
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 5


 121              		.loc 1 108 0
 122 0040 03B0     		add	sp, sp, #12
 123              		@ sp needed
 124              	.LVL6:
 125 0042 30BD     		pop	{r4, r5, pc}
 126              	.L6:
 127              		.align	2
 128              	.L5:
 129 0044 00000B40 		.word	1074462720
 130 0048 52F1FF0F 		.word	268431698
 131 004c 0C000B40 		.word	1074462732
 132 0050 10ED00E0 		.word	-536810224
 133 0054 00010B40 		.word	1074462976
 134              		.cfi_endproc
 135              	.LFE4:
 136              		.size	CySysPmDeepSleep, .-CySysPmDeepSleep
 137              		.section	.text.CySysPmHibernate,"ax",%progbits
 138              		.align	2
 139              		.global	CySysPmHibernate
 140              		.code	16
 141              		.thumb_func
 142              		.type	CySysPmHibernate, %function
 143              	CySysPmHibernate:
 144              	.LFB5:
 109:Generated_Source\PSoC4/cyPm.c **** 
 110:Generated_Source\PSoC4/cyPm.c **** 
 111:Generated_Source\PSoC4/cyPm.c **** #if(CY_IP_SRSSV2)
 112:Generated_Source\PSoC4/cyPm.c **** 
 113:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 114:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmHibernate
 115:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC4/cyPm.c ****     *
 117:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Hibernate state. Only SRAM and UDBs are retained;
 118:Generated_Source\PSoC4/cyPm.c ****     * most internal supplies are off. Wakeup is possible from a pin or a hibernate
 119:Generated_Source\PSoC4/cyPm.c ****     * comparator only.
 120:Generated_Source\PSoC4/cyPm.c ****     *
 121:Generated_Source\PSoC4/cyPm.c ****     * It is expected that the firmware has already frozen the IO-Cells using
 122:Generated_Source\PSoC4/cyPm.c ****     * CySysPmFreezeIo() function before the call to this function. If this is
 123:Generated_Source\PSoC4/cyPm.c ****     * omitted, the IO-cells will be frozen in the same way as they are
 124:Generated_Source\PSoC4/cyPm.c ****     * in the Active to Deep Sleep transition, but will lose their state on wake up
 125:Generated_Source\PSoC4/cyPm.c ****     * (because of the reset occurring at that time).
 126:Generated_Source\PSoC4/cyPm.c ****     *
 127:Generated_Source\PSoC4/cyPm.c ****     * Because all the CPU state is lost, the CPU will start up at the reset vector.
 128:Generated_Source\PSoC4/cyPm.c ****     * To save the firmware state through the Hibernate low power mode, a
 129:Generated_Source\PSoC4/cyPm.c ****     * corresponding variable should be defined with CY_NOINIT attribute. It
 130:Generated_Source\PSoC4/cyPm.c ****     * prevents data from being initialized to zero on startup. The interrupt
 131:Generated_Source\PSoC4/cyPm.c ****     * cause of the hibernate peripheral is retained, such that it can be either
 132:Generated_Source\PSoC4/cyPm.c ****     * read by the firmware or cause an interrupt after the firmware has booted and
 133:Generated_Source\PSoC4/cyPm.c ****     * enabled the corresponding interrupt. To distinguish the wakeup from
 134:Generated_Source\PSoC4/cyPm.c ****     * the Hibernate mode and the general Reset event, the
 135:Generated_Source\PSoC4/cyPm.c ****     * \ref CySysPmGetResetReason() function could be used.
 136:Generated_Source\PSoC4/cyPm.c ****     *
 137:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 138:Generated_Source\PSoC4/cyPm.c ****     void CySysPmHibernate(void)
 139:Generated_Source\PSoC4/cyPm.c ****     {
 145              		.loc 1 139 0
 146              		.cfi_startproc
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 6


 147 0000 08B5     		push	{r3, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 3, -8
 150              		.cfi_offset 14, -4
 140:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 141:Generated_Source\PSoC4/cyPm.c **** 
 142:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 151              		.loc 1 142 0
 152 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 153              	.LVL7:
 154              	.LBB4:
 155              	.LBB5:
 156              		.file 2 "Generated_Source\\PSoC4\\cyPm.h"
   1:Generated_Source\PSoC4/cyPm.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.h **** * \file cyPm.h
   3:Generated_Source\PSoC4/cyPm.h **** * \version 5.50
   4:Generated_Source\PSoC4/cyPm.h **** *
   5:Generated_Source\PSoC4/cyPm.h **** * \brief Provides the function definitions for the power management API.
   6:Generated_Source\PSoC4/cyPm.h **** *
   7:Generated_Source\PSoC4/cyPm.h **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.h **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.h **** *
  10:Generated_Source\PSoC4/cyPm.h **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.h **** * \copyright
  12:Generated_Source\PSoC4/cyPm.h **** * Copyright 2011-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.h **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.h **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.h **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.h **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.h **** 
  18:Generated_Source\PSoC4/cyPm.h **** #if !defined(CY_BOOT_CYPM_H)
  19:Generated_Source\PSoC4/cyPm.h **** #define CY_BOOT_CYPM_H
  20:Generated_Source\PSoC4/cyPm.h **** 
  21:Generated_Source\PSoC4/cyPm.h **** #include "cytypes.h"
  22:Generated_Source\PSoC4/cyPm.h **** #include "cypins.h"
  23:Generated_Source\PSoC4/cyPm.h **** 
  24:Generated_Source\PSoC4/cyPm.h **** 
  25:Generated_Source\PSoC4/cyPm.h **** /**
  26:Generated_Source\PSoC4/cyPm.h **** * \addtogroup group_power_management Power Management API
  27:Generated_Source\PSoC4/cyPm.h **** * @{
  28:Generated_Source\PSoC4/cyPm.h **** 
  29:Generated_Source\PSoC4/cyPm.h **** \brief PSoC 4 devices support the following power modes (in order of high to low power consumption)
  30:Generated_Source\PSoC4/cyPm.h **** Deep Sleep, Hibernate, and Stop. Active, Sleep and Deep-Sleep are standard ARM defined power modes,
  31:Generated_Source\PSoC4/cyPm.h **** ARM CPUs. Hibernate/Stop are even lower power modes that are entered from firmware just like Deep-S
  32:Generated_Source\PSoC4/cyPm.h **** the CPU (and all peripherals) goes through a full reset.
  33:Generated_Source\PSoC4/cyPm.h **** 
  34:Generated_Source\PSoC4/cyPm.h **** There is a full range of power modes supported by PSoC devices to control power consumption and the
  35:Generated_Source\PSoC4/cyPm.h **** resources. See the following table for the supported power modes.
  36:Generated_Source\PSoC4/cyPm.h **** 
  37:Generated_Source\PSoC4/cyPm.h **** Mode        | PSoC 4000              | Rest Devices           |
  38:Generated_Source\PSoC4/cyPm.h **** ----------- | ---------------------- | ---------------------- |
  39:Generated_Source\PSoC4/cyPm.h **** Active      |          Y             |       Y                |
  40:Generated_Source\PSoC4/cyPm.h **** Sleep       |          Y             |       Y                |
  41:Generated_Source\PSoC4/cyPm.h **** Deep Sleep  |          Y             |       Y                |
  42:Generated_Source\PSoC4/cyPm.h **** Hibernate   |          Y             |       Y                |
  43:Generated_Source\PSoC4/cyPm.h **** Stop        |                        |       Y                |
  44:Generated_Source\PSoC4/cyPm.h **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 7


  45:Generated_Source\PSoC4/cyPm.h **** For the ARM-based devices (PSoC 4), an interrupt is required for the CPU to wake up. The Power Mana
  46:Generated_Source\PSoC4/cyPm.h **** assumes that wakeup time is configured with a separate component (component-based wakeup time confi
  47:Generated_Source\PSoC4/cyPm.h **** interrupt to be issued on terminal count.
  48:Generated_Source\PSoC4/cyPm.h **** 
  49:Generated_Source\PSoC4/cyPm.h **** All pending interrupts should be cleared before the device is put into low power mode, even if they
  50:Generated_Source\PSoC4/cyPm.h **** 
  51:Generated_Source\PSoC4/cyPm.h **** The Power Management API is provided in the CyPm.c and CyPm.h files.
  52:Generated_Source\PSoC4/cyPm.h **** 
  53:Generated_Source\PSoC4/cyPm.h **** 
  54:Generated_Source\PSoC4/cyPm.h **** \section group_power_management_implementation Implementation
  55:Generated_Source\PSoC4/cyPm.h **** For PSoC 4100 and PSoC 4200 devices, the software should set EXT_VCCD bit in the PWR_CONTROL regist
  56:Generated_Source\PSoC4/cyPm.h **** shorted to Vddd on the board. This impacts the chip internal state transitions where it is necessar
  57:Generated_Source\PSoC4/cyPm.h **** Vccd is connected or floating to achieve minimum current in low power modes. Note Setting this bit 
  58:Generated_Source\PSoC4/cyPm.h **** regulator and will lead to a system reset unless both Vddd and Vccd pins are supplied externally. R
  59:Generated_Source\PSoC4/cyPm.h **** TRM for more information.
  60:Generated_Source\PSoC4/cyPm.h **** 
  61:Generated_Source\PSoC4/cyPm.h **** It is safe to call PM APIs from the ISR. The wakeup conditions for Sleep and DeepSleep low power mo
  62:Generated_Source\PSoC4/cyPm.h **** in the following table.
  63:Generated_Source\PSoC4/cyPm.h **** 
  64:Generated_Source\PSoC4/cyPm.h **** Interrupts State  |  Condition                      | Wakeup    |   ISR Execution   |
  65:Generated_Source\PSoC4/cyPm.h **** ------------------|---------------------------------|-----------|------------------ |
  66:Generated_Source\PSoC4/cyPm.h **** Unmasked          | IRQ priority > current level    | Yes       |   Yes             |
  67:Generated_Source\PSoC4/cyPm.h **** Unmasked          | IRQ priority ≤ current level    | No        |   No              |
  68:Generated_Source\PSoC4/cyPm.h **** Masked            | IRQ priority > current level    | Yes       |   No              |
  69:Generated_Source\PSoC4/cyPm.h **** Masked            | IRQ priority ≤ current level    | No        |   No              |
  70:Generated_Source\PSoC4/cyPm.h **** 
  71:Generated_Source\PSoC4/cyPm.h **** 
  72:Generated_Source\PSoC4/cyPm.h **** \section group_power_management_clocks Clock Configuration
  73:Generated_Source\PSoC4/cyPm.h **** For PSoC 4100 BLE and PSoC 4200 BLE devices, the HFCLK source should be set to IMO before switching
  74:Generated_Source\PSoC4/cyPm.h **** power mode. The IMO should be enabled (by calling CySysClkImoStart(), if it is not) and HFCLK sourc
  75:Generated_Source\PSoC4/cyPm.h **** to IMO by calling CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO).
  76:Generated_Source\PSoC4/cyPm.h **** 
  77:Generated_Source\PSoC4/cyPm.h **** If the System clock frequency is increased by switching to the IMO, the CySysFlashSetWaitCycles() f
  78:Generated_Source\PSoC4/cyPm.h **** appropriate parameter should be called beforehand. Also, it can optionally be called after lowering
  79:Generated_Source\PSoC4/cyPm.h **** frequency in order to improve CPU performance. See CySysFlashSetWaitCycles() description for the de
  80:Generated_Source\PSoC4/cyPm.h **** 
  81:Generated_Source\PSoC4/cyPm.h **** 
  82:Generated_Source\PSoC4/cyPm.h **** 
  83:Generated_Source\PSoC4/cyPm.h **** 
  84:Generated_Source\PSoC4/cyPm.h **** 
  85:Generated_Source\PSoC4/cyPm.h **** */
  86:Generated_Source\PSoC4/cyPm.h **** void CySysPmSleep(void);
  87:Generated_Source\PSoC4/cyPm.h **** void CySysPmDeepSleep(void);
  88:Generated_Source\PSoC4/cyPm.h **** 
  89:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
  90:Generated_Source\PSoC4/cyPm.h ****     void CySysPmHibernate(void);
  91:Generated_Source\PSoC4/cyPm.h ****     void CySysPmFreezeIo(void);
  92:Generated_Source\PSoC4/cyPm.h ****     void CySysPmUnfreezeIo(void);
  93:Generated_Source\PSoC4/cyPm.h ****     uint32 CySysPmGetResetReason(void);
  94:Generated_Source\PSoC4/cyPm.h ****     void CySysPmStop(void);
  95:Generated_Source\PSoC4/cyPm.h ****     void CySysPmSetWakeupPolarity(uint32 polarity);
  96:Generated_Source\PSoC4/cyPm.h **** #else
  97:Generated_Source\PSoC4/cyPm.h ****     void CySysPmSetWakeupHoldoff(uint32 hfclkFrequencyMhz);
  98:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
  99:Generated_Source\PSoC4/cyPm.h **** 
 100:Generated_Source\PSoC4/cyPm.h **** /** @} group_power_management */
 101:Generated_Source\PSoC4/cyPm.h **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 8


 102:Generated_Source\PSoC4/cyPm.h **** 
 103:Generated_Source\PSoC4/cyPm.h **** /*******************************************************************************
 104:Generated_Source\PSoC4/cyPm.h **** * The ARM compilers have the __wfi() intrinsic that inserts a WFI instruction
 105:Generated_Source\PSoC4/cyPm.h **** * into the instruction stream generated by the compiler. The GCC compiler has to
 106:Generated_Source\PSoC4/cyPm.h **** * execute assembly language instruction.
 107:Generated_Source\PSoC4/cyPm.h **** *******************************************************************************/
 108:Generated_Source\PSoC4/cyPm.h **** #if defined(__ARMCC_VERSION)    /* Instristic for Keil compilers */
 109:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WFI       __wfi()
 110:Generated_Source\PSoC4/cyPm.h **** #else   /* ASM for GCC & IAR */
 111:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WFI       __asm volatile ("WFI \n")
 112:Generated_Source\PSoC4/cyPm.h **** #endif /* __ARMCC_VERSION */
 113:Generated_Source\PSoC4/cyPm.h **** 
 114:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 115:Generated_Source\PSoC4/cyPm.h **** 
 116:Generated_Source\PSoC4/cyPm.h ****     /* CySysPmSetWakeupPolarity() */
 117:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_ACTIVE_LOW        ((uint32)(0x0u))    /**< Logical zero will wakeup t
 118:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_ACTIVE_HIGH       ((uint32)(0x1u))    /**< Logical one will wakeup th
 119:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_POLARITY          (CY_PM_STOP_WAKEUP_ACTIVE_LOW)
 120:Generated_Source\PSoC4/cyPm.h **** 
 121:Generated_Source\PSoC4/cyPm.h ****     /* CySysPmGetResetReason() */
 122:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_UNKN             (0u)    /**< Unknown reset reason. */
 123:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_XRES             (1u)    /**< Transition from OFF/XRES to RESET */
 124:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_WAKEUP_HIB       (2u)    /**< Transition/wakeup from HIBERNATE to RE
 125:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_WAKEUP_STOP      (3u)    /**< Transition/wakeup from STOP to RESET *
 126:Generated_Source\PSoC4/cyPm.h **** 
 127:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 128:Generated_Source\PSoC4/cyPm.h **** 
 129:Generated_Source\PSoC4/cyPm.h **** 
 130:Generated_Source\PSoC4/cyPm.h **** /***************************************
 131:Generated_Source\PSoC4/cyPm.h **** *              Registers
 132:Generated_Source\PSoC4/cyPm.h **** ***************************************/
 133:Generated_Source\PSoC4/cyPm.h **** 
 134:Generated_Source\PSoC4/cyPm.h **** /* Power Mode Control */
 135:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_CONTROL_REG               (*(reg32 *) CYREG_PWR_CONTROL)
 136:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_CONTROL_PTR               ( (reg32 *) CYREG_PWR_CONTROL)
 137:Generated_Source\PSoC4/cyPm.h **** 
 138:Generated_Source\PSoC4/cyPm.h **** /* CPU System Control Register */
 139:Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_CPUSS_CM0)
 140:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_REG                   (*(reg32 *) CYREG_CM0_SCR)
 141:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_PTR                   ( (reg32 *) CYREG_CM0_SCR)
 142:Generated_Source\PSoC4/cyPm.h **** #else /* CY_IP_CPUSS_CM0PLUS */
 143:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_REG                   (*(reg32 *) CYREG_CM0P_SCR)
 144:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_PTR                   ( (reg32 *) CYREG_CM0P_SCR)
 145:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_CPUSS_CM0) */
 146:Generated_Source\PSoC4/cyPm.h **** 
 147:Generated_Source\PSoC4/cyPm.h **** /* Power System Key & Delay Register */
 148:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_KEY_DELAY_REG             (*(reg32 *) CYREG_PWR_KEY_DELAY)
 149:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_KEY_DELAY_PTR             ( (reg32 *) CYREG_PWR_KEY_DELAY)
 150:Generated_Source\PSoC4/cyPm.h **** 
 151:Generated_Source\PSoC4/cyPm.h **** 
 152:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 153:Generated_Source\PSoC4/cyPm.h ****     /* Hibernate wakeup value for PWR_KEY_DELAY */
 154:Generated_Source\PSoC4/cyPm.h ****     #define CY_SFLASH_HIB_KEY_DELAY_REG     (*(reg16 *) CYREG_SFLASH_HIB_KEY_DELAY)
 155:Generated_Source\PSoC4/cyPm.h ****     #define CY_SFLASH_HIB_KEY_DELAY_PTR     ( (reg16 *) CYREG_SFLASH_HIB_KEY_DELAY)
 156:Generated_Source\PSoC4/cyPm.h **** #endif  /* (CY_IP_SRSSV2) */
 157:Generated_Source\PSoC4/cyPm.h **** 
 158:Generated_Source\PSoC4/cyPm.h **** /* Deep Sleep wakeup value for PWR_KEY_DELAY */
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 9


 159:Generated_Source\PSoC4/cyPm.h **** #define CY_SFLASH_DPSLP_KEY_DELAY_REG       (*(reg16 *) CYREG_SFLASH_DPSLP_KEY_DELAY)
 160:Generated_Source\PSoC4/cyPm.h **** #define CY_SFLASH_DPSLP_KEY_DELAY_PTR       ( (reg16 *) CYREG_SFLASH_DPSLP_KEY_DELAY)
 161:Generated_Source\PSoC4/cyPm.h **** 
 162:Generated_Source\PSoC4/cyPm.h **** /* Power Stop Mode Register */
 163:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 164:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_REG              (*(reg32 *) CYREG_PWR_STOP)
 165:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_PTR              ( (reg32 *) CYREG_PWR_STOP)
 166:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 167:Generated_Source\PSoC4/cyPm.h **** 
 168:Generated_Source\PSoC4/cyPm.h **** #if (CY_PSOC4_4100 || CY_PSOC4_4200)
 169:Generated_Source\PSoC4/cyPm.h ****     /* CPU Subsystem Configuration */
 170:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_REG             (*(reg32 *) CYREG_CPUSS_CONFIG)
 171:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_PTR             ( (reg32 *) CYREG_CPUSS_CONFIG)
 172:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200) */
 173:Generated_Source\PSoC4/cyPm.h **** 
 174:Generated_Source\PSoC4/cyPm.h **** 
 175:Generated_Source\PSoC4/cyPm.h **** /***************************************
 176:Generated_Source\PSoC4/cyPm.h **** *       Register Constants
 177:Generated_Source\PSoC4/cyPm.h **** ***************************************/
 178:Generated_Source\PSoC4/cyPm.h **** 
 179:Generated_Source\PSoC4/cyPm.h **** /* CM0 System Control Register Constants */
 180:Generated_Source\PSoC4/cyPm.h **** #define CY_PM_CPU_SCR_SLEEPDEEP             ((uint32)(0x04u))
 181:Generated_Source\PSoC4/cyPm.h **** 
 182:Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 183:Generated_Source\PSoC4/cyPm.h ****     /* Power Mode Control Constants */
 184:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_CONTROL_HIBERNATE         (0x80000000u)
 185:Generated_Source\PSoC4/cyPm.h **** 
 186:Generated_Source\PSoC4/cyPm.h ****     /* Power Mode Stop Constants */
 187:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_POLARITY_SHIFT       (16u)
 188:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_POLARITY             ((uint32)((uint32)1u << CY_PM_PWR_STOP_POLARITY_SHI
 189:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_FREEZE_SHIFT         (17u)
 190:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_FREEZE               ((uint32)((uint32)1u << CY_PM_PWR_STOP_FREEZE_SHIFT
 191:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK_SHIFT         (8u)
 192:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK_MASK          ((uint32)((uint32)0xFFu << CY_PM_PWR_STOP_UNLOCK_SH
 193:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK               ((uint32)((uint32)0x3Au << CY_PM_PWR_STOP_UNLOCK_SH
 194:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_STOP_SHIFT           (31u)
 195:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_STOP                 ((uint32)((uint32)1u << CY_PM_PWR_STOP_STOP_SHIFT))
 196:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_MASK           ((uint32)(0xFFu))
 197:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_XRES           ((uint32)(0x00u))
 198:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_HIB            ((uint32)(0xF1u))
 199:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_STOP           ((uint32)(0xF2u))
 200:Generated_Source\PSoC4/cyPm.h **** #else
 201:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_KEY_DELAY_REG_DEFAULT     ((uint32) 248u)
 202:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_KEY_DELAY_FREQ_DEFAULT    (48u)
 203:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 204:Generated_Source\PSoC4/cyPm.h **** 
 205:Generated_Source\PSoC4/cyPm.h **** #if (CY_PSOC4_4100 || CY_PSOC4_4200)
 206:Generated_Source\PSoC4/cyPm.h ****     /* 0 - normal operation, 1 - Flash Accelerator in bypass mode */
 207:Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS      ((uint32) 0x02u)
 208:Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200) */
 209:Generated_Source\PSoC4/cyPm.h **** 
 210:Generated_Source\PSoC4/cyPm.h **** 
 211:Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_SRSSV2)
 212:Generated_Source\PSoC4/cyPm.h ****     #if (CY_IP_HOBTO_DEVICE)
 213:Generated_Source\PSoC4/cyPm.h ****         /*******************************************************************************
 214:Generated_Source\PSoC4/cyPm.h ****         * Function Name: CySysPmHibPinsDisableInputBuf
 215:Generated_Source\PSoC4/cyPm.h ****         ****************************************************************************//**
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 10


 216:Generated_Source\PSoC4/cyPm.h ****         *
 217:Generated_Source\PSoC4/cyPm.h ****         *  Disable the input buffer for all the port. This is required before Hibernate
 218:Generated_Source\PSoC4/cyPm.h ****         *  mode entry as the operation of the input buffer is not guaranteed if VCCD
 219:Generated_Source\PSoC4/cyPm.h ****         *  drops down to 1.0 V.
 220:Generated_Source\PSoC4/cyPm.h ****         *
 221:Generated_Source\PSoC4/cyPm.h ****         *******************************************************************************/
 222:Generated_Source\PSoC4/cyPm.h ****         static CY_INLINE void CySysPmHibPinsDisableInputBuf(void)
 223:Generated_Source\PSoC4/cyPm.h ****         {
 224:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT0_PC
 225:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT0_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 157              		.loc 2 225 0
 158 0006 1F4A     		ldr	r2, .L8
 159 0008 1368     		ldr	r3, [r2]
 160 000a 9B00     		lsl	r3, r3, #2
 161 000c 9B08     		lsr	r3, r3, #2
 162 000e 1360     		str	r3, [r2]
 226:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT0_PC */
 227:Generated_Source\PSoC4/cyPm.h **** 
 228:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT1_PC
 229:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT1_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 163              		.loc 2 229 0
 164 0010 1D4A     		ldr	r2, .L8+4
 165 0012 1368     		ldr	r3, [r2]
 166 0014 9B00     		lsl	r3, r3, #2
 167 0016 9B08     		lsr	r3, r3, #2
 168 0018 1360     		str	r3, [r2]
 230:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT1_PC */
 231:Generated_Source\PSoC4/cyPm.h **** 
 232:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT2_PC
 233:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT2_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 169              		.loc 2 233 0
 170 001a 1C4A     		ldr	r2, .L8+8
 171 001c 1368     		ldr	r3, [r2]
 172 001e 9B00     		lsl	r3, r3, #2
 173 0020 9B08     		lsr	r3, r3, #2
 174 0022 1360     		str	r3, [r2]
 234:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT2_PC */
 235:Generated_Source\PSoC4/cyPm.h **** 
 236:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT3_PC
 237:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT3_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 175              		.loc 2 237 0
 176 0024 1A4A     		ldr	r2, .L8+12
 177 0026 1368     		ldr	r3, [r2]
 178 0028 9B00     		lsl	r3, r3, #2
 179 002a 9B08     		lsr	r3, r3, #2
 180 002c 1360     		str	r3, [r2]
 238:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT3_PC */
 239:Generated_Source\PSoC4/cyPm.h **** 
 240:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT4_PC
 241:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT4_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 181              		.loc 2 241 0
 182 002e 194A     		ldr	r2, .L8+16
 183 0030 1368     		ldr	r3, [r2]
 184 0032 9B00     		lsl	r3, r3, #2
 185 0034 9B08     		lsr	r3, r3, #2
 186 0036 1360     		str	r3, [r2]
 242:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT4_PC */
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 11


 243:Generated_Source\PSoC4/cyPm.h **** 
 244:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT5_PC
 245:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT5_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 187              		.loc 2 245 0
 188 0038 174A     		ldr	r2, .L8+20
 189 003a 1368     		ldr	r3, [r2]
 190 003c 9B00     		lsl	r3, r3, #2
 191 003e 9B08     		lsr	r3, r3, #2
 192 0040 1360     		str	r3, [r2]
 246:Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT5_PC */
 247:Generated_Source\PSoC4/cyPm.h **** 
 248:Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT6_PC
 249:Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT6_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 193              		.loc 2 249 0
 194 0042 164A     		ldr	r2, .L8+24
 195 0044 1368     		ldr	r3, [r2]
 196 0046 9B00     		lsl	r3, r3, #2
 197 0048 9B08     		lsr	r3, r3, #2
 198 004a 1360     		str	r3, [r2]
 199              	.LBE5:
 200              	.LBE4:
 143:Generated_Source\PSoC4/cyPm.c **** 
 144:Generated_Source\PSoC4/cyPm.c ****         #if (CY_IP_HOBTO_DEVICE)
 145:Generated_Source\PSoC4/cyPm.c ****             /* Disable input buffers for all ports */
 146:Generated_Source\PSoC4/cyPm.c ****             CySysPmHibPinsDisableInputBuf();
 147:Generated_Source\PSoC4/cyPm.c ****         #endif /* (CY_IP_HOBTO_DEVICE) */
 148:Generated_Source\PSoC4/cyPm.c **** 
 149:Generated_Source\PSoC4/cyPm.c ****         /* Device enters Hibernate mode when CPU asserts SLEEPDEEP signal */
 150:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG |= CY_PM_PWR_CONTROL_HIBERNATE;
 201              		.loc 1 150 0
 202 004c 144A     		ldr	r2, .L8+28
 203 004e 1368     		ldr	r3, [r2]
 204 0050 8021     		mov	r1, #128
 205 0052 0906     		lsl	r1, r1, #24
 206 0054 0B43     		orr	r3, r1
 207 0056 1360     		str	r3, [r2]
 151:Generated_Source\PSoC4/cyPm.c **** 
 152:Generated_Source\PSoC4/cyPm.c ****         /* Adjust delay to wait for references to settle on wakeup from hibernate */
 153:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_HIB_KEY_DELAY_REG;
 208              		.loc 1 153 0
 209 0058 124B     		ldr	r3, .L8+32
 210 005a 1B88     		ldrh	r3, [r3]
 211 005c 9BB2     		uxth	r3, r3
 212 005e 124A     		ldr	r2, .L8+36
 213 0060 1360     		str	r3, [r2]
 154:Generated_Source\PSoC4/cyPm.c **** 
 155:Generated_Source\PSoC4/cyPm.c ****         /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 156:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 214              		.loc 1 156 0
 215 0062 124A     		ldr	r2, .L8+40
 216 0064 1168     		ldr	r1, [r2]
 217 0066 0423     		mov	r3, #4
 218 0068 0B43     		orr	r3, r1
 219 006a 1360     		str	r3, [r2]
 157:Generated_Source\PSoC4/cyPm.c **** 
 158:Generated_Source\PSoC4/cyPm.c ****         /* Save token that will retain through a STOP/WAKEUP sequence
 159:Generated_Source\PSoC4/cyPm.c ****          * thus could be used by CySysPmGetResetReason() to differentiate
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 12


 160:Generated_Source\PSoC4/cyPm.c ****          * WAKEUP from a general RESET event.
 161:Generated_Source\PSoC4/cyPm.c ****          */
 162:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & (uint32)(~CY_PM_PWR_STOP_TOKEN_MASK)) | CY_PM_PW
 220              		.loc 1 162 0
 221 006c 1049     		ldr	r1, .L8+44
 222 006e 0B68     		ldr	r3, [r1]
 223 0070 FF22     		mov	r2, #255
 224 0072 9343     		bic	r3, r2
 225 0074 0E3A     		sub	r2, r2, #14
 226 0076 1343     		orr	r3, r2
 227 0078 0B60     		str	r3, [r1]
 163:Generated_Source\PSoC4/cyPm.c **** 
 164:Generated_Source\PSoC4/cyPm.c ****         /* Sleep and wait for interrupt. Wakeup from Hibernate is performed
 165:Generated_Source\PSoC4/cyPm.c ****          * through RESET state, causing a normal Boot procedure to occur.
 166:Generated_Source\PSoC4/cyPm.c ****          * The WFI instruction doesn't put the core to sleep if its wake condition
 167:Generated_Source\PSoC4/cyPm.c ****          * is true when the instruction is executed.
 168:Generated_Source\PSoC4/cyPm.c ****          */
 169:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 228              		.loc 1 169 0
 229              	@ 169 "Generated_Source\PSoC4\cyPm.c" 1
 230 007a 30BF     		WFI 
 231              	
 232              	@ 0 "" 2
 170:Generated_Source\PSoC4/cyPm.c **** 
 171:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 233              		.loc 1 171 0
 234              		.code	16
 235 007c FFF7FEFF 		bl	CyExitCriticalSection
 236              	.LVL8:
 172:Generated_Source\PSoC4/cyPm.c ****     }
 237              		.loc 1 172 0
 238              		@ sp needed
 239 0080 08BD     		pop	{r3, pc}
 240              	.L9:
 241 0082 C046     		.align	2
 242              	.L8:
 243 0084 08000440 		.word	1074003976
 244 0088 08010440 		.word	1074004232
 245 008c 08020440 		.word	1074004488
 246 0090 08030440 		.word	1074004744
 247 0094 08040440 		.word	1074005000
 248 0098 08050440 		.word	1074005256
 249 009c 08060440 		.word	1074005512
 250 00a0 00000B40 		.word	1074462720
 251 00a4 50F1FF0F 		.word	268431696
 252 00a8 0C000B40 		.word	1074462732
 253 00ac 10ED00E0 		.word	-536810224
 254 00b0 2C000B40 		.word	1074462764
 255              		.cfi_endproc
 256              	.LFE5:
 257              		.size	CySysPmHibernate, .-CySysPmHibernate
 258              		.section	.text.CySysPmSetWakeupPolarity,"ax",%progbits
 259              		.align	2
 260              		.global	CySysPmSetWakeupPolarity
 261              		.code	16
 262              		.thumb_func
 263              		.type	CySysPmSetWakeupPolarity, %function
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 13


 264              	CySysPmSetWakeupPolarity:
 265              	.LFB7:
 173:Generated_Source\PSoC4/cyPm.c **** 
 174:Generated_Source\PSoC4/cyPm.c **** 
 175:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 176:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmStop
 177:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 178:Generated_Source\PSoC4/cyPm.c ****     *
 179:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Stop state. All internal supplies are off;
 180:Generated_Source\PSoC4/cyPm.c ****     * no state is retained.
 181:Generated_Source\PSoC4/cyPm.c ****     *
 182:Generated_Source\PSoC4/cyPm.c ****     * Wakeup from Stop is performed by toggling the wakeup pin, causing
 183:Generated_Source\PSoC4/cyPm.c ****     * a normal boot procedure to occur. To configure the wakeup pin,
 184:Generated_Source\PSoC4/cyPm.c ****     * the Digital Input Pin component should be placed on the schematic,
 185:Generated_Source\PSoC4/cyPm.c ****     * assigned to the wakeup pin, and resistively pulled up or down to the inverse
 186:Generated_Source\PSoC4/cyPm.c ****     * state of the wakeup polarity. To distinguish the wakeup from the Stop mode
 187:Generated_Source\PSoC4/cyPm.c ****     * and the general Reset event, \ref CySysPmGetResetReason() function could be
 188:Generated_Source\PSoC4/cyPm.c ****     * used.  The wakeup pin is active low by default. The wakeup pin polarity
 189:Generated_Source\PSoC4/cyPm.c ****     * could be changed with the \ref CySysPmSetWakeupPolarity() function.
 190:Generated_Source\PSoC4/cyPm.c ****     *
 191:Generated_Source\PSoC4/cyPm.c ****     * This function freezes IO cells implicitly. It is not possible to enter
 192:Generated_Source\PSoC4/cyPm.c ****     * the STOP mode before freezing the IO cells. The IO cells remain frozen after
 193:Generated_Source\PSoC4/cyPm.c ****     * awake from the Stop mode until the firmware unfreezes them after booting
 194:Generated_Source\PSoC4/cyPm.c ****     * explicitly with \ref CySysPmUnfreezeIo() function call.
 195:Generated_Source\PSoC4/cyPm.c ****     *
 196:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 197:Generated_Source\PSoC4/cyPm.c ****     void CySysPmStop(void)
 198:Generated_Source\PSoC4/cyPm.c ****     {
 199:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 200:Generated_Source\PSoC4/cyPm.c **** 
 201:Generated_Source\PSoC4/cyPm.c ****         /* Update token to indicate Stop mode transition. Preserve only polarity. */
 202:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_POLARITY) | CY_PM_PWR_STOP_TOKEN_
 203:Generated_Source\PSoC4/cyPm.c **** 
 204:Generated_Source\PSoC4/cyPm.c ****         /* Freeze IO-Cells to save IO-Cell state */
 205:Generated_Source\PSoC4/cyPm.c ****         CySysPmFreezeIo();
 206:Generated_Source\PSoC4/cyPm.c **** 
 207:Generated_Source\PSoC4/cyPm.c ****         /* Initiates transition to Stop state */
 208:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_STOP;
 209:Generated_Source\PSoC4/cyPm.c **** 
 210:Generated_Source\PSoC4/cyPm.c ****         /* Depending on the clock frequency and internal timing delays,
 211:Generated_Source\PSoC4/cyPm.c ****          * the final AHB transaction may or may not complete. To guard against
 212:Generated_Source\PSoC4/cyPm.c ****          * accidentally executing an unintended instruction, it is recommended
 213:Generated_Source\PSoC4/cyPm.c ****          * to add 2 NOP cycles after the final write to the STOP register.
 214:Generated_Source\PSoC4/cyPm.c ****          */
 215:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 216:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 217:Generated_Source\PSoC4/cyPm.c **** 
 218:Generated_Source\PSoC4/cyPm.c ****         /* Should never get to this WFI instruction */
 219:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 220:Generated_Source\PSoC4/cyPm.c **** 
 221:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop is performed by toggling of Wakeup pin,
 222:Generated_Source\PSoC4/cyPm.c ****          * causing a normal Boot procedure to occur. No need to exit
 223:Generated_Source\PSoC4/cyPm.c ****          * from the critical section.
 224:Generated_Source\PSoC4/cyPm.c ****          */
 225:Generated_Source\PSoC4/cyPm.c ****     }
 226:Generated_Source\PSoC4/cyPm.c **** 
 227:Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 14


 228:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 229:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupPolarity
 230:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 231:Generated_Source\PSoC4/cyPm.c ****     *
 232:Generated_Source\PSoC4/cyPm.c ****     * Wake up from the stop mode is performed by toggling the wakeup pin,
 233:Generated_Source\PSoC4/cyPm.c ****     * causing a normal boot procedure to occur. This function assigns
 234:Generated_Source\PSoC4/cyPm.c ****     * the wakeup pin active level. Setting the wakeup pin to this level will cause
 235:Generated_Source\PSoC4/cyPm.c ****     * the wakeup from stop mode. The wakeup pin is active low by default.
 236:Generated_Source\PSoC4/cyPm.c ****     *
 237:Generated_Source\PSoC4/cyPm.c ****     * \param polarity
 238:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_LOW Logical zero will wakeup the chip
 239:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_HIGH Logical one will wakeup the chip
 240:Generated_Source\PSoC4/cyPm.c ****     *
 241:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 242:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupPolarity(uint32 polarity)
 243:Generated_Source\PSoC4/cyPm.c ****     {
 266              		.loc 1 243 0
 267              		.cfi_startproc
 268              	.LVL9:
 269 0000 10B5     		push	{r4, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 4, -8
 272              		.cfi_offset 14, -4
 273 0002 041C     		mov	r4, r0
 244:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 245:Generated_Source\PSoC4/cyPm.c **** 
 246:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 274              		.loc 1 246 0
 275 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 276              	.LVL10:
 247:Generated_Source\PSoC4/cyPm.c **** 
 248:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_STOP_WAKEUP_ACTIVE_LOW != polarity) ?
 249:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 277              		.loc 1 249 0
 278 0008 002C     		cmp	r4, #0
 279 000a 05D0     		beq	.L11
 280              		.loc 1 249 0 is_stmt 0 discriminator 1
 281 000c 074B     		ldr	r3, .L13
 282 000e 1B68     		ldr	r3, [r3]
 283 0010 8022     		mov	r2, #128
 284 0012 5202     		lsl	r2, r2, #9
 285 0014 1343     		orr	r3, r2
 286 0016 03E0     		b	.L12
 287              	.L11:
 250:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 288              		.loc 1 250 0 is_stmt 1 discriminator 2
 289 0018 044B     		ldr	r3, .L13
 290 001a 1A68     		ldr	r2, [r3]
 249:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 291              		.loc 1 249 0 discriminator 2
 292 001c 044B     		ldr	r3, .L13+4
 293 001e 1340     		and	r3, r2
 294              	.L12:
 248:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 295              		.loc 1 248 0
 296 0020 024A     		ldr	r2, .L13
 297 0022 1360     		str	r3, [r2]
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 15


 251:Generated_Source\PSoC4/cyPm.c **** 
 252:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 298              		.loc 1 252 0
 299 0024 FFF7FEFF 		bl	CyExitCriticalSection
 300              	.LVL11:
 253:Generated_Source\PSoC4/cyPm.c ****     }
 301              		.loc 1 253 0
 302              		@ sp needed
 303              	.LVL12:
 304 0028 10BD     		pop	{r4, pc}
 305              	.L14:
 306 002a C046     		.align	2
 307              	.L13:
 308 002c 2C000B40 		.word	1074462764
 309 0030 FFFFFEFF 		.word	-65537
 310              		.cfi_endproc
 311              	.LFE7:
 312              		.size	CySysPmSetWakeupPolarity, .-CySysPmSetWakeupPolarity
 313              		.section	.text.CySysPmGetResetReason,"ax",%progbits
 314              		.align	2
 315              		.global	CySysPmGetResetReason
 316              		.code	16
 317              		.thumb_func
 318              		.type	CySysPmGetResetReason, %function
 319              	CySysPmGetResetReason:
 320              	.LFB8:
 254:Generated_Source\PSoC4/cyPm.c **** 
 255:Generated_Source\PSoC4/cyPm.c **** 
 256:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 257:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmGetResetReason
 258:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 259:Generated_Source\PSoC4/cyPm.c ****     *
 260:Generated_Source\PSoC4/cyPm.c ****     * Retrieves the last reset reason - transition from OFF/XRES/STOP/HIBERNATE to
 261:Generated_Source\PSoC4/cyPm.c ****     * the RESET state. Note that waking up from STOP using XRES will be perceived
 262:Generated_Source\PSoC4/cyPm.c ****     * as a general RESET.
 263:Generated_Source\PSoC4/cyPm.c ****     *
 264:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_UNKN          Unknown reset reason.
 265:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_XRES          Transition from OFF/XRES to RESET
 266:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_HIB    Transition/wakeup from HIBERNATE to RESET
 267:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_STOP   Transition/wakeup from STOP to RESET
 268:Generated_Source\PSoC4/cyPm.c ****     *
 269:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 270:Generated_Source\PSoC4/cyPm.c ****     uint32 CySysPmGetResetReason(void)
 271:Generated_Source\PSoC4/cyPm.c ****     {
 321              		.loc 1 271 0
 322              		.cfi_startproc
 323              	.LVL13:
 272:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 273:Generated_Source\PSoC4/cyPm.c **** 
 274:Generated_Source\PSoC4/cyPm.c ****         switch(CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_TOKEN_MASK)
 324              		.loc 1 274 0
 325 0000 084B     		ldr	r3, .L21
 326 0002 1B68     		ldr	r3, [r3]
 327 0004 FF22     		mov	r2, #255
 328 0006 1340     		and	r3, r2
 329 0008 F12B     		cmp	r3, #241
 330 000a 05D0     		beq	.L17
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 16


 331 000c F22B     		cmp	r3, #242
 332 000e 05D0     		beq	.L18
 333 0010 002B     		cmp	r3, #0
 334 0012 05D0     		beq	.L20
 272:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 335              		.loc 1 272 0
 336 0014 0020     		mov	r0, #0
 337 0016 04E0     		b	.L19
 338              	.L17:
 339              	.LVL14:
 275:Generated_Source\PSoC4/cyPm.c ****         {
 276:Generated_Source\PSoC4/cyPm.c ****         /* Power up, XRES */
 277:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_XRES:
 278:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_XRES;
 279:Generated_Source\PSoC4/cyPm.c ****             break;
 280:Generated_Source\PSoC4/cyPm.c **** 
 281:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Hibernate */
 282:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_HIB:
 283:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_HIB;
 340              		.loc 1 283 0
 341 0018 0220     		mov	r0, #2
 284:Generated_Source\PSoC4/cyPm.c ****             break;
 342              		.loc 1 284 0
 343 001a 02E0     		b	.L19
 344              	.LVL15:
 345              	.L18:
 285:Generated_Source\PSoC4/cyPm.c **** 
 286:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop (through WAKEUP pin assert) */
 287:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_STOP:
 288:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_STOP;
 346              		.loc 1 288 0
 347 001c 0320     		mov	r0, #3
 289:Generated_Source\PSoC4/cyPm.c ****             break;
 348              		.loc 1 289 0
 349 001e 00E0     		b	.L19
 350              	.LVL16:
 351              	.L20:
 278:Generated_Source\PSoC4/cyPm.c ****             break;
 352              		.loc 1 278 0
 353 0020 0120     		mov	r0, #1
 354              	.LVL17:
 355              	.L19:
 290:Generated_Source\PSoC4/cyPm.c **** 
 291:Generated_Source\PSoC4/cyPm.c ****         /* Unknown reason */
 292:Generated_Source\PSoC4/cyPm.c ****         default:
 293:Generated_Source\PSoC4/cyPm.c ****             break;
 294:Generated_Source\PSoC4/cyPm.c ****         }
 295:Generated_Source\PSoC4/cyPm.c **** 
 296:Generated_Source\PSoC4/cyPm.c ****         return (reason);
 297:Generated_Source\PSoC4/cyPm.c ****     }
 356              		.loc 1 297 0
 357              		@ sp needed
 358 0022 7047     		bx	lr
 359              	.L22:
 360              		.align	2
 361              	.L21:
 362 0024 2C000B40 		.word	1074462764
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 17


 363              		.cfi_endproc
 364              	.LFE8:
 365              		.size	CySysPmGetResetReason, .-CySysPmGetResetReason
 366              		.section	.text.CySysPmFreezeIo,"ax",%progbits
 367              		.align	2
 368              		.global	CySysPmFreezeIo
 369              		.code	16
 370              		.thumb_func
 371              		.type	CySysPmFreezeIo, %function
 372              	CySysPmFreezeIo:
 373              	.LFB9:
 298:Generated_Source\PSoC4/cyPm.c **** 
 299:Generated_Source\PSoC4/cyPm.c **** 
 300:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 301:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmFreezeIo
 302:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 303:Generated_Source\PSoC4/cyPm.c ****     *
 304:Generated_Source\PSoC4/cyPm.c ****     * Freezes IO-Cells directly to save the IO-Cell state on wake up from the
 305:Generated_Source\PSoC4/cyPm.c ****     * Hibernate or Stop state. It is not required to call this function before
 306:Generated_Source\PSoC4/cyPm.c ****     * entering the Stop mode, since \ref CySysPmStop() function freezes IO-Cells
 307:Generated_Source\PSoC4/cyPm.c ****     * implicitly.
 308:Generated_Source\PSoC4/cyPm.c ****     *
 309:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 310:Generated_Source\PSoC4/cyPm.c ****     *
 311:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 312:Generated_Source\PSoC4/cyPm.c ****     void CySysPmFreezeIo(void)
 313:Generated_Source\PSoC4/cyPm.c ****     {
 374              		.loc 1 313 0
 375              		.cfi_startproc
 376 0000 08B5     		push	{r3, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 314:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 315:Generated_Source\PSoC4/cyPm.c **** 
 316:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 380              		.loc 1 316 0
 381 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 382              	.LVL18:
 317:Generated_Source\PSoC4/cyPm.c **** 
 318:Generated_Source\PSoC4/cyPm.c ****         /* Check FREEZE state to avoid recurrent IO-Cells freeze attempt,
 319:Generated_Source\PSoC4/cyPm.c ****          * since the second call to this function will cause accidental switch
 320:Generated_Source\PSoC4/cyPm.c ****          * to the STOP mode (the system will enter STOP mode immediately after
 321:Generated_Source\PSoC4/cyPm.c ****          * writing to STOP bit since both UNLOCK and FREEZE have been set correctly
 322:Generated_Source\PSoC4/cyPm.c ****          * in a previous call to this function).
 323:Generated_Source\PSoC4/cyPm.c ****          */
 324:Generated_Source\PSoC4/cyPm.c ****         if (0u == (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_FREEZE))
 383              		.loc 1 324 0
 384 0006 094B     		ldr	r3, .L25
 385 0008 1B68     		ldr	r3, [r3]
 386 000a 9B03     		lsl	r3, r3, #14
 387 000c 0AD4     		bmi	.L24
 325:Generated_Source\PSoC4/cyPm.c ****         {
 326:Generated_Source\PSoC4/cyPm.c ****             /* Preserve last reset reason and disable overrides the next freeze command by peripher
 327:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_STOP | CY_PM_PWR_STOP_FREEZE | CY_PM_PWR_STOP_UNLOC
 328:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 388              		.loc 1 328 0
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 18


 389 000e 074B     		ldr	r3, .L25
 390 0010 1968     		ldr	r1, [r3]
 391 0012 074A     		ldr	r2, .L25+4
 392 0014 0A40     		and	r2, r1
 327:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 393              		.loc 1 327 0
 394 0016 0749     		ldr	r1, .L25+8
 395 0018 0A43     		orr	r2, r1
 396 001a 1A60     		str	r2, [r3]
 329:Generated_Source\PSoC4/cyPm.c **** 
 330:Generated_Source\PSoC4/cyPm.c ****             /* If reading after writing, read this register three times to delay
 331:Generated_Source\PSoC4/cyPm.c ****             *  enough time for internal settling.
 332:Generated_Source\PSoC4/cyPm.c ****             */
 333:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 397              		.loc 1 333 0
 398 001c 1A68     		ldr	r2, [r3]
 334:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 399              		.loc 1 334 0
 400 001e 1A68     		ldr	r2, [r3]
 335:Generated_Source\PSoC4/cyPm.c **** 
 336:Generated_Source\PSoC4/cyPm.c ****             /* Second write causes the freeze of IO-Cells to save IO-Cell state */
 337:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG;
 401              		.loc 1 337 0
 402 0020 1A68     		ldr	r2, [r3]
 403 0022 1A60     		str	r2, [r3]
 404              	.L24:
 338:Generated_Source\PSoC4/cyPm.c ****         }
 339:Generated_Source\PSoC4/cyPm.c **** 
 340:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 405              		.loc 1 340 0
 406 0024 FFF7FEFF 		bl	CyExitCriticalSection
 407              	.LVL19:
 341:Generated_Source\PSoC4/cyPm.c ****     }
 408              		.loc 1 341 0
 409              		@ sp needed
 410 0028 08BD     		pop	{r3, pc}
 411              	.L26:
 412 002a C046     		.align	2
 413              	.L25:
 414 002c 2C000B40 		.word	1074462764
 415 0030 FF000100 		.word	65791
 416 0034 003A0280 		.word	-2147337728
 417              		.cfi_endproc
 418              	.LFE9:
 419              		.size	CySysPmFreezeIo, .-CySysPmFreezeIo
 420              		.section	.text.CySysPmStop,"ax",%progbits
 421              		.align	2
 422              		.global	CySysPmStop
 423              		.code	16
 424              		.thumb_func
 425              		.type	CySysPmStop, %function
 426              	CySysPmStop:
 427              	.LFB6:
 198:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 428              		.loc 1 198 0
 429              		.cfi_startproc
 430 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 19


 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 4, -8
 433              		.cfi_offset 14, -4
 199:Generated_Source\PSoC4/cyPm.c **** 
 434              		.loc 1 199 0
 435 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 436              	.LVL20:
 202:Generated_Source\PSoC4/cyPm.c **** 
 437              		.loc 1 202 0
 438 0006 094C     		ldr	r4, .L28
 439 0008 2268     		ldr	r2, [r4]
 440 000a 8023     		mov	r3, #128
 441 000c 5B02     		lsl	r3, r3, #9
 442 000e 1340     		and	r3, r2
 443 0010 F222     		mov	r2, #242
 444 0012 1343     		orr	r3, r2
 445 0014 2360     		str	r3, [r4]
 205:Generated_Source\PSoC4/cyPm.c **** 
 446              		.loc 1 205 0
 447 0016 FFF7FEFF 		bl	CySysPmFreezeIo
 448              	.LVL21:
 208:Generated_Source\PSoC4/cyPm.c **** 
 449              		.loc 1 208 0
 450 001a 2368     		ldr	r3, [r4]
 451 001c 8022     		mov	r2, #128
 452 001e 1206     		lsl	r2, r2, #24
 453 0020 1343     		orr	r3, r2
 454 0022 2360     		str	r3, [r4]
 215:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 455              		.loc 1 215 0
 456              	@ 215 "Generated_Source\PSoC4\cyPm.c" 1
 457 0024 C046     		NOP
 458              	
 459              	@ 0 "" 2
 216:Generated_Source\PSoC4/cyPm.c **** 
 460              		.loc 1 216 0
 461              	@ 216 "Generated_Source\PSoC4\cyPm.c" 1
 462 0026 C046     		NOP
 463              	
 464              	@ 0 "" 2
 219:Generated_Source\PSoC4/cyPm.c **** 
 465              		.loc 1 219 0
 466              	@ 219 "Generated_Source\PSoC4\cyPm.c" 1
 467 0028 30BF     		WFI 
 468              	
 469              	@ 0 "" 2
 225:Generated_Source\PSoC4/cyPm.c **** 
 470              		.loc 1 225 0
 471              		.code	16
 472              		@ sp needed
 473 002a 10BD     		pop	{r4, pc}
 474              	.L29:
 475              		.align	2
 476              	.L28:
 477 002c 2C000B40 		.word	1074462764
 478              		.cfi_endproc
 479              	.LFE6:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 20


 480              		.size	CySysPmStop, .-CySysPmStop
 481              		.section	.text.CySysPmUnfreezeIo,"ax",%progbits
 482              		.align	2
 483              		.global	CySysPmUnfreezeIo
 484              		.code	16
 485              		.thumb_func
 486              		.type	CySysPmUnfreezeIo, %function
 487              	CySysPmUnfreezeIo:
 488              	.LFB10:
 342:Generated_Source\PSoC4/cyPm.c **** 
 343:Generated_Source\PSoC4/cyPm.c **** 
 344:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 345:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmUnfreezeIo
 346:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 347:Generated_Source\PSoC4/cyPm.c ****     *
 348:Generated_Source\PSoC4/cyPm.c ****     * The IO-Cells remain frozen after awake from Hibernate or Stop mode until
 349:Generated_Source\PSoC4/cyPm.c ****     * the firmware unfreezes them after booting. The call of this function
 350:Generated_Source\PSoC4/cyPm.c ****     * unfreezes IO-Cells explicitly.
 351:Generated_Source\PSoC4/cyPm.c ****     *
 352:Generated_Source\PSoC4/cyPm.c ****     * If the firmware intent is to retain the data value on the port, then the
 353:Generated_Source\PSoC4/cyPm.c ****     * value must be read and re-written to the data register before calling this
 354:Generated_Source\PSoC4/cyPm.c ****     * API. Furthermore, the drive mode must be re-programmed.  If this is not done,
 355:Generated_Source\PSoC4/cyPm.c ****     * the pin state will change to default state the moment the freeze is removed.
 356:Generated_Source\PSoC4/cyPm.c ****     *
 357:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 358:Generated_Source\PSoC4/cyPm.c ****     *
 359:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/cyPm.c ****     void CySysPmUnfreezeIo(void)
 361:Generated_Source\PSoC4/cyPm.c ****     {
 489              		.loc 1 361 0
 490              		.cfi_startproc
 491 0000 10B5     		push	{r4, lr}
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 4, -8
 494              		.cfi_offset 14, -4
 362:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 363:Generated_Source\PSoC4/cyPm.c **** 
 364:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 495              		.loc 1 364 0
 496 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 497              	.LVL22:
 365:Generated_Source\PSoC4/cyPm.c **** 
 366:Generated_Source\PSoC4/cyPm.c ****         /* Preserve last reset reason and wakeup polarity. Then, unfreeze I/O:
 367:Generated_Source\PSoC4/cyPm.c ****          * write PWR_STOP.FREEZE=0, .UNLOCK=0x3A, .STOP=0, .TOKEN
 368:Generated_Source\PSoC4/cyPm.c ****          */
 369:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_UNLOCK |
 370:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 498              		.loc 1 370 0
 499 0006 084B     		ldr	r3, .L31
 500 0008 1A68     		ldr	r2, [r3]
 501 000a 0849     		ldr	r1, .L31+4
 502 000c 0A40     		and	r2, r1
 369:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 503              		.loc 1 369 0
 504 000e E824     		mov	r4, #232
 505 0010 A401     		lsl	r4, r4, #6
 506 0012 2243     		orr	r2, r4
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 21


 507 0014 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/cyPm.c **** 
 372:Generated_Source\PSoC4/cyPm.c ****         /* If reading after writing, read this register three times to delay
 373:Generated_Source\PSoC4/cyPm.c ****         *  enough time for internal settling.
 374:Generated_Source\PSoC4/cyPm.c ****         */
 375:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 508              		.loc 1 375 0
 509 0016 1A68     		ldr	r2, [r3]
 376:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 510              		.loc 1 376 0
 511 0018 1A68     		ldr	r2, [r3]
 377:Generated_Source\PSoC4/cyPm.c **** 
 378:Generated_Source\PSoC4/cyPm.c ****         /* Lock STOP mode: write PWR_STOP.FREEZE=0, UNLOCK=0x00, STOP=0, .TOKEN */
 379:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG &= (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLARITY);
 512              		.loc 1 379 0
 513 001a 1A68     		ldr	r2, [r3]
 514 001c 1140     		and	r1, r2
 515 001e 1960     		str	r1, [r3]
 380:Generated_Source\PSoC4/cyPm.c **** 
 381:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 516              		.loc 1 381 0
 517 0020 FFF7FEFF 		bl	CyExitCriticalSection
 518              	.LVL23:
 382:Generated_Source\PSoC4/cyPm.c ****     }
 519              		.loc 1 382 0
 520              		@ sp needed
 521 0024 10BD     		pop	{r4, pc}
 522              	.L32:
 523 0026 C046     		.align	2
 524              	.L31:
 525 0028 2C000B40 		.word	1074462764
 526 002c FF000100 		.word	65791
 527              		.cfi_endproc
 528              	.LFE10:
 529              		.size	CySysPmUnfreezeIo, .-CySysPmUnfreezeIo
 530              		.text
 531              	.Letext0:
 532              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 533              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 534              		.section	.debug_info,"",%progbits
 535              	.Ldebug_info0:
 536 0000 E2020000 		.4byte	0x2e2
 537 0004 0400     		.2byte	0x4
 538 0006 00000000 		.4byte	.Ldebug_abbrev0
 539 000a 04       		.byte	0x4
 540 000b 01       		.uleb128 0x1
 541 000c E1010000 		.4byte	.LASF28
 542 0010 01       		.byte	0x1
 543 0011 93020000 		.4byte	.LASF29
 544 0015 45000000 		.4byte	.LASF30
 545 0019 00000000 		.4byte	.Ldebug_ranges0+0
 546 001d 00000000 		.4byte	0
 547 0021 00000000 		.4byte	.Ldebug_line0
 548 0025 02       		.uleb128 0x2
 549 0026 01       		.byte	0x1
 550 0027 06       		.byte	0x6
 551 0028 B1020000 		.4byte	.LASF0
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 22


 552 002c 02       		.uleb128 0x2
 553 002d 01       		.byte	0x1
 554 002e 08       		.byte	0x8
 555 002f D9000000 		.4byte	.LASF1
 556 0033 02       		.uleb128 0x2
 557 0034 02       		.byte	0x2
 558 0035 05       		.byte	0x5
 559 0036 6F020000 		.4byte	.LASF2
 560 003a 02       		.uleb128 0x2
 561 003b 02       		.byte	0x2
 562 003c 07       		.byte	0x7
 563 003d 32000000 		.4byte	.LASF3
 564 0041 02       		.uleb128 0x2
 565 0042 04       		.byte	0x4
 566 0043 05       		.byte	0x5
 567 0044 8A020000 		.4byte	.LASF4
 568 0048 02       		.uleb128 0x2
 569 0049 04       		.byte	0x4
 570 004a 07       		.byte	0x7
 571 004b F6000000 		.4byte	.LASF5
 572 004f 02       		.uleb128 0x2
 573 0050 08       		.byte	0x8
 574 0051 05       		.byte	0x5
 575 0052 C1010000 		.4byte	.LASF6
 576 0056 02       		.uleb128 0x2
 577 0057 08       		.byte	0x8
 578 0058 07       		.byte	0x7
 579 0059 C2000000 		.4byte	.LASF7
 580 005d 03       		.uleb128 0x3
 581 005e 04       		.byte	0x4
 582 005f 05       		.byte	0x5
 583 0060 696E7400 		.ascii	"int\000"
 584 0064 02       		.uleb128 0x2
 585 0065 04       		.byte	0x4
 586 0066 07       		.byte	0x7
 587 0067 58010000 		.4byte	.LASF8
 588 006b 04       		.uleb128 0x4
 589 006c 08010000 		.4byte	.LASF9
 590 0070 03       		.byte	0x3
 591 0071 B901     		.2byte	0x1b9
 592 0073 2C000000 		.4byte	0x2c
 593 0077 04       		.uleb128 0x4
 594 0078 33010000 		.4byte	.LASF10
 595 007c 03       		.byte	0x3
 596 007d BA01     		.2byte	0x1ba
 597 007f 3A000000 		.4byte	0x3a
 598 0083 04       		.uleb128 0x4
 599 0084 3A010000 		.4byte	.LASF11
 600 0088 03       		.byte	0x3
 601 0089 BB01     		.2byte	0x1bb
 602 008b 48000000 		.4byte	0x48
 603 008f 02       		.uleb128 0x2
 604 0090 04       		.byte	0x4
 605 0091 04       		.byte	0x4
 606 0092 BC000000 		.4byte	.LASF12
 607 0096 02       		.uleb128 0x2
 608 0097 08       		.byte	0x8
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 23


 609 0098 04       		.byte	0x4
 610 0099 1A010000 		.4byte	.LASF13
 611 009d 02       		.uleb128 0x2
 612 009e 01       		.byte	0x1
 613 009f 08       		.byte	0x8
 614 00a0 CF010000 		.4byte	.LASF14
 615 00a4 04       		.uleb128 0x4
 616 00a5 00000000 		.4byte	.LASF15
 617 00a9 03       		.byte	0x3
 618 00aa 6402     		.2byte	0x264
 619 00ac B0000000 		.4byte	0xb0
 620 00b0 05       		.uleb128 0x5
 621 00b1 77000000 		.4byte	0x77
 622 00b5 04       		.uleb128 0x4
 623 00b6 06000000 		.4byte	.LASF16
 624 00ba 03       		.byte	0x3
 625 00bb 6502     		.2byte	0x265
 626 00bd C1000000 		.4byte	0xc1
 627 00c1 05       		.uleb128 0x5
 628 00c2 83000000 		.4byte	0x83
 629 00c6 02       		.uleb128 0x2
 630 00c7 04       		.byte	0x4
 631 00c8 07       		.byte	0x7
 632 00c9 B8010000 		.4byte	.LASF17
 633 00cd 06       		.uleb128 0x6
 634 00ce 25000000 		.4byte	.LASF18
 635 00d2 01       		.byte	0x1
 636 00d3 20       		.byte	0x20
 637 00d4 00000000 		.4byte	.LFB3
 638 00d8 1C000000 		.4byte	.LFE3-.LFB3
 639 00dc 01       		.uleb128 0x1
 640 00dd 9C       		.byte	0x9c
 641 00de 04010000 		.4byte	0x104
 642 00e2 07       		.uleb128 0x7
 643 00e3 E7000000 		.4byte	.LASF20
 644 00e7 01       		.byte	0x1
 645 00e8 22       		.byte	0x22
 646 00e9 6B000000 		.4byte	0x6b
 647 00ed 00000000 		.4byte	.LLST0
 648 00f1 08       		.uleb128 0x8
 649 00f2 06000000 		.4byte	.LVL0
 650 00f6 BC020000 		.4byte	0x2bc
 651 00fa 08       		.uleb128 0x8
 652 00fb 16000000 		.4byte	.LVL1
 653 00ff C7020000 		.4byte	0x2c7
 654 0103 00       		.byte	0
 655 0104 06       		.uleb128 0x6
 656 0105 79020000 		.4byte	.LASF19
 657 0109 01       		.byte	0x1
 658 010a 3F       		.byte	0x3f
 659 010b 00000000 		.4byte	.LFB4
 660 010f 58000000 		.4byte	.LFE4-.LFB4
 661 0113 01       		.uleb128 0x1
 662 0114 9C       		.byte	0x9c
 663 0115 63010000 		.4byte	0x163
 664 0119 07       		.uleb128 0x7
 665 011a E7000000 		.4byte	.LASF20
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 24


 666 011e 01       		.byte	0x1
 667 011f 41       		.byte	0x41
 668 0120 6B000000 		.4byte	0x6b
 669 0124 13000000 		.4byte	.LLST1
 670 0128 09       		.uleb128 0x9
 671 0129 D4010000 		.4byte	.LASF21
 672 012d 01       		.byte	0x1
 673 012e 43       		.byte	0x43
 674 012f C1000000 		.4byte	0xc1
 675 0133 02       		.uleb128 0x2
 676 0134 91       		.byte	0x91
 677 0135 6C       		.sleb128 -20
 678 0136 08       		.uleb128 0x8
 679 0137 08000000 		.4byte	.LVL2
 680 013b BC020000 		.4byte	0x2bc
 681 013f 0A       		.uleb128 0xa
 682 0140 34000000 		.4byte	.LVL4
 683 0144 D8020000 		.4byte	0x2d8
 684 0148 52010000 		.4byte	0x152
 685 014c 0B       		.uleb128 0xb
 686 014d 01       		.uleb128 0x1
 687 014e 50       		.byte	0x50
 688 014f 01       		.uleb128 0x1
 689 0150 32       		.byte	0x32
 690 0151 00       		.byte	0
 691 0152 0C       		.uleb128 0xc
 692 0153 40000000 		.4byte	.LVL5
 693 0157 C7020000 		.4byte	0x2c7
 694 015b 0B       		.uleb128 0xb
 695 015c 01       		.uleb128 0x1
 696 015d 50       		.byte	0x50
 697 015e 02       		.uleb128 0x2
 698 015f 74       		.byte	0x74
 699 0160 00       		.sleb128 0
 700 0161 00       		.byte	0
 701 0162 00       		.byte	0
 702 0163 0D       		.uleb128 0xd
 703 0164 9E000000 		.4byte	.LASF31
 704 0168 02       		.byte	0x2
 705 0169 DE       		.byte	0xde
 706 016a 03       		.byte	0x3
 707 016b 06       		.uleb128 0x6
 708 016c 8D000000 		.4byte	.LASF22
 709 0170 01       		.byte	0x1
 710 0171 8A       		.byte	0x8a
 711 0172 00000000 		.4byte	.LFB5
 712 0176 B4000000 		.4byte	.LFE5-.LFB5
 713 017a 01       		.uleb128 0x1
 714 017b 9C       		.byte	0x9c
 715 017c B1010000 		.4byte	0x1b1
 716 0180 07       		.uleb128 0x7
 717 0181 E7000000 		.4byte	.LASF20
 718 0185 01       		.byte	0x1
 719 0186 8C       		.byte	0x8c
 720 0187 6B000000 		.4byte	0x6b
 721 018b 26000000 		.4byte	.LLST2
 722 018f 0E       		.uleb128 0xe
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 25


 723 0190 63010000 		.4byte	0x163
 724 0194 06000000 		.4byte	.LBB4
 725 0198 46000000 		.4byte	.LBE4-.LBB4
 726 019c 01       		.byte	0x1
 727 019d 92       		.byte	0x92
 728 019e 08       		.uleb128 0x8
 729 019f 06000000 		.4byte	.LVL7
 730 01a3 BC020000 		.4byte	0x2bc
 731 01a7 08       		.uleb128 0x8
 732 01a8 80000000 		.4byte	.LVL8
 733 01ac C7020000 		.4byte	0x2c7
 734 01b0 00       		.byte	0
 735 01b1 06       		.uleb128 0x6
 736 01b2 0C000000 		.4byte	.LASF23
 737 01b6 01       		.byte	0x1
 738 01b7 F2       		.byte	0xf2
 739 01b8 00000000 		.4byte	.LFB7
 740 01bc 34000000 		.4byte	.LFE7-.LFB7
 741 01c0 01       		.uleb128 0x1
 742 01c1 9C       		.byte	0x9c
 743 01c2 F7010000 		.4byte	0x1f7
 744 01c6 0F       		.uleb128 0xf
 745 01c7 99010000 		.4byte	.LASF32
 746 01cb 01       		.byte	0x1
 747 01cc F2       		.byte	0xf2
 748 01cd 83000000 		.4byte	0x83
 749 01d1 39000000 		.4byte	.LLST3
 750 01d5 07       		.uleb128 0x7
 751 01d6 E7000000 		.4byte	.LASF20
 752 01da 01       		.byte	0x1
 753 01db F4       		.byte	0xf4
 754 01dc 6B000000 		.4byte	0x6b
 755 01e0 65000000 		.4byte	.LLST4
 756 01e4 08       		.uleb128 0x8
 757 01e5 08000000 		.4byte	.LVL10
 758 01e9 BC020000 		.4byte	0x2bc
 759 01ed 08       		.uleb128 0x8
 760 01ee 28000000 		.4byte	.LVL11
 761 01f2 C7020000 		.4byte	0x2c7
 762 01f6 00       		.byte	0
 763 01f7 10       		.uleb128 0x10
 764 01f8 A2010000 		.4byte	.LASF33
 765 01fc 01       		.byte	0x1
 766 01fd 0E01     		.2byte	0x10e
 767 01ff 83000000 		.4byte	0x83
 768 0203 00000000 		.4byte	.LFB8
 769 0207 28000000 		.4byte	.LFE8-.LFB8
 770 020b 01       		.uleb128 0x1
 771 020c 9C       		.byte	0x9c
 772 020d 22020000 		.4byte	0x222
 773 0211 11       		.uleb128 0x11
 774 0212 92010000 		.4byte	.LASF24
 775 0216 01       		.byte	0x1
 776 0217 1001     		.2byte	0x110
 777 0219 83000000 		.4byte	0x83
 778 021d 78000000 		.4byte	.LLST5
 779 0221 00       		.byte	0
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 26


 780 0222 12       		.uleb128 0x12
 781 0223 BD020000 		.4byte	.LASF25
 782 0227 01       		.byte	0x1
 783 0228 3801     		.2byte	0x138
 784 022a 00000000 		.4byte	.LFB9
 785 022e 38000000 		.4byte	.LFE9-.LFB9
 786 0232 01       		.uleb128 0x1
 787 0233 9C       		.byte	0x9c
 788 0234 5B020000 		.4byte	0x25b
 789 0238 11       		.uleb128 0x11
 790 0239 E7000000 		.4byte	.LASF20
 791 023d 01       		.byte	0x1
 792 023e 3A01     		.2byte	0x13a
 793 0240 6B000000 		.4byte	0x6b
 794 0244 BB000000 		.4byte	.LLST6
 795 0248 08       		.uleb128 0x8
 796 0249 06000000 		.4byte	.LVL18
 797 024d BC020000 		.4byte	0x2bc
 798 0251 08       		.uleb128 0x8
 799 0252 28000000 		.4byte	.LVL19
 800 0256 C7020000 		.4byte	0x2c7
 801 025a 00       		.byte	0
 802 025b 06       		.uleb128 0x6
 803 025c 0E010000 		.4byte	.LASF26
 804 0260 01       		.byte	0x1
 805 0261 C5       		.byte	0xc5
 806 0262 00000000 		.4byte	.LFB6
 807 0266 30000000 		.4byte	.LFE6-.LFB6
 808 026a 01       		.uleb128 0x1
 809 026b 9C       		.byte	0x9c
 810 026c 83020000 		.4byte	0x283
 811 0270 08       		.uleb128 0x8
 812 0271 06000000 		.4byte	.LVL20
 813 0275 BC020000 		.4byte	0x2bc
 814 0279 08       		.uleb128 0x8
 815 027a 1A000000 		.4byte	.LVL21
 816 027e 22020000 		.4byte	0x222
 817 0282 00       		.byte	0
 818 0283 12       		.uleb128 0x12
 819 0284 21010000 		.4byte	.LASF27
 820 0288 01       		.byte	0x1
 821 0289 6801     		.2byte	0x168
 822 028b 00000000 		.4byte	.LFB10
 823 028f 30000000 		.4byte	.LFE10-.LFB10
 824 0293 01       		.uleb128 0x1
 825 0294 9C       		.byte	0x9c
 826 0295 BC020000 		.4byte	0x2bc
 827 0299 11       		.uleb128 0x11
 828 029a E7000000 		.4byte	.LASF20
 829 029e 01       		.byte	0x1
 830 029f 6A01     		.2byte	0x16a
 831 02a1 6B000000 		.4byte	0x6b
 832 02a5 CE000000 		.4byte	.LLST7
 833 02a9 08       		.uleb128 0x8
 834 02aa 06000000 		.4byte	.LVL22
 835 02ae BC020000 		.4byte	0x2bc
 836 02b2 08       		.uleb128 0x8
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 27


 837 02b3 24000000 		.4byte	.LVL23
 838 02b7 C7020000 		.4byte	0x2c7
 839 02bb 00       		.byte	0
 840 02bc 13       		.uleb128 0x13
 841 02bd 41010000 		.4byte	.LASF34
 842 02c1 04       		.byte	0x4
 843 02c2 E5       		.byte	0xe5
 844 02c3 6B000000 		.4byte	0x6b
 845 02c7 14       		.uleb128 0x14
 846 02c8 65010000 		.4byte	.LASF35
 847 02cc 04       		.byte	0x4
 848 02cd E6       		.byte	0xe6
 849 02ce D8020000 		.4byte	0x2d8
 850 02d2 15       		.uleb128 0x15
 851 02d3 6B000000 		.4byte	0x6b
 852 02d7 00       		.byte	0
 853 02d8 16       		.uleb128 0x16
 854 02d9 7B010000 		.4byte	.LASF36
 855 02dd 04       		.byte	0x4
 856 02de 6B       		.byte	0x6b
 857 02df 15       		.uleb128 0x15
 858 02e0 83000000 		.4byte	0x83
 859 02e4 00       		.byte	0
 860 02e5 00       		.byte	0
 861              		.section	.debug_abbrev,"",%progbits
 862              	.Ldebug_abbrev0:
 863 0000 01       		.uleb128 0x1
 864 0001 11       		.uleb128 0x11
 865 0002 01       		.byte	0x1
 866 0003 25       		.uleb128 0x25
 867 0004 0E       		.uleb128 0xe
 868 0005 13       		.uleb128 0x13
 869 0006 0B       		.uleb128 0xb
 870 0007 03       		.uleb128 0x3
 871 0008 0E       		.uleb128 0xe
 872 0009 1B       		.uleb128 0x1b
 873 000a 0E       		.uleb128 0xe
 874 000b 55       		.uleb128 0x55
 875 000c 17       		.uleb128 0x17
 876 000d 11       		.uleb128 0x11
 877 000e 01       		.uleb128 0x1
 878 000f 10       		.uleb128 0x10
 879 0010 17       		.uleb128 0x17
 880 0011 00       		.byte	0
 881 0012 00       		.byte	0
 882 0013 02       		.uleb128 0x2
 883 0014 24       		.uleb128 0x24
 884 0015 00       		.byte	0
 885 0016 0B       		.uleb128 0xb
 886 0017 0B       		.uleb128 0xb
 887 0018 3E       		.uleb128 0x3e
 888 0019 0B       		.uleb128 0xb
 889 001a 03       		.uleb128 0x3
 890 001b 0E       		.uleb128 0xe
 891 001c 00       		.byte	0
 892 001d 00       		.byte	0
 893 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 28


 894 001f 24       		.uleb128 0x24
 895 0020 00       		.byte	0
 896 0021 0B       		.uleb128 0xb
 897 0022 0B       		.uleb128 0xb
 898 0023 3E       		.uleb128 0x3e
 899 0024 0B       		.uleb128 0xb
 900 0025 03       		.uleb128 0x3
 901 0026 08       		.uleb128 0x8
 902 0027 00       		.byte	0
 903 0028 00       		.byte	0
 904 0029 04       		.uleb128 0x4
 905 002a 16       		.uleb128 0x16
 906 002b 00       		.byte	0
 907 002c 03       		.uleb128 0x3
 908 002d 0E       		.uleb128 0xe
 909 002e 3A       		.uleb128 0x3a
 910 002f 0B       		.uleb128 0xb
 911 0030 3B       		.uleb128 0x3b
 912 0031 05       		.uleb128 0x5
 913 0032 49       		.uleb128 0x49
 914 0033 13       		.uleb128 0x13
 915 0034 00       		.byte	0
 916 0035 00       		.byte	0
 917 0036 05       		.uleb128 0x5
 918 0037 35       		.uleb128 0x35
 919 0038 00       		.byte	0
 920 0039 49       		.uleb128 0x49
 921 003a 13       		.uleb128 0x13
 922 003b 00       		.byte	0
 923 003c 00       		.byte	0
 924 003d 06       		.uleb128 0x6
 925 003e 2E       		.uleb128 0x2e
 926 003f 01       		.byte	0x1
 927 0040 3F       		.uleb128 0x3f
 928 0041 19       		.uleb128 0x19
 929 0042 03       		.uleb128 0x3
 930 0043 0E       		.uleb128 0xe
 931 0044 3A       		.uleb128 0x3a
 932 0045 0B       		.uleb128 0xb
 933 0046 3B       		.uleb128 0x3b
 934 0047 0B       		.uleb128 0xb
 935 0048 27       		.uleb128 0x27
 936 0049 19       		.uleb128 0x19
 937 004a 11       		.uleb128 0x11
 938 004b 01       		.uleb128 0x1
 939 004c 12       		.uleb128 0x12
 940 004d 06       		.uleb128 0x6
 941 004e 40       		.uleb128 0x40
 942 004f 18       		.uleb128 0x18
 943 0050 9742     		.uleb128 0x2117
 944 0052 19       		.uleb128 0x19
 945 0053 01       		.uleb128 0x1
 946 0054 13       		.uleb128 0x13
 947 0055 00       		.byte	0
 948 0056 00       		.byte	0
 949 0057 07       		.uleb128 0x7
 950 0058 34       		.uleb128 0x34
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 29


 951 0059 00       		.byte	0
 952 005a 03       		.uleb128 0x3
 953 005b 0E       		.uleb128 0xe
 954 005c 3A       		.uleb128 0x3a
 955 005d 0B       		.uleb128 0xb
 956 005e 3B       		.uleb128 0x3b
 957 005f 0B       		.uleb128 0xb
 958 0060 49       		.uleb128 0x49
 959 0061 13       		.uleb128 0x13
 960 0062 02       		.uleb128 0x2
 961 0063 17       		.uleb128 0x17
 962 0064 00       		.byte	0
 963 0065 00       		.byte	0
 964 0066 08       		.uleb128 0x8
 965 0067 898201   		.uleb128 0x4109
 966 006a 00       		.byte	0
 967 006b 11       		.uleb128 0x11
 968 006c 01       		.uleb128 0x1
 969 006d 31       		.uleb128 0x31
 970 006e 13       		.uleb128 0x13
 971 006f 00       		.byte	0
 972 0070 00       		.byte	0
 973 0071 09       		.uleb128 0x9
 974 0072 34       		.uleb128 0x34
 975 0073 00       		.byte	0
 976 0074 03       		.uleb128 0x3
 977 0075 0E       		.uleb128 0xe
 978 0076 3A       		.uleb128 0x3a
 979 0077 0B       		.uleb128 0xb
 980 0078 3B       		.uleb128 0x3b
 981 0079 0B       		.uleb128 0xb
 982 007a 49       		.uleb128 0x49
 983 007b 13       		.uleb128 0x13
 984 007c 02       		.uleb128 0x2
 985 007d 18       		.uleb128 0x18
 986 007e 00       		.byte	0
 987 007f 00       		.byte	0
 988 0080 0A       		.uleb128 0xa
 989 0081 898201   		.uleb128 0x4109
 990 0084 01       		.byte	0x1
 991 0085 11       		.uleb128 0x11
 992 0086 01       		.uleb128 0x1
 993 0087 31       		.uleb128 0x31
 994 0088 13       		.uleb128 0x13
 995 0089 01       		.uleb128 0x1
 996 008a 13       		.uleb128 0x13
 997 008b 00       		.byte	0
 998 008c 00       		.byte	0
 999 008d 0B       		.uleb128 0xb
 1000 008e 8A8201   		.uleb128 0x410a
 1001 0091 00       		.byte	0
 1002 0092 02       		.uleb128 0x2
 1003 0093 18       		.uleb128 0x18
 1004 0094 9142     		.uleb128 0x2111
 1005 0096 18       		.uleb128 0x18
 1006 0097 00       		.byte	0
 1007 0098 00       		.byte	0
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 30


 1008 0099 0C       		.uleb128 0xc
 1009 009a 898201   		.uleb128 0x4109
 1010 009d 01       		.byte	0x1
 1011 009e 11       		.uleb128 0x11
 1012 009f 01       		.uleb128 0x1
 1013 00a0 31       		.uleb128 0x31
 1014 00a1 13       		.uleb128 0x13
 1015 00a2 00       		.byte	0
 1016 00a3 00       		.byte	0
 1017 00a4 0D       		.uleb128 0xd
 1018 00a5 2E       		.uleb128 0x2e
 1019 00a6 00       		.byte	0
 1020 00a7 03       		.uleb128 0x3
 1021 00a8 0E       		.uleb128 0xe
 1022 00a9 3A       		.uleb128 0x3a
 1023 00aa 0B       		.uleb128 0xb
 1024 00ab 3B       		.uleb128 0x3b
 1025 00ac 0B       		.uleb128 0xb
 1026 00ad 27       		.uleb128 0x27
 1027 00ae 19       		.uleb128 0x19
 1028 00af 20       		.uleb128 0x20
 1029 00b0 0B       		.uleb128 0xb
 1030 00b1 00       		.byte	0
 1031 00b2 00       		.byte	0
 1032 00b3 0E       		.uleb128 0xe
 1033 00b4 1D       		.uleb128 0x1d
 1034 00b5 00       		.byte	0
 1035 00b6 31       		.uleb128 0x31
 1036 00b7 13       		.uleb128 0x13
 1037 00b8 11       		.uleb128 0x11
 1038 00b9 01       		.uleb128 0x1
 1039 00ba 12       		.uleb128 0x12
 1040 00bb 06       		.uleb128 0x6
 1041 00bc 58       		.uleb128 0x58
 1042 00bd 0B       		.uleb128 0xb
 1043 00be 59       		.uleb128 0x59
 1044 00bf 0B       		.uleb128 0xb
 1045 00c0 00       		.byte	0
 1046 00c1 00       		.byte	0
 1047 00c2 0F       		.uleb128 0xf
 1048 00c3 05       		.uleb128 0x5
 1049 00c4 00       		.byte	0
 1050 00c5 03       		.uleb128 0x3
 1051 00c6 0E       		.uleb128 0xe
 1052 00c7 3A       		.uleb128 0x3a
 1053 00c8 0B       		.uleb128 0xb
 1054 00c9 3B       		.uleb128 0x3b
 1055 00ca 0B       		.uleb128 0xb
 1056 00cb 49       		.uleb128 0x49
 1057 00cc 13       		.uleb128 0x13
 1058 00cd 02       		.uleb128 0x2
 1059 00ce 17       		.uleb128 0x17
 1060 00cf 00       		.byte	0
 1061 00d0 00       		.byte	0
 1062 00d1 10       		.uleb128 0x10
 1063 00d2 2E       		.uleb128 0x2e
 1064 00d3 01       		.byte	0x1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 31


 1065 00d4 3F       		.uleb128 0x3f
 1066 00d5 19       		.uleb128 0x19
 1067 00d6 03       		.uleb128 0x3
 1068 00d7 0E       		.uleb128 0xe
 1069 00d8 3A       		.uleb128 0x3a
 1070 00d9 0B       		.uleb128 0xb
 1071 00da 3B       		.uleb128 0x3b
 1072 00db 05       		.uleb128 0x5
 1073 00dc 27       		.uleb128 0x27
 1074 00dd 19       		.uleb128 0x19
 1075 00de 49       		.uleb128 0x49
 1076 00df 13       		.uleb128 0x13
 1077 00e0 11       		.uleb128 0x11
 1078 00e1 01       		.uleb128 0x1
 1079 00e2 12       		.uleb128 0x12
 1080 00e3 06       		.uleb128 0x6
 1081 00e4 40       		.uleb128 0x40
 1082 00e5 18       		.uleb128 0x18
 1083 00e6 9742     		.uleb128 0x2117
 1084 00e8 19       		.uleb128 0x19
 1085 00e9 01       		.uleb128 0x1
 1086 00ea 13       		.uleb128 0x13
 1087 00eb 00       		.byte	0
 1088 00ec 00       		.byte	0
 1089 00ed 11       		.uleb128 0x11
 1090 00ee 34       		.uleb128 0x34
 1091 00ef 00       		.byte	0
 1092 00f0 03       		.uleb128 0x3
 1093 00f1 0E       		.uleb128 0xe
 1094 00f2 3A       		.uleb128 0x3a
 1095 00f3 0B       		.uleb128 0xb
 1096 00f4 3B       		.uleb128 0x3b
 1097 00f5 05       		.uleb128 0x5
 1098 00f6 49       		.uleb128 0x49
 1099 00f7 13       		.uleb128 0x13
 1100 00f8 02       		.uleb128 0x2
 1101 00f9 17       		.uleb128 0x17
 1102 00fa 00       		.byte	0
 1103 00fb 00       		.byte	0
 1104 00fc 12       		.uleb128 0x12
 1105 00fd 2E       		.uleb128 0x2e
 1106 00fe 01       		.byte	0x1
 1107 00ff 3F       		.uleb128 0x3f
 1108 0100 19       		.uleb128 0x19
 1109 0101 03       		.uleb128 0x3
 1110 0102 0E       		.uleb128 0xe
 1111 0103 3A       		.uleb128 0x3a
 1112 0104 0B       		.uleb128 0xb
 1113 0105 3B       		.uleb128 0x3b
 1114 0106 05       		.uleb128 0x5
 1115 0107 27       		.uleb128 0x27
 1116 0108 19       		.uleb128 0x19
 1117 0109 11       		.uleb128 0x11
 1118 010a 01       		.uleb128 0x1
 1119 010b 12       		.uleb128 0x12
 1120 010c 06       		.uleb128 0x6
 1121 010d 40       		.uleb128 0x40
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 32


 1122 010e 18       		.uleb128 0x18
 1123 010f 9742     		.uleb128 0x2117
 1124 0111 19       		.uleb128 0x19
 1125 0112 01       		.uleb128 0x1
 1126 0113 13       		.uleb128 0x13
 1127 0114 00       		.byte	0
 1128 0115 00       		.byte	0
 1129 0116 13       		.uleb128 0x13
 1130 0117 2E       		.uleb128 0x2e
 1131 0118 00       		.byte	0
 1132 0119 3F       		.uleb128 0x3f
 1133 011a 19       		.uleb128 0x19
 1134 011b 03       		.uleb128 0x3
 1135 011c 0E       		.uleb128 0xe
 1136 011d 3A       		.uleb128 0x3a
 1137 011e 0B       		.uleb128 0xb
 1138 011f 3B       		.uleb128 0x3b
 1139 0120 0B       		.uleb128 0xb
 1140 0121 27       		.uleb128 0x27
 1141 0122 19       		.uleb128 0x19
 1142 0123 49       		.uleb128 0x49
 1143 0124 13       		.uleb128 0x13
 1144 0125 3C       		.uleb128 0x3c
 1145 0126 19       		.uleb128 0x19
 1146 0127 00       		.byte	0
 1147 0128 00       		.byte	0
 1148 0129 14       		.uleb128 0x14
 1149 012a 2E       		.uleb128 0x2e
 1150 012b 01       		.byte	0x1
 1151 012c 3F       		.uleb128 0x3f
 1152 012d 19       		.uleb128 0x19
 1153 012e 03       		.uleb128 0x3
 1154 012f 0E       		.uleb128 0xe
 1155 0130 3A       		.uleb128 0x3a
 1156 0131 0B       		.uleb128 0xb
 1157 0132 3B       		.uleb128 0x3b
 1158 0133 0B       		.uleb128 0xb
 1159 0134 27       		.uleb128 0x27
 1160 0135 19       		.uleb128 0x19
 1161 0136 3C       		.uleb128 0x3c
 1162 0137 19       		.uleb128 0x19
 1163 0138 01       		.uleb128 0x1
 1164 0139 13       		.uleb128 0x13
 1165 013a 00       		.byte	0
 1166 013b 00       		.byte	0
 1167 013c 15       		.uleb128 0x15
 1168 013d 05       		.uleb128 0x5
 1169 013e 00       		.byte	0
 1170 013f 49       		.uleb128 0x49
 1171 0140 13       		.uleb128 0x13
 1172 0141 00       		.byte	0
 1173 0142 00       		.byte	0
 1174 0143 16       		.uleb128 0x16
 1175 0144 2E       		.uleb128 0x2e
 1176 0145 01       		.byte	0x1
 1177 0146 3F       		.uleb128 0x3f
 1178 0147 19       		.uleb128 0x19
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 33


 1179 0148 03       		.uleb128 0x3
 1180 0149 0E       		.uleb128 0xe
 1181 014a 3A       		.uleb128 0x3a
 1182 014b 0B       		.uleb128 0xb
 1183 014c 3B       		.uleb128 0x3b
 1184 014d 0B       		.uleb128 0xb
 1185 014e 27       		.uleb128 0x27
 1186 014f 19       		.uleb128 0x19
 1187 0150 3C       		.uleb128 0x3c
 1188 0151 19       		.uleb128 0x19
 1189 0152 00       		.byte	0
 1190 0153 00       		.byte	0
 1191 0154 00       		.byte	0
 1192              		.section	.debug_loc,"",%progbits
 1193              	.Ldebug_loc0:
 1194              	.LLST0:
 1195 0000 06000000 		.4byte	.LVL0
 1196 0004 15000000 		.4byte	.LVL1-1
 1197 0008 0100     		.2byte	0x1
 1198 000a 50       		.byte	0x50
 1199 000b 00000000 		.4byte	0
 1200 000f 00000000 		.4byte	0
 1201              	.LLST1:
 1202 0013 0A000000 		.4byte	.LVL3
 1203 0017 42000000 		.4byte	.LVL6
 1204 001b 0100     		.2byte	0x1
 1205 001d 54       		.byte	0x54
 1206 001e 00000000 		.4byte	0
 1207 0022 00000000 		.4byte	0
 1208              	.LLST2:
 1209 0026 06000000 		.4byte	.LVL7
 1210 002a 7F000000 		.4byte	.LVL8-1
 1211 002e 0100     		.2byte	0x1
 1212 0030 50       		.byte	0x50
 1213 0031 00000000 		.4byte	0
 1214 0035 00000000 		.4byte	0
 1215              	.LLST3:
 1216 0039 00000000 		.4byte	.LVL9
 1217 003d 07000000 		.4byte	.LVL10-1
 1218 0041 0100     		.2byte	0x1
 1219 0043 50       		.byte	0x50
 1220 0044 07000000 		.4byte	.LVL10-1
 1221 0048 28000000 		.4byte	.LVL12
 1222 004c 0100     		.2byte	0x1
 1223 004e 54       		.byte	0x54
 1224 004f 28000000 		.4byte	.LVL12
 1225 0053 34000000 		.4byte	.LFE7
 1226 0057 0400     		.2byte	0x4
 1227 0059 F3       		.byte	0xf3
 1228 005a 01       		.uleb128 0x1
 1229 005b 50       		.byte	0x50
 1230 005c 9F       		.byte	0x9f
 1231 005d 00000000 		.4byte	0
 1232 0061 00000000 		.4byte	0
 1233              	.LLST4:
 1234 0065 08000000 		.4byte	.LVL10
 1235 0069 27000000 		.4byte	.LVL11-1
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 34


 1236 006d 0100     		.2byte	0x1
 1237 006f 50       		.byte	0x50
 1238 0070 00000000 		.4byte	0
 1239 0074 00000000 		.4byte	0
 1240              	.LLST5:
 1241 0078 00000000 		.4byte	.LVL13
 1242 007c 18000000 		.4byte	.LVL14
 1243 0080 0200     		.2byte	0x2
 1244 0082 30       		.byte	0x30
 1245 0083 9F       		.byte	0x9f
 1246 0084 18000000 		.4byte	.LVL14
 1247 0088 1C000000 		.4byte	.LVL15
 1248 008c 0200     		.2byte	0x2
 1249 008e 32       		.byte	0x32
 1250 008f 9F       		.byte	0x9f
 1251 0090 1C000000 		.4byte	.LVL15
 1252 0094 20000000 		.4byte	.LVL16
 1253 0098 0200     		.2byte	0x2
 1254 009a 33       		.byte	0x33
 1255 009b 9F       		.byte	0x9f
 1256 009c 20000000 		.4byte	.LVL16
 1257 00a0 22000000 		.4byte	.LVL17
 1258 00a4 0200     		.2byte	0x2
 1259 00a6 30       		.byte	0x30
 1260 00a7 9F       		.byte	0x9f
 1261 00a8 22000000 		.4byte	.LVL17
 1262 00ac 28000000 		.4byte	.LFE8
 1263 00b0 0100     		.2byte	0x1
 1264 00b2 50       		.byte	0x50
 1265 00b3 00000000 		.4byte	0
 1266 00b7 00000000 		.4byte	0
 1267              	.LLST6:
 1268 00bb 06000000 		.4byte	.LVL18
 1269 00bf 27000000 		.4byte	.LVL19-1
 1270 00c3 0100     		.2byte	0x1
 1271 00c5 50       		.byte	0x50
 1272 00c6 00000000 		.4byte	0
 1273 00ca 00000000 		.4byte	0
 1274              	.LLST7:
 1275 00ce 06000000 		.4byte	.LVL22
 1276 00d2 23000000 		.4byte	.LVL23-1
 1277 00d6 0100     		.2byte	0x1
 1278 00d8 50       		.byte	0x50
 1279 00d9 00000000 		.4byte	0
 1280 00dd 00000000 		.4byte	0
 1281              		.section	.debug_aranges,"",%progbits
 1282 0000 54000000 		.4byte	0x54
 1283 0004 0200     		.2byte	0x2
 1284 0006 00000000 		.4byte	.Ldebug_info0
 1285 000a 04       		.byte	0x4
 1286 000b 00       		.byte	0
 1287 000c 0000     		.2byte	0
 1288 000e 0000     		.2byte	0
 1289 0010 00000000 		.4byte	.LFB3
 1290 0014 1C000000 		.4byte	.LFE3-.LFB3
 1291 0018 00000000 		.4byte	.LFB4
 1292 001c 58000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 35


 1293 0020 00000000 		.4byte	.LFB5
 1294 0024 B4000000 		.4byte	.LFE5-.LFB5
 1295 0028 00000000 		.4byte	.LFB7
 1296 002c 34000000 		.4byte	.LFE7-.LFB7
 1297 0030 00000000 		.4byte	.LFB8
 1298 0034 28000000 		.4byte	.LFE8-.LFB8
 1299 0038 00000000 		.4byte	.LFB9
 1300 003c 38000000 		.4byte	.LFE9-.LFB9
 1301 0040 00000000 		.4byte	.LFB6
 1302 0044 30000000 		.4byte	.LFE6-.LFB6
 1303 0048 00000000 		.4byte	.LFB10
 1304 004c 30000000 		.4byte	.LFE10-.LFB10
 1305 0050 00000000 		.4byte	0
 1306 0054 00000000 		.4byte	0
 1307              		.section	.debug_ranges,"",%progbits
 1308              	.Ldebug_ranges0:
 1309 0000 00000000 		.4byte	.LFB3
 1310 0004 1C000000 		.4byte	.LFE3
 1311 0008 00000000 		.4byte	.LFB4
 1312 000c 58000000 		.4byte	.LFE4
 1313 0010 00000000 		.4byte	.LFB5
 1314 0014 B4000000 		.4byte	.LFE5
 1315 0018 00000000 		.4byte	.LFB7
 1316 001c 34000000 		.4byte	.LFE7
 1317 0020 00000000 		.4byte	.LFB8
 1318 0024 28000000 		.4byte	.LFE8
 1319 0028 00000000 		.4byte	.LFB9
 1320 002c 38000000 		.4byte	.LFE9
 1321 0030 00000000 		.4byte	.LFB6
 1322 0034 30000000 		.4byte	.LFE6
 1323 0038 00000000 		.4byte	.LFB10
 1324 003c 30000000 		.4byte	.LFE10
 1325 0040 00000000 		.4byte	0
 1326 0044 00000000 		.4byte	0
 1327              		.section	.debug_line,"",%progbits
 1328              	.Ldebug_line0:
 1329 0000 3F010000 		.section	.debug_str,"MS",%progbits,1
 1329      02005600 
 1329      00000201 
 1329      FB0E0D00 
 1329      01010101 
 1330              	.LASF15:
 1331 0000 72656731 		.ascii	"reg16\000"
 1331      3600
 1332              	.LASF16:
 1333 0006 72656733 		.ascii	"reg32\000"
 1333      3200
 1334              	.LASF23:
 1335 000c 43795379 		.ascii	"CySysPmSetWakeupPolarity\000"
 1335      73506D53 
 1335      65745761 
 1335      6B657570 
 1335      506F6C61 
 1336              	.LASF18:
 1337 0025 43795379 		.ascii	"CySysPmSleep\000"
 1337      73506D53 
 1337      6C656570 
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 36


 1337      00
 1338              	.LASF3:
 1339 0032 73686F72 		.ascii	"short unsigned int\000"
 1339      7420756E 
 1339      7369676E 
 1339      65642069 
 1339      6E7400
 1340              	.LASF30:
 1341 0045 443A5C43 		.ascii	"D:\\Chau Nguyen\\OneDrive\\Arrow\\RangDong\\RangDon"
 1341      68617520 
 1341      4E677579 
 1341      656E5C4F 
 1341      6E654472 
 1342 0073 6744656D 		.ascii	"gDemo\\BLE_RGB_TOUCH.cydsn\000"
 1342      6F5C424C 
 1342      455F5247 
 1342      425F544F 
 1342      5543482E 
 1343              	.LASF22:
 1344 008d 43795379 		.ascii	"CySysPmHibernate\000"
 1344      73506D48 
 1344      69626572 
 1344      6E617465 
 1344      00
 1345              	.LASF31:
 1346 009e 43795379 		.ascii	"CySysPmHibPinsDisableInputBuf\000"
 1346      73506D48 
 1346      69625069 
 1346      6E734469 
 1346      7361626C 
 1347              	.LASF12:
 1348 00bc 666C6F61 		.ascii	"float\000"
 1348      7400
 1349              	.LASF7:
 1350 00c2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1350      206C6F6E 
 1350      6720756E 
 1350      7369676E 
 1350      65642069 
 1351              	.LASF1:
 1352 00d9 756E7369 		.ascii	"unsigned char\000"
 1352      676E6564 
 1352      20636861 
 1352      7200
 1353              	.LASF20:
 1354 00e7 696E7465 		.ascii	"interruptState\000"
 1354      72727570 
 1354      74537461 
 1354      746500
 1355              	.LASF5:
 1356 00f6 6C6F6E67 		.ascii	"long unsigned int\000"
 1356      20756E73 
 1356      69676E65 
 1356      6420696E 
 1356      7400
 1357              	.LASF9:
 1358 0108 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 37


 1358      3800
 1359              	.LASF26:
 1360 010e 43795379 		.ascii	"CySysPmStop\000"
 1360      73506D53 
 1360      746F7000 
 1361              	.LASF13:
 1362 011a 646F7562 		.ascii	"double\000"
 1362      6C6500
 1363              	.LASF27:
 1364 0121 43795379 		.ascii	"CySysPmUnfreezeIo\000"
 1364      73506D55 
 1364      6E667265 
 1364      657A6549 
 1364      6F00
 1365              	.LASF10:
 1366 0133 75696E74 		.ascii	"uint16\000"
 1366      313600
 1367              	.LASF11:
 1368 013a 75696E74 		.ascii	"uint32\000"
 1368      333200
 1369              	.LASF34:
 1370 0141 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1370      74657243 
 1370      72697469 
 1370      63616C53 
 1370      65637469 
 1371              	.LASF8:
 1372 0158 756E7369 		.ascii	"unsigned int\000"
 1372      676E6564 
 1372      20696E74 
 1372      00
 1373              	.LASF35:
 1374 0165 43794578 		.ascii	"CyExitCriticalSection\000"
 1374      69744372 
 1374      69746963 
 1374      616C5365 
 1374      6374696F 
 1375              	.LASF36:
 1376 017b 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 1376      73436C6B 
 1376      57726974 
 1376      65537973 
 1376      636C6B44 
 1377              	.LASF24:
 1378 0192 72656173 		.ascii	"reason\000"
 1378      6F6E00
 1379              	.LASF32:
 1380 0199 706F6C61 		.ascii	"polarity\000"
 1380      72697479 
 1380      00
 1381              	.LASF33:
 1382 01a2 43795379 		.ascii	"CySysPmGetResetReason\000"
 1382      73506D47 
 1382      65745265 
 1382      73657452 
 1382      6561736F 
 1383              	.LASF17:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 38


 1384 01b8 73697A65 		.ascii	"sizetype\000"
 1384      74797065 
 1384      00
 1385              	.LASF6:
 1386 01c1 6C6F6E67 		.ascii	"long long int\000"
 1386      206C6F6E 
 1386      6720696E 
 1386      7400
 1387              	.LASF14:
 1388 01cf 63686172 		.ascii	"char\000"
 1388      00
 1389              	.LASF21:
 1390 01d4 636C6B53 		.ascii	"clkSelectReg\000"
 1390      656C6563 
 1390      74526567 
 1390      00
 1391              	.LASF28:
 1392 01e1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1392      4320342E 
 1392      392E3320 
 1392      32303135 
 1392      30333033 
 1393 0214 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1393      20726576 
 1393      6973696F 
 1393      6E203232 
 1393      31323230 
 1394 0247 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1394      66756E63 
 1394      74696F6E 
 1394      2D736563 
 1394      74696F6E 
 1395              	.LASF2:
 1396 026f 73686F72 		.ascii	"short int\000"
 1396      7420696E 
 1396      7400
 1397              	.LASF19:
 1398 0279 43795379 		.ascii	"CySysPmDeepSleep\000"
 1398      73506D44 
 1398      65657053 
 1398      6C656570 
 1398      00
 1399              	.LASF4:
 1400 028a 6C6F6E67 		.ascii	"long int\000"
 1400      20696E74 
 1400      00
 1401              	.LASF29:
 1402 0293 47656E65 		.ascii	"Generated_Source\\PSoC4\\cyPm.c\000"
 1402      72617465 
 1402      645F536F 
 1402      75726365 
 1402      5C50536F 
 1403              	.LASF0:
 1404 02b1 7369676E 		.ascii	"signed char\000"
 1404      65642063 
 1404      68617200 
 1405              	.LASF25:
ARM GAS  C:\Users\a83571\AppData\Local\Temp\ccJ40PgJ.s 			page 39


 1406 02bd 43795379 		.ascii	"CySysPmFreezeIo\000"
 1406      73506D46 
 1406      7265657A 
 1406      65496F00 
 1407              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
